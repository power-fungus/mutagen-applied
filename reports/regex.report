
Tests without mutations
target/debug/deps/backtrack_bytes-eddc129de9cc7dbc ... ok
target/debug/deps/default-9074e62e2064b14f ... ok
target/debug/deps/regex-4ae55a8242a81007 ... ok
target/debug/deps/crates_regex-04622285e659a287 ... ok
target/debug/deps/nfa_utf8bytes-2efa4633c77fd56b ... ok
target/debug/deps/nfa-676f6944b7b449ac ... ok
target/debug/deps/backtrack-a70429e206967e77 ... ok
target/debug/deps/nfa_bytes-012049940cda09bb ... ok
target/debug/deps/default_bytes-4cd8be40d09f8765 ... ok
target/debug/deps/backtrack_utf8bytes-07d09434ce115dea ... ok

Test 1707 Mutants
1: stmt_call, remove `self . m . jobs . clear () ;`, at src/backtrack.rs@110:8-110:27(fn Bounded < 'a, 'm, 'r, 's, I >::clear) ... SURVIVED
2: lit_int, replace `1` with `2`, at src/backtrack.rs@123:51-123:52(fn Bounded < 'a, 'm, 'r, 's, I >::clear) ... SURVIVED
3: lit_int, replace `1` with `0`, at src/backtrack.rs@123:51-123:52(fn Bounded < 'a, 'm, 'r, 's, I >::clear) ... SURVIVED
4: binop_num, replace `+` with `-`, at src/backtrack.rs@123:49-123:50(fn Bounded < 'a, 'm, 'r, 's, I >::clear) ... SURVIVED
5: binop_num, replace `*` with `/`, at src/backtrack.rs@123:29-123:30(fn Bounded < 'a, 'm, 'r, 's, I >::clear) ... SURVIVED
6: binop_num, replace `+` with `-`, at src/backtrack.rs@123:54-123:55(fn Bounded < 'a, 'm, 'r, 's, I >::clear) ... killed
7: lit_int, replace `1` with `2`, at src/backtrack.rs@123:67-123:68(fn Bounded < 'a, 'm, 'r, 's, I >::clear) ... SURVIVED
8: lit_int, replace `1` with `0`, at src/backtrack.rs@123:67-123:68(fn Bounded < 'a, 'm, 'r, 's, I >::clear) ... SURVIVED
9: binop_num, replace `-` with `+`, at src/backtrack.rs@123:65-123:66(fn Bounded < 'a, 'm, 'r, 's, I >::clear) ... SURVIVED
10: binop_num, replace `/` with `*`, at src/backtrack.rs@124:16-124:17(fn Bounded < 'a, 'm, 'r, 's, I >::clear) ... SURVIVED
11: stmt_call, remove `self . m . visited . truncate (visited_len) ;`, at src/backtrack.rs@125:8-125:44(fn Bounded < 'a, 'm, 'r, 's, I >::clear) ... SURVIVED
12: lit_int, replace `0` with `1`, at src/backtrack.rs@127:17-127:18(fn Bounded < 'a, 'm, 'r, 's, I >::clear) ... SURVIVED
13: binop_cmp, replace `>` with `<`, at src/backtrack.rs@129:23-129:24(fn Bounded < 'a, 'm, 'r, 's, I >::clear) ... killed
14: binop_cmp, replace `>` with `<=`, at src/backtrack.rs@129:23-129:24(fn Bounded < 'a, 'm, 'r, 's, I >::clear) ... killed
15: binop_cmp, replace `>` with `>=`, at src/backtrack.rs@129:23-129:24(fn Bounded < 'a, 'm, 'r, 's, I >::clear) ... SURVIVED
16: binop_num, replace `-` with `+`, at src/backtrack.rs@131:53-131:54(fn Bounded < 'a, 'm, 'r, 's, I >::clear) ... SURVIVED
17: stmt_call, remove `self . m . visited . reserve_exact (visited_len - len) ;`, at src/backtrack.rs@131:12-131:59(fn Bounded < 'a, 'm, 'r, 's, I >::clear) ... SURVIVED
18: lit_int, replace `0` with `1`, at src/backtrack.rs@132:21-132:22(fn Bounded < 'a, 'm, 'r, 's, I >::clear) ... killed
19: binop_num, replace `-` with `+`, at src/backtrack.rs@132:37-132:38(fn Bounded < 'a, 'm, 'r, 's, I >::clear) ... SURVIVED
20: lit_int, replace `0` with `1`, at src/backtrack.rs@133:36-133:37(fn Bounded < 'a, 'm, 'r, 's, I >::clear) ... killed
21: stmt_call, remove `self . m . visited . push (0) ;`, at src/backtrack.rs@133:16-133:38(fn Bounded < 'a, 'm, 'r, 's, I >::clear) ... killed
22: stmt_call, remove `self . clear () ;`, at src/backtrack.rs@141:8-141:20(fn Bounded < 'a, 'm, 'r, 's, I >::exec_) ... killed
23: unop_not, remove `!`, at src/backtrack.rs@145:22-145:23(fn Bounded < 'a, 'm, 'r, 's, I >::exec_) ... killed
24: lit_bool, replace `false` with `true`, at src/backtrack.rs@145:39-145:44(fn Bounded < 'a, 'm, 'r, 's, I >::exec_) ... SURVIVED
25: lit_bool, replace `false` with `true`, at src/backtrack.rs@147:26-147:31(fn Bounded < 'a, 'm, 'r, 's, I >::exec_) ... NOT COVERED
26: unop_not, remove `!`, at src/backtrack.rs@149:15-149:16(fn Bounded < 'a, 'm, 'r, 's, I >::exec_) ... NOT COVERED
27: binop_bool, replace `||` with `&&`, at src/backtrack.rs@155:41-155:43(fn Bounded < 'a, 'm, 'r, 's, I >::exec_) ... NOT COVERED
28: lit_int, replace `1` with `2`, at src/backtrack.rs@156:53-156:54(fn Bounded < 'a, 'm, 'r, 's, I >::exec_) ... NOT COVERED
29: lit_int, replace `1` with `0`, at src/backtrack.rs@156:53-156:54(fn Bounded < 'a, 'm, 'r, 's, I >::exec_) ... NOT COVERED
30: binop_eq, replace `==` with `!=`, at src/backtrack.rs@156:50-156:52(fn Bounded < 'a, 'm, 'r, 's, I >::exec_) ... NOT COVERED
31: binop_bool, replace `&&` with `||`, at src/backtrack.rs@156:23-156:25(fn Bounded < 'a, 'm, 'r, 's, I >::exec_) ... NOT COVERED
32: lit_bool, replace `true` with `false`, at src/backtrack.rs@157:23-157:27(fn Bounded < 'a, 'm, 'r, 's, I >::exec_) ... NOT COVERED
33: binop_cmp, replace `>=` with `<`, at src/backtrack.rs@159:24-159:26(fn Bounded < 'a, 'm, 'r, 's, I >::exec_) ... NOT COVERED
34: binop_cmp, replace `>=` with `<=`, at src/backtrack.rs@159:24-159:26(fn Bounded < 'a, 'm, 'r, 's, I >::exec_) ... NOT COVERED
35: binop_cmp, replace `>=` with `>`, at src/backtrack.rs@159:24-159:26(fn Bounded < 'a, 'm, 'r, 's, I >::exec_) ... NOT COVERED
36: lit_bool, replace `false` with `true`, at src/backtrack.rs@173:26-173:31(fn Bounded < 'a, 'm, 'r, 's, I >::backtrack) ... SURVIVED
37: lit_int, replace `0` with `1`, at src/backtrack.rs@174:41-174:42(fn Bounded < 'a, 'm, 'r, 's, I >::backtrack) ... killed
38: stmt_call, remove `self . m . jobs . push (Job :: Inst { ip : 0, at : start }) ;`, at src/backtrack.rs@174:8-174:56(fn Bounded < 'a, 'm, 'r, 's, I >::backtrack) ... killed
39: lit_int, replace `1` with `2`, at src/backtrack.rs@182:54-182:55(fn Bounded < 'a, 'm, 'r, 's, I >::backtrack) ... killed
40: lit_int, replace `1` with `0`, at src/backtrack.rs@182:54-182:55(fn Bounded < 'a, 'm, 'r, 's, I >::backtrack) ... killed
41: binop_eq, replace `==` with `!=`, at src/backtrack.rs@182:51-182:53(fn Bounded < 'a, 'm, 'r, 's, I >::backtrack) ... killed
42: lit_bool, replace `true` with `false`, at src/backtrack.rs@183:35-183:39(fn Bounded < 'a, 'm, 'r, 's, I >::backtrack) ... killed
43: lit_bool, replace `true` with `false`, at src/backtrack.rs@185:34-185:38(fn Bounded < 'a, 'm, 'r, 's, I >::backtrack) ... NOT COVERED
44: binop_cmp, replace `<` with `<=`, at src/backtrack.rs@189:28-189:29(fn Bounded < 'a, 'm, 'r, 's, I >::backtrack) ... NOT COVERED
45: binop_cmp, replace `<` with `>=`, at src/backtrack.rs@189:28-189:29(fn Bounded < 'a, 'm, 'r, 's, I >::backtrack) ... NOT COVERED
46: binop_cmp, replace `<` with `>`, at src/backtrack.rs@189:28-189:29(fn Bounded < 'a, 'm, 'r, 's, I >::backtrack) ... NOT COVERED
47: lit_bool, replace `false` with `true`, at src/backtrack.rs@206:23-206:28(fn Bounded < 'a, 'm, 'r, 's, I >::step) ... NOT COVERED
48: binop_cmp, replace `<` with `<=`, at src/backtrack.rs@210:28-210:29(fn Bounded < 'a, 'm, 'r, 's, I >::step) ... SURVIVED
49: binop_cmp, replace `<` with `>=`, at src/backtrack.rs@210:28-210:29(fn Bounded < 'a, 'm, 'r, 's, I >::step) ... SURVIVED
50: binop_cmp, replace `<` with `>`, at src/backtrack.rs@210:28-210:29(fn Bounded < 'a, 'm, 'r, 's, I >::step) ... SURVIVED
51: lit_bool, replace `true` with `false`, at src/backtrack.rs@211:45-211:49(fn Bounded < 'a, 'm, 'r, 's, I >::step) ... SURVIVED
52: lit_bool, replace `true` with `false`, at src/backtrack.rs@213:27-213:31(fn Bounded < 'a, 'm, 'r, 's, I >::step) ... killed
53: stmt_call, remove `self . m . jobs . push (Job :: SaveRestore { slot : inst . slot, old_pos : old_pos, }) ;`, at src/backtrack.rs@221:24-224:26(fn Bounded < 'a, 'm, 'r, 's, I >::step) ... SURVIVED
54: stmt_call, remove `self . m . jobs . push (Job :: Inst { ip : inst . goto2, at : at }) ;`, at src/backtrack.rs@230:20-230:74(fn Bounded < 'a, 'm, 'r, 's, I >::step) ... NOT COVERED
55: lit_bool, replace `false` with `true`, at src/backtrack.rs@237:31-237:36(fn Bounded < 'a, 'm, 'r, 's, I >::step) ... NOT COVERED
56: binop_eq, replace `==` with `!=`, at src/backtrack.rs@241:30-241:32(fn Bounded < 'a, 'm, 'r, 's, I >::step) ... killed
57: lit_bool, replace `false` with `true`, at src/backtrack.rs@245:31-245:36(fn Bounded < 'a, 'm, 'r, 's, I >::step) ... NOT COVERED
58: lit_bool, replace `false` with `true`, at src/backtrack.rs@253:31-253:36(fn Bounded < 'a, 'm, 'r, 's, I >::step) ... NOT COVERED
59: lit_bool, replace `false` with `true`, at src/backtrack.rs@264:27-264:32(fn Bounded < 'a, 'm, 'r, 's, I >::step) ... NOT COVERED
60: lit_int, replace `1` with `2`, at src/backtrack.rs@271:41-271:42(fn Bounded < 'a, 'm, 'r, 's, I >::has_visited) ... SURVIVED
61: lit_int, replace `1` with `0`, at src/backtrack.rs@271:41-271:42(fn Bounded < 'a, 'm, 'r, 's, I >::has_visited) ... SURVIVED
62: binop_num, replace `+` with `-`, at src/backtrack.rs@271:39-271:40(fn Bounded < 'a, 'm, 'r, 's, I >::has_visited) ... SURVIVED
63: binop_num, replace `*` with `/`, at src/backtrack.rs@271:19-271:20(fn Bounded < 'a, 'm, 'r, 's, I >::has_visited) ... killed
64: binop_num, replace `+` with `-`, at src/backtrack.rs@271:44-271:45(fn Bounded < 'a, 'm, 'r, 's, I >::has_visited) ... SURVIVED
65: binop_num, replace `/` with `*`, at src/backtrack.rs@272:19-272:20(fn Bounded < 'a, 'm, 'r, 's, I >::has_visited) ... killed
66: lit_int, replace `1` with `2`, at src/backtrack.rs@273:30-273:31(fn Bounded < 'a, 'm, 'r, 's, I >::has_visited) ... SURVIVED
67: lit_int, replace `1` with `0`, at src/backtrack.rs@273:30-273:31(fn Bounded < 'a, 'm, 'r, 's, I >::has_visited) ... SURVIVED
68: lit_int, replace `1` with `2`, at src/backtrack.rs@273:52-273:53(fn Bounded < 'a, 'm, 'r, 's, I >::has_visited) ... SURVIVED
69: lit_int, replace `1` with `0`, at src/backtrack.rs@273:52-273:53(fn Bounded < 'a, 'm, 'r, 's, I >::has_visited) ... killed
70: binop_num, replace `-` with `+`, at src/backtrack.rs@273:50-273:51(fn Bounded < 'a, 'm, 'r, 's, I >::has_visited) ... killed
71: binop_bit, replace `&` with `|`, at src/backtrack.rs@273:38-273:39(fn Bounded < 'a, 'm, 'r, 's, I >::has_visited) ... killed
72: binop_bit, replace `&` with `^`, at src/backtrack.rs@273:38-273:39(fn Bounded < 'a, 'm, 'r, 's, I >::has_visited) ... SURVIVED
73: binop_bit, replace `&` with `|`, at src/backtrack.rs@274:30-274:31(fn Bounded < 'a, 'm, 'r, 's, I >::has_visited) ... killed
74: binop_bit, replace `&` with `^`, at src/backtrack.rs@274:30-274:31(fn Bounded < 'a, 'm, 'r, 's, I >::has_visited) ... killed
75: lit_int, replace `0` with `1`, at src/backtrack.rs@274:38-274:39(fn Bounded < 'a, 'm, 'r, 's, I >::has_visited) ... killed
76: binop_eq, replace `==` with `!=`, at src/backtrack.rs@274:35-274:37(fn Bounded < 'a, 'm, 'r, 's, I >::has_visited) ... killed
77: lit_bool, replace `false` with `true`, at src/backtrack.rs@276:12-276:17(fn Bounded < 'a, 'm, 'r, 's, I >::has_visited) ... killed
78: lit_bool, replace `true` with `false`, at src/backtrack.rs@278:12-278:16(fn Bounded < 'a, 'm, 'r, 's, I >::has_visited) ... NOT COVERED
79: binop_cmp, replace `>` with `<`, at src/backtrack.rs@284:18-284:19(fn usize_to_u32) ... killed
80: binop_cmp, replace `>` with `<=`, at src/backtrack.rs@284:18-284:19(fn usize_to_u32) ... killed
81: binop_cmp, replace `>` with `>=`, at src/backtrack.rs@284:18-284:19(fn usize_to_u32) ... SURVIVED
82: lit_int, replace `0` with `1`, at src/compile.rs@47:23-47:24(fn Compiler::new) ... SURVIVED
83: lit_int, replace `10` with `11`, at src/compile.rs@48:24-48:26(fn Compiler::new) ... SURVIVED
84: lit_int, replace `10` with `9`, at src/compile.rs@48:24-48:26(fn Compiler::new) ... SURVIVED
85: lit_int, replace `1` with `2`, at src/compile.rs@48:30-48:31(fn Compiler::new) ... SURVIVED
86: lit_int, replace `1` with `0`, at src/compile.rs@48:30-48:31(fn Compiler::new) ... SURVIVED
87: lit_int, replace `20` with `21`, at src/compile.rs@48:35-48:37(fn Compiler::new) ... SURVIVED
88: lit_int, replace `20` with `19`, at src/compile.rs@48:35-48:37(fn Compiler::new) ... SURVIVED
89: binop_num, replace `*` with `/`, at src/compile.rs@48:27-48:28(fn Compiler::new) ... SURVIVED
90: lit_int, replace `1000` with `1001`, at src/compile.rs@49:43-49:47(fn Compiler::new) ... SURVIVED
91: lit_int, replace `1000` with `999`, at src/compile.rs@49:43-49:47(fn Compiler::new) ... SURVIVED
92: lit_int, replace `1` with `2`, at src/compile.rs@115:26-115:27(fn Compiler::compile) ... killed
93: lit_int, replace `1` with `0`, at src/compile.rs@115:26-115:27(fn Compiler::compile) ... killed
94: binop_eq, replace `==` with `!=`, at src/compile.rs@115:23-115:25(fn Compiler::compile) ... killed
95: lit_int, replace `0` with `1`, at src/compile.rs@116:36-116:37(fn Compiler::compile) ... killed
96: lit_int, replace `0` with `1`, at src/compile.rs@127:65-127:66(fn Compiler::compile_one) ... SURVIVED
97: lit_int, replace `0` with `1`, at src/compile.rs@135:35-135:36(fn Compiler::compile_one) ... killed
98: stmt_call, remove `self . fill (dotstar_patch . hole, patch . entry) ;`, at src/compile.rs@137:12-137:54(fn Compiler::compile_one) ... NOT COVERED
99: stmt_call, remove `self . fill_to_next (patch . hole) ;`, at src/compile.rs@141:8-141:37(fn Compiler::compile_one) ... killed
100: lit_int, replace `0` with `1`, at src/compile.rs@143:39-143:40(fn Compiler::compile_one) ... SURVIVED
101: stmt_call, remove `self . push_compiled (Inst :: Match (0)) ;`, at src/compile.rs@143:8-143:42(fn Compiler::compile_one) ... killed
102: lit_int, replace `0` with `1`, at src/compile.rs@157:65-157:66(fn Compiler::compile_many) ... NOT COVERED
103: lit_int, replace `0` with `1`, at src/compile.rs@162:34-162:35(fn Compiler::compile_many) ... NOT COVERED
104: stmt_call, remove `self . fill_to_next (dotstar_patch . hole) ;`, at src/compile.rs@164:8-164:45(fn Compiler::compile_many) ... NOT COVERED
105: lit_int, replace `0` with `1`, at src/compile.rs@167:31-167:32(fn Compiler::compile_many) ... NOT COVERED
106: lit_int, replace `1` with `2`, at src/compile.rs@167:48-167:49(fn Compiler::compile_many) ... NOT COVERED
107: lit_int, replace `1` with `0`, at src/compile.rs@167:48-167:49(fn Compiler::compile_many) ... NOT COVERED
108: binop_num, replace `-` with `+`, at src/compile.rs@167:46-167:47(fn Compiler::compile_many) ... NOT COVERED
109: stmt_call, remove `self . fill_to_next (prev_hole) ;`, at src/compile.rs@168:12-168:40(fn Compiler::compile_many) ... NOT COVERED
110: lit_int, replace `0` with `1`, at src/compile.rs@170:55-170:56(fn Compiler::compile_many) ... NOT COVERED
111: stmt_call, remove `self . fill_to_next (hole) ;`, at src/compile.rs@171:12-171:35(fn Compiler::compile_many) ... NOT COVERED
112: stmt_call, remove `self . compiled . matches . push (self . insts . len ()) ;`, at src/compile.rs@172:12-172:56(fn Compiler::compile_many) ... NOT COVERED
113: stmt_call, remove `self . push_compiled (Inst :: Match (i)) ;`, at src/compile.rs@173:12-173:46(fn Compiler::compile_many) ... NOT COVERED
114: lit_int, replace `1` with `2`, at src/compile.rs@176:30-176:31(fn Compiler::compile_many) ... NOT COVERED
115: lit_int, replace `1` with `0`, at src/compile.rs@176:30-176:31(fn Compiler::compile_many) ... NOT COVERED
116: binop_num, replace `-` with `+`, at src/compile.rs@176:28-176:29(fn Compiler::compile_many) ... NOT COVERED
117: lit_int, replace `0` with `1`, at src/compile.rs@177:51-177:52(fn Compiler::compile_many) ... NOT COVERED
118: stmt_call, remove `self . fill (prev_hole, entry) ;`, at src/compile.rs@178:8-178:35(fn Compiler::compile_many) ... NOT COVERED
119: stmt_call, remove `self . fill_to_next (hole) ;`, at src/compile.rs@179:8-179:31(fn Compiler::compile_many) ... NOT COVERED
120: stmt_call, remove `self . compiled . matches . push (self . insts . len ()) ;`, at src/compile.rs@180:8-180:52(fn Compiler::compile_many) ... NOT COVERED
121: stmt_call, remove `self . push_compiled (Inst :: Match (i)) ;`, at src/compile.rs@181:8-181:42(fn Compiler::compile_many) ... NOT COVERED
122: stmt_call, remove `char_ranges . push (hir :: ClassUnicodeRange :: new (s, e)) ;`, at src/compile.rs@266:24-266:75(fn Compiler::c) ... NOT COVERED
123: stmt_call, remove `self . byte_classes . set_range (b'\n', b'\n') ;`, at src/compile.rs@272:16-272:57(fn Compiler::c) ... NOT COVERED
124: stmt_call, remove `self . byte_classes . set_range (b'\n', b'\n') ;`, at src/compile.rs@276:16-276:57(fn Compiler::c) ... NOT COVERED
125: stmt_call, remove `self . byte_classes . set_range (b'\n', b'\n') ;`, at src/compile.rs@280:16-280:57(fn Compiler::c) ... NOT COVERED
126: stmt_call, remove `self . byte_classes . set_range (b'\n', b'\n') ;`, at src/compile.rs@284:16-284:57(fn Compiler::c) ... NOT COVERED
127: unop_not, remove `!`, at src/compile.rs@300:19-300:20(fn Compiler::c) ... NOT COVERED
128: lit_bool, replace `true` with `false`, at src/compile.rs@307:58-307:62(fn Compiler::c) ... NOT COVERED
129: stmt_call, remove `self . byte_classes . set_word_boundary () ;`, at src/compile.rs@308:16-308:53(fn Compiler::c) ... NOT COVERED
130: unop_not, remove `!`, at src/compile.rs@312:19-312:20(fn Compiler::c) ... NOT COVERED
131: lit_bool, replace `true` with `false`, at src/compile.rs@319:58-319:62(fn Compiler::c) ... NOT COVERED
132: stmt_call, remove `self . byte_classes . set_word_boundary () ;`, at src/compile.rs@320:16-320:53(fn Compiler::c) ... NOT COVERED
133: stmt_call, remove `self . byte_classes . set_word_boundary () ;`, at src/compile.rs@324:16-324:53(fn Compiler::c) ... NOT COVERED
134: stmt_call, remove `self . byte_classes . set_word_boundary () ;`, at src/compile.rs@328:16-328:53(fn Compiler::c) ... NOT COVERED
135: binop_cmp, replace `>=` with `<`, at src/compile.rs@334:38-334:40(fn Compiler::c) ... NOT COVERED
136: binop_cmp, replace `>=` with `<=`, at src/compile.rs@334:38-334:40(fn Compiler::c) ... NOT COVERED
137: binop_cmp, replace `>=` with `>`, at src/compile.rs@334:38-334:40(fn Compiler::c) ... NOT COVERED
138: stmt_call, remove `self . compiled . captures . push (None) ;`, at src/compile.rs@335:24-335:57(fn Compiler::c) ... NOT COVERED
139: lit_int, replace `2` with `3`, at src/compile.rs@337:35-337:36(fn Compiler::c) ... NOT COVERED
140: lit_int, replace `2` with `1`, at src/compile.rs@337:35-337:36(fn Compiler::c) ... NOT COVERED
141: binop_num, replace `*` with `/`, at src/compile.rs@337:37-337:38(fn Compiler::c) ... NOT COVERED
142: binop_cmp, replace `>=` with `<`, at src/compile.rs@340:38-340:40(fn Compiler::c) ... NOT COVERED
143: binop_cmp, replace `>=` with `<=`, at src/compile.rs@340:38-340:40(fn Compiler::c) ... NOT COVERED
144: binop_cmp, replace `>=` with `>`, at src/compile.rs@340:38-340:40(fn Compiler::c) ... NOT COVERED
145: stmt_call, remove `self . compiled . captures . push (Some (n . clone ())) ;`, at src/compile.rs@342:24-342:68(fn Compiler::c) ... NOT COVERED
146: stmt_call, remove `self . capture_name_idx . insert (n, index as usize) ;`, at src/compile.rs@343:24-343:71(fn Compiler::c) ... NOT COVERED
147: lit_int, replace `2` with `3`, at src/compile.rs@345:35-345:36(fn Compiler::c) ... NOT COVERED
148: lit_int, replace `2` with `1`, at src/compile.rs@345:35-345:36(fn Compiler::c) ... NOT COVERED
149: binop_num, replace `*` with `/`, at src/compile.rs@345:37-345:38(fn Compiler::c) ... NOT COVERED
150: lit_int, replace `1` with `2`, at src/compile.rs@361:28-361:29(fn Compiler::c_capture) ... SURVIVED
151: lit_int, replace `1` with `0`, at src/compile.rs@361:28-361:29(fn Compiler::c_capture) ... killed
152: binop_cmp, replace `>` with `<`, at src/compile.rs@361:26-361:27(fn Compiler::c_capture) ... SURVIVED
153: binop_cmp, replace `>` with `<=`, at src/compile.rs@361:26-361:27(fn Compiler::c_capture) ... killed
154: binop_cmp, replace `>` with `>=`, at src/compile.rs@361:26-361:27(fn Compiler::c_capture) ... killed
155: binop_bool, replace `||` with `&&`, at src/compile.rs@361:30-361:32(fn Compiler::c_capture) ... SURVIVED
156: stmt_call, remove `self . fill (hole, patch . entry) ;`, at src/compile.rs@370:12-370:40(fn Compiler::c_capture) ... killed
157: stmt_call, remove `self . fill_to_next (patch . hole) ;`, at src/compile.rs@371:12-371:41(fn Compiler::c_capture) ... killed
158: lit_int, replace `1` with `2`, at src/compile.rs@372:74-372:75(fn Compiler::c_capture) ... killed
159: lit_int, replace `1` with `0`, at src/compile.rs@372:74-372:75(fn Compiler::c_capture) ... killed
160: binop_num, replace `+` with `-`, at src/compile.rs@372:72-372:73(fn Compiler::c_capture) ... killed
161: unop_not, remove `!`, at src/compile.rs@378:14-378:15(fn Compiler::c_dotstar) ... NOT COVERED
162: lit_bool, replace `false` with `true`, at src/compile.rs@381:24-381:29(fn Compiler::c_dotstar) ... NOT COVERED
163: lit_bool, replace `true` with `false`, at src/compile.rs@382:39-382:43(fn Compiler::c_dotstar) ... NOT COVERED
164: lit_bool, replace `false` with `true`, at src/compile.rs@387:24-387:29(fn Compiler::c_dotstar) ... NOT COVERED
165: lit_bool, replace `false` with `true`, at src/compile.rs@388:39-388:44(fn Compiler::c_dotstar) ... NOT COVERED
166: lit_int, replace `1` with `2`, at src/compile.rs@404:42-404:43(fn Compiler::c_class) ... SURVIVED
167: lit_int, replace `1` with `0`, at src/compile.rs@404:42-404:43(fn Compiler::c_class) ... SURVIVED
168: binop_eq, replace `==` with `!=`, at src/compile.rs@404:39-404:41(fn Compiler::c_class) ... SURVIVED
169: lit_int, replace `0` with `1`, at src/compile.rs@404:54-404:55(fn Compiler::c_class) ... killed
170: lit_int, replace `0` with `1`, at src/compile.rs@404:69-404:70(fn Compiler::c_class) ... killed
171: binop_eq, replace `==` with `!=`, at src/compile.rs@404:59-404:61(fn Compiler::c_class) ... SURVIVED
172: binop_bool, replace `&&` with `||`, at src/compile.rs@404:44-404:46(fn Compiler::c_class) ... SURVIVED
173: lit_int, replace `0` with `1`, at src/compile.rs@405:58-405:59(fn Compiler::c_class) ... killed
174: lit_int, replace `1` with `2`, at src/compile.rs@409:61-409:62(fn Compiler::c_class) ... killed
175: lit_int, replace `1` with `0`, at src/compile.rs@409:61-409:62(fn Compiler::c_class) ... killed
176: binop_num, replace `-` with `+`, at src/compile.rs@409:59-409:60(fn Compiler::c_class) ... killed
177: lit_int, replace `0` with `1`, at src/compile.rs@423:25-423:26(fn Compiler::c_class_bytes) ... NOT COVERED
178: lit_int, replace `1` with `2`, at src/compile.rs@423:43-423:44(fn Compiler::c_class_bytes) ... NOT COVERED
179: lit_int, replace `1` with `0`, at src/compile.rs@423:43-423:44(fn Compiler::c_class_bytes) ... NOT COVERED
180: binop_num, replace `-` with `+`, at src/compile.rs@423:41-423:42(fn Compiler::c_class_bytes) ... NOT COVERED
181: stmt_call, remove `self . fill_to_next (prev_hole) ;`, at src/compile.rs@424:12-424:40(fn Compiler::c_class_bytes) ... NOT COVERED
182: stmt_call, remove `self . byte_classes . set_range (r . start (), r . end ()) ;`, at src/compile.rs@427:12-427:59(fn Compiler::c_class_bytes) ... NOT COVERED
183: stmt_call, remove `holes . push (self . push_hole  (InstHole :: Bytes { start : r . start (), end : r . end (), })) ;`, at src/compile.rs@428:12-431:15(fn Compiler::c_class_bytes) ... NOT COVERED
184: lit_int, replace `1` with `2`, at src/compile.rs@435:39-435:40(fn Compiler::c_class_bytes) ... NOT COVERED
185: lit_int, replace `1` with `0`, at src/compile.rs@435:39-435:40(fn Compiler::c_class_bytes) ... NOT COVERED
186: binop_num, replace `-` with `+`, at src/compile.rs@435:37-435:38(fn Compiler::c_class_bytes) ... NOT COVERED
187: stmt_call, remove `self . byte_classes . set_range (r . start (), r . end ()) ;`, at src/compile.rs@436:8-436:55(fn Compiler::c_class_bytes) ... NOT COVERED
188: stmt_call, remove `holes . push (self . push_hole  (InstHole :: Bytes { start : r . start (), end : r . end () }),) ;`, at src/compile.rs@437:8-439:9(fn Compiler::c_class_bytes) ... NOT COVERED
189: stmt_call, remove `self . fill (prev_hole, next) ;`, at src/compile.rs@440:8-440:34(fn Compiler::c_class_bytes) ... NOT COVERED
190: lit_int, replace `1` with `2`, at src/compile.rs@446:57-446:58(fn Compiler::c_empty_look) ... killed
191: lit_int, replace `1` with `0`, at src/compile.rs@446:57-446:58(fn Compiler::c_empty_look) ... SURVIVED
192: binop_num, replace `-` with `+`, at src/compile.rs@446:55-446:56(fn Compiler::c_empty_look) ... killed
193: stmt_call, remove `self . fill (hole, p . entry) ;`, at src/compile.rs@463:12-463:36(fn Compiler::c_concat) ... killed
194: lit_int, replace `0` with `1`, at src/compile.rs@483:24-483:25(fn Compiler::c_alternate) ... NOT COVERED
195: lit_int, replace `1` with `2`, at src/compile.rs@483:41-483:42(fn Compiler::c_alternate) ... NOT COVERED
196: lit_int, replace `1` with `0`, at src/compile.rs@483:41-483:42(fn Compiler::c_alternate) ... NOT COVERED
197: binop_num, replace `-` with `+`, at src/compile.rs@483:39-483:40(fn Compiler::c_alternate) ... NOT COVERED
198: stmt_call, remove `self . fill_to_next (prev_hole) ;`, at src/compile.rs@484:12-484:40(fn Compiler::c_alternate) ... NOT COVERED
199: binop_eq, replace `==` with `!=`, at src/compile.rs@488:26-488:28(fn Compiler::c_alternate) ... NOT COVERED
200: stmt_call, remove `holes . push (hole) ;`, at src/compile.rs@500:12-500:28(fn Compiler::c_alternate) ... NOT COVERED
201: lit_int, replace `1` with `2`, at src/compile.rs@504:64-504:65(fn Compiler::c_alternate) ... NOT COVERED
202: lit_int, replace `1` with `0`, at src/compile.rs@504:64-504:65(fn Compiler::c_alternate) ... NOT COVERED
203: binop_num, replace `-` with `+`, at src/compile.rs@504:62-504:63(fn Compiler::c_alternate) ... NOT COVERED
204: binop_eq, replace `==` with `!=`, at src/compile.rs@505:22-505:24(fn Compiler::c_alternate) ... NOT COVERED
205: stmt_call, remove `holes . push (hole) ;`, at src/compile.rs@513:8-513:24(fn Compiler::c_alternate) ... NOT COVERED
206: stmt_call, remove `self . fill (prev_hole, entry) ;`, at src/compile.rs@514:8-514:35(fn Compiler::c_alternate) ... NOT COVERED
207: stmt_call, remove `self . fill (hole_rep, split_entry) ;`, at src/compile.rs@555:8-555:40(fn Compiler::c_repeat_zero_or_more) ... NOT COVERED
208: stmt_call, remove `self . fill_to_next (hole_rep) ;`, at src/compile.rs@566:8-566:35(fn Compiler::c_repeat_one_or_more) ... NOT COVERED
209: stmt_call, remove `self . fill (patch_concat . hole, patch_rep . entry) ;`, at src/compile.rs@586:8-586:53(fn Compiler::c_repeat_range_min_or_more) ... NOT COVERED
210: binop_eq, replace `==` with `!=`, at src/compile.rs@600:15-600:17(fn Compiler::c_repeat_range) ... NOT COVERED
211: stmt_call, remove `self . fill_to_next (prev_hole) ;`, at src/compile.rs@625:12-625:40(fn Compiler::c_repeat_range) ... NOT COVERED
212: stmt_call, remove `holes . push (self . fill_split (split, Some (entry), None)) ;`, at src/compile.rs@630:16-630:69(fn Compiler::c_repeat_range) ... NOT COVERED
213: stmt_call, remove `holes . push (self . fill_split (split, None, Some (entry))) ;`, at src/compile.rs@632:16-632:69(fn Compiler::c_repeat_range) ... NOT COVERED
214: stmt_call, remove `holes . push (prev_hole) ;`, at src/compile.rs@635:8-635:29(fn Compiler::c_repeat_range) ... NOT COVERED
215: stmt_call, remove `self . insts [pc] . fill (goto) ;`, at src/compile.rs@643:16-643:41(fn Compiler::fill) ... killed
216: stmt_call, remove `self . fill (hole, goto) ;`, at src/compile.rs@647:20-647:41(fn Compiler::fill) ... killed
217: stmt_call, remove `self . fill (hole, next) ;`, at src/compile.rs@655:8-655:29(fn Compiler::fill_to_next) ... killed
218: stmt_call, remove `self . insts [pc] . fill_split (goto1, goto2) ;`, at src/compile.rs@668:20-668:59(fn Compiler::fill_split) ... NOT COVERED
219: stmt_call, remove `self . insts [pc] . half_fill_split_goto1 (goto1) ;`, at src/compile.rs@672:20-672:63(fn Compiler::fill_split) ... NOT COVERED
220: stmt_call, remove `self . insts [pc] . half_fill_split_goto2 (goto2) ;`, at src/compile.rs@676:20-676:63(fn Compiler::fill_split) ... NOT COVERED
221: stmt_call, remove `new_holes . push (self . fill_split (hole, goto1, goto2)) ;`, at src/compile.rs@687:20-687:71(fn Compiler::fill_split) ... NOT COVERED
222: lit_int, replace `1` with `2`, at src/compile.rs@691:45-691:46(fn Compiler::fill_split) ... NOT COVERED
223: lit_int, replace `1` with `0`, at src/compile.rs@691:45-691:46(fn Compiler::fill_split) ... NOT COVERED
224: binop_eq, replace `==` with `!=`, at src/compile.rs@691:42-691:44(fn Compiler::fill_split) ... NOT COVERED
225: stmt_call, remove `self . insts . push (MaybeInst :: Compiled (inst)) ;`, at src/compile.rs@701:8-701:50(fn Compiler::push_compiled) ... killed
226: stmt_call, remove `self . insts . push (MaybeInst :: Uncompiled (inst)) ;`, at src/compile.rs@706:8-706:52(fn Compiler::push_hole) ... killed
227: stmt_call, remove `self . insts . push (MaybeInst :: Split) ;`, at src/compile.rs@712:8-712:41(fn Compiler::push_split_hole) ... NOT COVERED
228: binop_num, replace `*` with `/`, at src/compile.rs@719:28-719:29(fn Compiler::check_size) ... SURVIVED
229: binop_cmp, replace `>` with `<`, at src/compile.rs@719:48-719:49(fn Compiler::check_size) ... killed
230: binop_cmp, replace `>` with `<=`, at src/compile.rs@719:48-719:49(fn Compiler::check_size) ... killed
231: binop_cmp, replace `>` with `>=`, at src/compile.rs@719:48-719:49(fn Compiler::check_size) ... SURVIVED
232: stmt_call, remove `self . c . suffix_cache . clear () ;`, at src/compile.rs@852:8-852:35(fn CompileClass < 'a, 'b >::compile) ... SURVIVED
233: lit_int, replace `1` with `2`, at src/compile.rs@855:36-855:37(fn CompileClass < 'a, 'b >::compile) ... killed
234: lit_int, replace `1` with `0`, at src/compile.rs@855:36-855:37(fn CompileClass < 'a, 'b >::compile) ... killed
235: binop_num, replace `+` with `-`, at src/compile.rs@855:34-855:35(fn CompileClass < 'a, 'b >::compile) ... killed
236: binop_eq, replace `==` with `!=`, at src/compile.rs@855:38-855:40(fn CompileClass < 'a, 'b >::compile) ... killed
237: stmt_call, remove `utf8_seqs . reset (range . start (), range . end ()) ;`, at src/compile.rs@856:12-856:55(fn CompileClass < 'a, 'b >::compile) ... killed
238: binop_bool, replace `&&` with `||`, at src/compile.rs@863:33-863:35(fn CompileClass < 'a, 'b >::compile) ... SURVIVED
239: stmt_call, remove `holes . push (hole) ;`, at src/compile.rs@865:20-865:36(fn CompileClass < 'a, 'b >::compile) ... killed
240: stmt_call, remove `self . c . fill (last_split, entry) ;`, at src/compile.rs@866:20-866:50(fn CompileClass < 'a, 'b >::compile) ... SURVIVED
241: stmt_call, remove `self . c . fill_to_next (last_split) ;`, at src/compile.rs@875:20-875:51(fn CompileClass < 'a, 'b >::compile) ... NOT COVERED
242: stmt_call, remove `holes . push (hole) ;`, at src/compile.rs@878:20-878:36(fn CompileClass < 'a, 'b >::compile) ... NOT COVERED
243: stmt_call, remove `self . c . byte_classes . set_range (byte_range . start, byte_range . end) ;`, at src/compile.rs@916:12-916:75(fn CompileClass < 'a, 'b >::c_utf8_seq_) ... SURVIVED
244: binop_eq, replace `==` with `!=`, at src/compile.rs@917:25-917:27(fn CompileClass < 'a, 'b >::c_utf8_seq_) ... killed
245: stmt_call, remove `self . c . push_compiled (Inst :: Bytes  (InstBytes   { goto : from_inst, start : byte_range . start, end : byte_range . end, })) ;`, at src/compile.rs@923:16-927:19(fn CompileClass < 'a, 'b >::c_utf8_seq_) ... NOT COVERED
246: lit_int, replace `1` with `2`, at src/compile.rs@929:55-929:56(fn CompileClass < 'a, 'b >::c_utf8_seq_) ... killed
247: lit_int, replace `1` with `0`, at src/compile.rs@929:55-929:56(fn CompileClass < 'a, 'b >::c_utf8_seq_) ... killed
248: binop_eq, replace `==` with `!=`, at src/compile.rs@989:25-989:27(fn SuffixCache::get) ... NOT COVERED
249: stmt_call, remove `self . dense . push (SuffixCacheEntry { key : key, pc : pc }) ;`, at src/compile.rs@994:8-994:62(fn SuffixCache::get) ... SURVIVED
250: stmt_call, remove `self . dense . clear () ;`, at src/compile.rs@999:8-999:26(fn SuffixCache::clear) ... SURVIVED
251: lit_int, replace `14695981039346656037` with `14695981039346656038`, at src/compile.rs@1006:20-1006:40(fn SuffixCache::hash) ... SURVIVED
252: lit_int, replace `14695981039346656037` with `14695981039346656036`, at src/compile.rs@1006:20-1006:40(fn SuffixCache::hash) ... SURVIVED
253: binop_bit, replace `^` with `&`, at src/compile.rs@1007:15-1007:16(fn SuffixCache::hash) ... SURVIVED
254: binop_bit, replace `^` with `|`, at src/compile.rs@1007:15-1007:16(fn SuffixCache::hash) ... SURVIVED
255: binop_bit, replace `^` with `&`, at src/compile.rs@1008:15-1008:16(fn SuffixCache::hash) ... SURVIVED
256: binop_bit, replace `^` with `|`, at src/compile.rs@1008:15-1008:16(fn SuffixCache::hash) ... SURVIVED
257: binop_bit, replace `^` with `&`, at src/compile.rs@1009:15-1009:16(fn SuffixCache::hash) ... SURVIVED
258: binop_bit, replace `^` with `|`, at src/compile.rs@1009:15-1009:16(fn SuffixCache::hash) ... SURVIVED
259: lit_int, replace `0` with `1`, at src/compile.rs@1023:19-1023:20(fn ByteClassSet::set_range) ... SURVIVED
260: binop_cmp, replace `>` with `<`, at src/compile.rs@1023:17-1023:18(fn ByteClassSet::set_range) ... killed
261: binop_cmp, replace `>` with `<=`, at src/compile.rs@1023:17-1023:18(fn ByteClassSet::set_range) ... killed
262: binop_cmp, replace `>` with `>=`, at src/compile.rs@1023:17-1023:18(fn ByteClassSet::set_range) ... killed
263: lit_int, replace `1` with `2`, at src/compile.rs@1024:36-1024:37(fn ByteClassSet::set_range) ... killed
264: lit_int, replace `1` with `0`, at src/compile.rs@1024:36-1024:37(fn ByteClassSet::set_range) ... killed
265: binop_num, replace `-` with `+`, at src/compile.rs@1024:34-1024:35(fn ByteClassSet::set_range) ... killed
266: lit_bool, replace `true` with `false`, at src/compile.rs@1024:41-1024:45(fn ByteClassSet::set_range) ... killed
267: lit_bool, replace `true` with `false`, at src/compile.rs@1026:31-1026:35(fn ByteClassSet::set_range) ... killed
268: lit_int, replace `0` with `1`, at src/compile.rs@1033:26-1033:27(fn ByteClassSet::set_word_boundary) ... NOT COVERED
269: lit_int, replace `255` with `256`, at src/compile.rs@1035:20-1035:23(fn ByteClassSet::set_word_boundary) ... NOT COVERED
270: lit_int, replace `255` with `254`, at src/compile.rs@1035:20-1035:23(fn ByteClassSet::set_word_boundary) ... NOT COVERED
271: binop_cmp, replace `<=` with `<`, at src/compile.rs@1035:17-1035:19(fn ByteClassSet::set_word_boundary) ... NOT COVERED
272: binop_cmp, replace `<=` with `>=`, at src/compile.rs@1035:17-1035:19(fn ByteClassSet::set_word_boundary) ... NOT COVERED
273: binop_cmp, replace `<=` with `>`, at src/compile.rs@1035:17-1035:19(fn ByteClassSet::set_word_boundary) ... NOT COVERED
274: lit_int, replace `1` with `2`, at src/compile.rs@1036:22-1036:23(fn ByteClassSet::set_word_boundary) ... NOT COVERED
275: lit_int, replace `1` with `0`, at src/compile.rs@1036:22-1036:23(fn ByteClassSet::set_word_boundary) ... NOT COVERED
276: binop_num, replace `+` with `-`, at src/compile.rs@1036:20-1036:21(fn ByteClassSet::set_word_boundary) ... NOT COVERED
277: lit_int, replace `255` with `256`, at src/compile.rs@1037:24-1037:27(fn ByteClassSet::set_word_boundary) ... NOT COVERED
278: lit_int, replace `255` with `254`, at src/compile.rs@1037:24-1037:27(fn ByteClassSet::set_word_boundary) ... NOT COVERED
279: binop_cmp, replace `<=` with `<`, at src/compile.rs@1037:21-1037:23(fn ByteClassSet::set_word_boundary) ... NOT COVERED
280: binop_cmp, replace `<=` with `>=`, at src/compile.rs@1037:21-1037:23(fn ByteClassSet::set_word_boundary) ... NOT COVERED
281: binop_cmp, replace `<=` with `>`, at src/compile.rs@1037:21-1037:23(fn ByteClassSet::set_word_boundary) ... NOT COVERED
282: binop_eq, replace `==` with `!=`, at src/compile.rs@1037:46-1037:48(fn ByteClassSet::set_word_boundary) ... NOT COVERED
283: binop_bool, replace `&&` with `||`, at src/compile.rs@1037:28-1037:30(fn ByteClassSet::set_word_boundary) ... NOT COVERED
284: lit_int, replace `1` with `2`, at src/compile.rs@1038:22-1038:23(fn ByteClassSet::set_word_boundary) ... NOT COVERED
285: lit_int, replace `1` with `0`, at src/compile.rs@1038:22-1038:23(fn ByteClassSet::set_word_boundary) ... NOT COVERED
286: lit_int, replace `1` with `2`, at src/compile.rs@1040:43-1040:44(fn ByteClassSet::set_word_boundary) ... NOT COVERED
287: lit_int, replace `1` with `0`, at src/compile.rs@1040:43-1040:44(fn ByteClassSet::set_word_boundary) ... NOT COVERED
288: binop_num, replace `-` with `+`, at src/compile.rs@1040:41-1040:42(fn ByteClassSet::set_word_boundary) ... NOT COVERED
289: stmt_call, remove `self . set_range (b1 as u8, (b2 - 1) as u8) ;`, at src/compile.rs@1040:12-1040:52(fn ByteClassSet::set_word_boundary) ... NOT COVERED
290: lit_int, replace `0` with `1`, at src/compile.rs@1051:24-1051:27(fn ByteClassSet::byte_classes) ... killed
291: lit_int, replace `0` with `1`, at src/compile.rs@1052:20-1052:21(fn ByteClassSet::byte_classes) ... SURVIVED
292: lit_int, replace `255` with `256`, at src/compile.rs@1055:20-1055:23(fn ByteClassSet::byte_classes) ... killed
293: lit_int, replace `255` with `254`, at src/compile.rs@1055:20-1055:23(fn ByteClassSet::byte_classes) ... killed
294: binop_cmp, replace `>=` with `<`, at src/compile.rs@1055:17-1055:19(fn ByteClassSet::byte_classes) ... killed
295: binop_cmp, replace `>=` with `<=`, at src/compile.rs@1055:17-1055:19(fn ByteClassSet::byte_classes) ... killed
296: binop_cmp, replace `>=` with `>`, at src/compile.rs@1055:17-1055:19(fn ByteClassSet::byte_classes) ... killed
297: lit_int, replace `1` with `2`, at src/compile.rs@1059:42-1059:43(fn ByteClassSet::byte_classes) ... killed
298: lit_int, replace `1` with `0`, at src/compile.rs@1059:42-1059:43(fn ByteClassSet::byte_classes) ... killed
299: lit_int, replace `1` with `2`, at src/compile.rs@1061:17-1061:18(fn ByteClassSet::byte_classes) ... killed
300: lit_int, replace `1` with `0`, at src/compile.rs@1061:17-1061:18(fn ByteClassSet::byte_classes) ... killed (timeout)
301: binop_cmp, replace `>` with `<`, at src/compile.rs@1071:18-1071:19(fn u32_to_usize) ... NOT COVERED
302: binop_cmp, replace `>` with `<=`, at src/compile.rs@1071:18-1071:19(fn u32_to_usize) ... NOT COVERED
303: binop_cmp, replace `>` with `>=`, at src/compile.rs@1071:18-1071:19(fn u32_to_usize) ... NOT COVERED
304: lit_bool, replace `true` with `false`, at src/dfa.rs@219:32-219:36(fn Result < T >::is_match) ... NOT COVERED
305: lit_bool, replace `false` with `true`, at src/dfa.rs@220:49-220:54(fn Result < T >::is_match) ... NOT COVERED
306: binop_num, replace `-` with `+`, at src/dfa.rs@277:28-277:29(fn push_inst_ptr) ... killed
307: stmt_call, remove `write_vari32 (data, delta) ;`, at src/dfa.rs@278:4-278:29(fn push_inst_ptr) ... killed
308: binop_num, replace `+` with `-`, at src/dfa.rs@295:36-295:37(fn InstPtrs < 'a >::next) ... killed
309: lit_int, replace `0` with `1`, at src/dfa.rs@306:29-306:30(fn State::flags) ... killed
310: lit_int, replace `0` with `1`, at src/dfa.rs@310:25-310:26(fn State::inst_ptrs) ... killed
311: lit_int, replace `1` with `2`, at src/dfa.rs@310:45-310:46(fn State::inst_ptrs) ... killed
312: lit_int, replace `1` with `0`, at src/dfa.rs@310:45-310:46(fn State::inst_ptrs) ... killed
313: lit_int, replace `255` with `256`, at src/dfa.rs@416:50-416:53(fn Cache::new) ... killed
314: lit_int, replace `255` with `254`, at src/dfa.rs@416:50-416:53(fn Cache::new) ... SURVIVED
315: lit_int, replace `1` with `2`, at src/dfa.rs@416:66-416:67(fn Cache::new) ... SURVIVED
316: lit_int, replace `1` with `0`, at src/dfa.rs@416:66-416:67(fn Cache::new) ... SURVIVED
317: binop_num, replace `+` with `-`, at src/dfa.rs@416:64-416:65(fn Cache::new) ... SURVIVED
318: lit_int, replace `1` with `2`, at src/dfa.rs@416:71-416:72(fn Cache::new) ... SURVIVED
319: lit_int, replace `1` with `0`, at src/dfa.rs@416:71-416:72(fn Cache::new) ... SURVIVED
320: binop_num, replace `+` with `-`, at src/dfa.rs@416:69-416:70(fn Cache::new) ... SURVIVED
321: lit_int, replace `0` with `1`, at src/dfa.rs@424:29-424:30(fn Cache::new) ... SURVIVED
322: lit_int, replace `0` with `1`, at src/dfa.rs@425:22-425:23(fn Cache::new) ... SURVIVED
323: stmt_call, remove `cache . inner . reset_size () ;`, at src/dfa.rs@431:8-431:32(fn Cache::new) ... SURVIVED
324: binop_num, replace `*` with `/`, at src/dfa.rs@440:45-440:46(fn CacheInner::reset_size) ... SURVIVED
325: binop_num, replace `*` with `/`, at src/dfa.rs@441:32-441:33(fn CacheInner::reset_size) ... SURVIVED
326: binop_num, replace `+` with `-`, at src/dfa.rs@441:12-441:13(fn CacheInner::reset_size) ... SURVIVED
327: lit_int, replace `0` with `1`, at src/dfa.rs@458:19-458:20(fn Fsm < 'a >::forward) ... NOT COVERED
328: lit_int, replace `0` with `1`, at src/dfa.rs@488:19-488:20(fn Fsm < 'a >::reverse) ... NOT COVERED
329: lit_int, replace `0` with `1`, at src/dfa.rs@519:19-519:20(fn Fsm < 'a >::forward_many) ... NOT COVERED
330: lit_bool, replace `false` with `true`, at src/dfa.rs@521:30-521:35(fn Fsm < 'a >::forward_many) ... NOT COVERED
331: lit_int, replace `1` with `2`, at src/dfa.rs@536:32-536:33(fn Fsm < 'a >::forward_many) ... NOT COVERED
332: lit_int, replace `1` with `0`, at src/dfa.rs@536:32-536:33(fn Fsm < 'a >::forward_many) ... NOT COVERED
333: binop_eq, replace `==` with `!=`, at src/dfa.rs@536:29-536:31(fn Fsm < 'a >::forward_many) ... NOT COVERED
334: lit_int, replace `0` with `1`, at src/dfa.rs@537:24-537:25(fn Fsm < 'a >::forward_many) ... NOT COVERED
335: lit_bool, replace `true` with `false`, at src/dfa.rs@537:29-537:33(fn Fsm < 'a >::forward_many) ... NOT COVERED
336: lit_bool, replace `true` with `false`, at src/dfa.rs@543:40-543:44(fn Fsm < 'a >::forward_many) ... NOT COVERED
337: binop_cmp, replace `<` with `<=`, at src/dfa.rs@602:17-602:18(fn Fsm < 'a >::exec_at) ... NOT COVERED
338: binop_cmp, replace `<` with `>=`, at src/dfa.rs@602:17-602:18(fn Fsm < 'a >::exec_at) ... NOT COVERED
339: binop_cmp, replace `<` with `>`, at src/dfa.rs@602:17-602:18(fn Fsm < 'a >::exec_at) ... NOT COVERED
340: binop_cmp, replace `<=` with `<`, at src/dfa.rs@615:26-615:28(fn Fsm < 'a >::exec_at) ... NOT COVERED
341: binop_cmp, replace `<=` with `>=`, at src/dfa.rs@615:26-615:28(fn Fsm < 'a >::exec_at) ... NOT COVERED
342: binop_cmp, replace `<=` with `>`, at src/dfa.rs@615:26-615:28(fn Fsm < 'a >::exec_at) ... NOT COVERED
343: binop_cmp, replace `<` with `<=`, at src/dfa.rs@615:45-615:46(fn Fsm < 'a >::exec_at) ... NOT COVERED
344: binop_cmp, replace `<` with `>=`, at src/dfa.rs@615:45-615:46(fn Fsm < 'a >::exec_at) ... NOT COVERED
345: binop_cmp, replace `<` with `>`, at src/dfa.rs@615:45-615:46(fn Fsm < 'a >::exec_at) ... NOT COVERED
346: binop_bool, replace `&&` with `||`, at src/dfa.rs@615:39-615:41(fn Fsm < 'a >::exec_at) ... NOT COVERED
347: lit_int, replace `1` with `2`, at src/dfa.rs@618:22-618:23(fn Fsm < 'a >::exec_at) ... NOT COVERED
348: lit_int, replace `1` with `0`, at src/dfa.rs@618:22-618:23(fn Fsm < 'a >::exec_at) ... NOT COVERED
349: binop_cmp, replace `>` with `<`, at src/dfa.rs@619:27-619:28(fn Fsm < 'a >::exec_at) ... NOT COVERED
350: binop_cmp, replace `>` with `<=`, at src/dfa.rs@619:27-619:28(fn Fsm < 'a >::exec_at) ... NOT COVERED
351: binop_cmp, replace `>` with `>=`, at src/dfa.rs@619:27-619:28(fn Fsm < 'a >::exec_at) ... NOT COVERED
352: lit_int, replace `2` with `3`, at src/dfa.rs@619:47-619:48(fn Fsm < 'a >::exec_at) ... NOT COVERED
353: lit_int, replace `2` with `1`, at src/dfa.rs@619:47-619:48(fn Fsm < 'a >::exec_at) ... NOT COVERED
354: binop_num, replace `+` with `-`, at src/dfa.rs@619:45-619:46(fn Fsm < 'a >::exec_at) ... NOT COVERED
355: binop_cmp, replace `>=` with `<`, at src/dfa.rs@619:49-619:51(fn Fsm < 'a >::exec_at) ... NOT COVERED
356: binop_cmp, replace `>=` with `<=`, at src/dfa.rs@619:49-619:51(fn Fsm < 'a >::exec_at) ... NOT COVERED
357: binop_cmp, replace `>=` with `>`, at src/dfa.rs@619:49-619:51(fn Fsm < 'a >::exec_at) ... NOT COVERED
358: binop_bool, replace `||` with `&&`, at src/dfa.rs@619:39-619:41(fn Fsm < 'a >::exec_at) ... NOT COVERED
359: stmt_call, remove `mem :: swap (& mut prev_si, & mut next_si) ;`, at src/dfa.rs@620:20-620:57(fn Fsm < 'a >::exec_at) ... NOT COVERED
360: lit_int, replace `1` with `2`, at src/dfa.rs@624:22-624:23(fn Fsm < 'a >::exec_at) ... NOT COVERED
361: lit_int, replace `1` with `0`, at src/dfa.rs@624:22-624:23(fn Fsm < 'a >::exec_at) ... NOT COVERED
362: binop_cmp, replace `>` with `<`, at src/dfa.rs@625:27-625:28(fn Fsm < 'a >::exec_at) ... NOT COVERED
363: binop_cmp, replace `>` with `<=`, at src/dfa.rs@625:27-625:28(fn Fsm < 'a >::exec_at) ... NOT COVERED
364: binop_cmp, replace `>` with `>=`, at src/dfa.rs@625:27-625:28(fn Fsm < 'a >::exec_at) ... NOT COVERED
365: lit_int, replace `1` with `2`, at src/dfa.rs@629:22-629:23(fn Fsm < 'a >::exec_at) ... NOT COVERED
366: lit_int, replace `1` with `0`, at src/dfa.rs@629:22-629:23(fn Fsm < 'a >::exec_at) ... NOT COVERED
367: binop_cmp, replace `>` with `<`, at src/dfa.rs@630:27-630:28(fn Fsm < 'a >::exec_at) ... NOT COVERED
368: binop_cmp, replace `>` with `<=`, at src/dfa.rs@630:27-630:28(fn Fsm < 'a >::exec_at) ... NOT COVERED
369: binop_cmp, replace `>` with `>=`, at src/dfa.rs@630:27-630:28(fn Fsm < 'a >::exec_at) ... NOT COVERED
370: stmt_call, remove `mem :: swap (& mut prev_si, & mut next_si) ;`, at src/dfa.rs@631:20-631:57(fn Fsm < 'a >::exec_at) ... NOT COVERED
371: lit_int, replace `1` with `2`, at src/dfa.rs@635:22-635:23(fn Fsm < 'a >::exec_at) ... NOT COVERED
372: lit_int, replace `1` with `0`, at src/dfa.rs@635:22-635:23(fn Fsm < 'a >::exec_at) ... NOT COVERED
373: binop_bit, replace `&` with `|`, at src/dfa.rs@637:23-637:24(fn Fsm < 'a >::exec_at) ... NOT COVERED
374: binop_bit, replace `&` with `^`, at src/dfa.rs@637:23-637:24(fn Fsm < 'a >::exec_at) ... NOT COVERED
375: lit_int, replace `0` with `1`, at src/dfa.rs@637:39-637:40(fn Fsm < 'a >::exec_at) ... NOT COVERED
376: binop_cmp, replace `>` with `<`, at src/dfa.rs@637:37-637:38(fn Fsm < 'a >::exec_at) ... NOT COVERED
377: binop_cmp, replace `>` with `<=`, at src/dfa.rs@637:37-637:38(fn Fsm < 'a >::exec_at) ... NOT COVERED
378: binop_cmp, replace `>` with `>=`, at src/dfa.rs@637:37-637:38(fn Fsm < 'a >::exec_at) ... NOT COVERED
379: unop_not, remove `!`, at src/dfa.rs@642:27-642:28(fn Fsm < 'a >::exec_at) ... NOT COVERED
380: lit_int, replace `1` with `2`, at src/dfa.rs@643:44-643:45(fn Fsm < 'a >::exec_at) ... NOT COVERED
381: lit_int, replace `1` with `0`, at src/dfa.rs@643:44-643:45(fn Fsm < 'a >::exec_at) ... NOT COVERED
382: binop_num, replace `-` with `+`, at src/dfa.rs@643:42-643:43(fn Fsm < 'a >::exec_at) ... NOT COVERED
383: lit_int, replace `1` with `2`, at src/dfa.rs@654:45-654:46(fn Fsm < 'a >::exec_at) ... NOT COVERED
384: lit_int, replace `1` with `0`, at src/dfa.rs@654:45-654:46(fn Fsm < 'a >::exec_at) ... NOT COVERED
385: binop_cmp, replace `>` with `<`, at src/dfa.rs@654:43-654:44(fn Fsm < 'a >::exec_at) ... NOT COVERED
386: binop_cmp, replace `>` with `<=`, at src/dfa.rs@654:43-654:44(fn Fsm < 'a >::exec_at) ... NOT COVERED
387: binop_cmp, replace `>` with `>=`, at src/dfa.rs@654:43-654:44(fn Fsm < 'a >::exec_at) ... NOT COVERED
388: unop_not, remove `!`, at src/dfa.rs@668:33-668:34(fn Fsm < 'a >::exec_at) ... NOT COVERED
389: binop_bit, replace `&` with `|`, at src/dfa.rs@668:31-668:32(fn Fsm < 'a >::exec_at) ... NOT COVERED
390: binop_bit, replace `&` with `^`, at src/dfa.rs@668:31-668:32(fn Fsm < 'a >::exec_at) ... NOT COVERED
391: binop_eq, replace `==` with `!=`, at src/dfa.rs@668:47-668:49(fn Fsm < 'a >::exec_at) ... NOT COVERED
392: lit_int, replace `2` with `3`, at src/dfa.rs@669:28-669:29(fn Fsm < 'a >::exec_at) ... NOT COVERED
393: lit_int, replace `2` with `1`, at src/dfa.rs@669:28-669:29(fn Fsm < 'a >::exec_at) ... NOT COVERED
394: binop_num, replace `+` with `-`, at src/dfa.rs@669:26-669:27(fn Fsm < 'a >::exec_at) ... NOT COVERED
395: binop_cmp, replace `<` with `<=`, at src/dfa.rs@669:30-669:31(fn Fsm < 'a >::exec_at) ... NOT COVERED
396: binop_cmp, replace `<` with `>=`, at src/dfa.rs@669:30-669:31(fn Fsm < 'a >::exec_at) ... NOT COVERED
397: binop_cmp, replace `<` with `>`, at src/dfa.rs@669:30-669:31(fn Fsm < 'a >::exec_at) ... NOT COVERED
398: binop_bool, replace `&&` with `||`, at src/dfa.rs@669:20-669:22(fn Fsm < 'a >::exec_at) ... NOT COVERED
399: lit_int, replace `1` with `2`, at src/dfa.rs@675:26-675:27(fn Fsm < 'a >::exec_at) ... NOT COVERED
400: lit_int, replace `1` with `0`, at src/dfa.rs@675:26-675:27(fn Fsm < 'a >::exec_at) ... NOT COVERED
401: binop_cmp, replace `>` with `<`, at src/dfa.rs@677:22-677:23(fn Fsm < 'a >::exec_at) ... NOT COVERED
402: binop_cmp, replace `>` with `<=`, at src/dfa.rs@677:22-677:23(fn Fsm < 'a >::exec_at) ... NOT COVERED
403: binop_cmp, replace `>` with `>=`, at src/dfa.rs@677:22-677:23(fn Fsm < 'a >::exec_at) ... NOT COVERED
404: lit_int, replace `2` with `3`, at src/dfa.rs@678:48-678:49(fn Fsm < 'a >::exec_at) ... NOT COVERED
405: lit_int, replace `2` with `1`, at src/dfa.rs@678:48-678:49(fn Fsm < 'a >::exec_at) ... NOT COVERED
406: binop_num, replace `-` with `+`, at src/dfa.rs@678:46-678:47(fn Fsm < 'a >::exec_at) ... NOT COVERED
407: binop_bit, replace `&` with `|`, at src/dfa.rs@680:30-680:31(fn Fsm < 'a >::exec_at) ... NOT COVERED
408: binop_bit, replace `&` with `^`, at src/dfa.rs@680:30-680:31(fn Fsm < 'a >::exec_at) ... NOT COVERED
409: lit_int, replace `0` with `1`, at src/dfa.rs@680:46-680:47(fn Fsm < 'a >::exec_at) ... NOT COVERED
410: binop_cmp, replace `>` with `<`, at src/dfa.rs@680:44-680:45(fn Fsm < 'a >::exec_at) ... NOT COVERED
411: binop_cmp, replace `>` with `<=`, at src/dfa.rs@680:44-680:45(fn Fsm < 'a >::exec_at) ... NOT COVERED
412: binop_cmp, replace `>` with `>=`, at src/dfa.rs@680:44-680:45(fn Fsm < 'a >::exec_at) ... NOT COVERED
413: unop_not, remove `!`, at src/dfa.rs@686:27-686:28(fn Fsm < 'a >::exec_at) ... NOT COVERED
414: binop_cmp, replace `>=` with `<`, at src/dfa.rs@692:30-692:32(fn Fsm < 'a >::exec_at) ... NOT COVERED
415: binop_cmp, replace `>=` with `<=`, at src/dfa.rs@692:30-692:32(fn Fsm < 'a >::exec_at) ... NOT COVERED
416: binop_cmp, replace `>=` with `>`, at src/dfa.rs@692:30-692:32(fn Fsm < 'a >::exec_at) ... NOT COVERED
417: binop_eq, replace `==` with `!=`, at src/dfa.rs@693:27-693:29(fn Fsm < 'a >::exec_at) ... NOT COVERED
418: lit_int, replace `1` with `2`, at src/dfa.rs@700:48-700:49(fn Fsm < 'a >::exec_at) ... NOT COVERED
419: lit_int, replace `1` with `0`, at src/dfa.rs@700:48-700:49(fn Fsm < 'a >::exec_at) ... NOT COVERED
420: binop_num, replace `-` with `+`, at src/dfa.rs@700:46-700:47(fn Fsm < 'a >::exec_at) ... NOT COVERED
421: binop_bit, replace `&` with `|`, at src/dfa.rs@714:27-714:28(fn Fsm < 'a >::exec_at) ... NOT COVERED
422: binop_bit, replace `&` with `^`, at src/dfa.rs@714:27-714:28(fn Fsm < 'a >::exec_at) ... NOT COVERED
423: lit_int, replace `0` with `1`, at src/dfa.rs@714:43-714:44(fn Fsm < 'a >::exec_at) ... NOT COVERED
424: binop_cmp, replace `>` with `<`, at src/dfa.rs@714:41-714:42(fn Fsm < 'a >::exec_at) ... NOT COVERED
425: binop_cmp, replace `>` with `<=`, at src/dfa.rs@714:41-714:42(fn Fsm < 'a >::exec_at) ... NOT COVERED
426: binop_cmp, replace `>` with `>=`, at src/dfa.rs@714:41-714:42(fn Fsm < 'a >::exec_at) ... NOT COVERED
427: unop_not, remove `!`, at src/dfa.rs@715:31-715:32(fn Fsm < 'a >::exec_at) ... NOT COVERED
428: lit_int, replace `1` with `2`, at src/dfa.rs@716:48-716:49(fn Fsm < 'a >::exec_at) ... NOT COVERED
429: lit_int, replace `1` with `0`, at src/dfa.rs@716:48-716:49(fn Fsm < 'a >::exec_at) ... NOT COVERED
430: binop_num, replace `-` with `+`, at src/dfa.rs@716:46-716:47(fn Fsm < 'a >::exec_at) ... NOT COVERED
431: unop_not, remove `!`, at src/dfa.rs@735:29-735:30(fn Fsm < 'a >::exec_at) ... NOT COVERED
432: binop_bit, replace `&` with `|`, at src/dfa.rs@735:27-735:28(fn Fsm < 'a >::exec_at) ... NOT COVERED
433: binop_bit, replace `&` with `^`, at src/dfa.rs@735:27-735:28(fn Fsm < 'a >::exec_at) ... NOT COVERED
434: binop_bit, replace `&` with `|`, at src/dfa.rs@738:19-738:20(fn Fsm < 'a >::exec_at) ... NOT COVERED
435: binop_bit, replace `&` with `^`, at src/dfa.rs@738:19-738:20(fn Fsm < 'a >::exec_at) ... NOT COVERED
436: lit_int, replace `0` with `1`, at src/dfa.rs@738:35-738:36(fn Fsm < 'a >::exec_at) ... NOT COVERED
437: binop_cmp, replace `>` with `<`, at src/dfa.rs@738:33-738:34(fn Fsm < 'a >::exec_at) ... NOT COVERED
438: binop_cmp, replace `>` with `<=`, at src/dfa.rs@738:33-738:34(fn Fsm < 'a >::exec_at) ... NOT COVERED
439: binop_cmp, replace `>` with `>=`, at src/dfa.rs@738:33-738:34(fn Fsm < 'a >::exec_at) ... NOT COVERED
440: unop_not, remove `!`, at src/dfa.rs@739:23-739:24(fn Fsm < 'a >::exec_at) ... NOT COVERED
441: lit_int, replace `0` with `1`, at src/dfa.rs@764:19-764:20(fn Fsm < 'a >::exec_at_reverse) ... NOT COVERED
442: binop_cmp, replace `>` with `<`, at src/dfa.rs@764:17-764:18(fn Fsm < 'a >::exec_at_reverse) ... NOT COVERED
443: binop_cmp, replace `>` with `<=`, at src/dfa.rs@764:17-764:18(fn Fsm < 'a >::exec_at_reverse) ... NOT COVERED
444: binop_cmp, replace `>` with `>=`, at src/dfa.rs@764:17-764:18(fn Fsm < 'a >::exec_at_reverse) ... NOT COVERED
445: binop_cmp, replace `<=` with `<`, at src/dfa.rs@765:26-765:28(fn Fsm < 'a >::exec_at_reverse) ... NOT COVERED
446: binop_cmp, replace `<=` with `>=`, at src/dfa.rs@765:26-765:28(fn Fsm < 'a >::exec_at_reverse) ... NOT COVERED
447: binop_cmp, replace `<=` with `>`, at src/dfa.rs@765:26-765:28(fn Fsm < 'a >::exec_at_reverse) ... NOT COVERED
448: lit_int, replace `0` with `1`, at src/dfa.rs@765:47-765:48(fn Fsm < 'a >::exec_at_reverse) ... NOT COVERED
449: binop_cmp, replace `>` with `<`, at src/dfa.rs@765:45-765:46(fn Fsm < 'a >::exec_at_reverse) ... NOT COVERED
450: binop_cmp, replace `>` with `<=`, at src/dfa.rs@765:45-765:46(fn Fsm < 'a >::exec_at_reverse) ... NOT COVERED
451: binop_cmp, replace `>` with `>=`, at src/dfa.rs@765:45-765:46(fn Fsm < 'a >::exec_at_reverse) ... NOT COVERED
452: binop_bool, replace `&&` with `||`, at src/dfa.rs@765:39-765:41(fn Fsm < 'a >::exec_at_reverse) ... NOT COVERED
453: lit_int, replace `1` with `2`, at src/dfa.rs@767:22-767:23(fn Fsm < 'a >::exec_at_reverse) ... NOT COVERED
454: lit_int, replace `1` with `0`, at src/dfa.rs@767:22-767:23(fn Fsm < 'a >::exec_at_reverse) ... NOT COVERED
455: binop_cmp, replace `>` with `<`, at src/dfa.rs@769:27-769:28(fn Fsm < 'a >::exec_at_reverse) ... NOT COVERED
456: binop_cmp, replace `>` with `<=`, at src/dfa.rs@769:27-769:28(fn Fsm < 'a >::exec_at_reverse) ... NOT COVERED
457: binop_cmp, replace `>` with `>=`, at src/dfa.rs@769:27-769:28(fn Fsm < 'a >::exec_at_reverse) ... NOT COVERED
458: lit_int, replace `4` with `5`, at src/dfa.rs@769:48-769:49(fn Fsm < 'a >::exec_at_reverse) ... NOT COVERED
459: lit_int, replace `4` with `3`, at src/dfa.rs@769:48-769:49(fn Fsm < 'a >::exec_at_reverse) ... NOT COVERED
460: binop_cmp, replace `<=` with `<`, at src/dfa.rs@769:45-769:47(fn Fsm < 'a >::exec_at_reverse) ... NOT COVERED
461: binop_cmp, replace `<=` with `>=`, at src/dfa.rs@769:45-769:47(fn Fsm < 'a >::exec_at_reverse) ... NOT COVERED
462: binop_cmp, replace `<=` with `>`, at src/dfa.rs@769:45-769:47(fn Fsm < 'a >::exec_at_reverse) ... NOT COVERED
463: binop_bool, replace `||` with `&&`, at src/dfa.rs@769:39-769:41(fn Fsm < 'a >::exec_at_reverse) ... NOT COVERED
464: stmt_call, remove `mem :: swap (& mut prev_si, & mut next_si) ;`, at src/dfa.rs@770:20-770:57(fn Fsm < 'a >::exec_at_reverse) ... NOT COVERED
465: lit_int, replace `1` with `2`, at src/dfa.rs@773:22-773:23(fn Fsm < 'a >::exec_at_reverse) ... NOT COVERED
466: lit_int, replace `1` with `0`, at src/dfa.rs@773:22-773:23(fn Fsm < 'a >::exec_at_reverse) ... NOT COVERED
467: binop_cmp, replace `>` with `<`, at src/dfa.rs@775:27-775:28(fn Fsm < 'a >::exec_at_reverse) ... NOT COVERED
468: binop_cmp, replace `>` with `<=`, at src/dfa.rs@775:27-775:28(fn Fsm < 'a >::exec_at_reverse) ... NOT COVERED
469: binop_cmp, replace `>` with `>=`, at src/dfa.rs@775:27-775:28(fn Fsm < 'a >::exec_at_reverse) ... NOT COVERED
470: lit_int, replace `1` with `2`, at src/dfa.rs@778:22-778:23(fn Fsm < 'a >::exec_at_reverse) ... NOT COVERED
471: lit_int, replace `1` with `0`, at src/dfa.rs@778:22-778:23(fn Fsm < 'a >::exec_at_reverse) ... NOT COVERED
472: binop_cmp, replace `>` with `<`, at src/dfa.rs@780:27-780:28(fn Fsm < 'a >::exec_at_reverse) ... NOT COVERED
473: binop_cmp, replace `>` with `<=`, at src/dfa.rs@780:27-780:28(fn Fsm < 'a >::exec_at_reverse) ... NOT COVERED
474: binop_cmp, replace `>` with `>=`, at src/dfa.rs@780:27-780:28(fn Fsm < 'a >::exec_at_reverse) ... NOT COVERED
475: stmt_call, remove `mem :: swap (& mut prev_si, & mut next_si) ;`, at src/dfa.rs@781:20-781:57(fn Fsm < 'a >::exec_at_reverse) ... NOT COVERED
476: lit_int, replace `1` with `2`, at src/dfa.rs@784:22-784:23(fn Fsm < 'a >::exec_at_reverse) ... NOT COVERED
477: lit_int, replace `1` with `0`, at src/dfa.rs@784:22-784:23(fn Fsm < 'a >::exec_at_reverse) ... NOT COVERED
478: binop_bit, replace `&` with `|`, at src/dfa.rs@787:23-787:24(fn Fsm < 'a >::exec_at_reverse) ... NOT COVERED
479: binop_bit, replace `&` with `^`, at src/dfa.rs@787:23-787:24(fn Fsm < 'a >::exec_at_reverse) ... NOT COVERED
480: lit_int, replace `0` with `1`, at src/dfa.rs@787:39-787:40(fn Fsm < 'a >::exec_at_reverse) ... NOT COVERED
481: binop_cmp, replace `>` with `<`, at src/dfa.rs@787:37-787:38(fn Fsm < 'a >::exec_at_reverse) ... NOT COVERED
482: binop_cmp, replace `>` with `<=`, at src/dfa.rs@787:37-787:38(fn Fsm < 'a >::exec_at_reverse) ... NOT COVERED
483: binop_cmp, replace `>` with `>=`, at src/dfa.rs@787:37-787:38(fn Fsm < 'a >::exec_at_reverse) ... NOT COVERED
484: unop_not, remove `!`, at src/dfa.rs@788:27-788:28(fn Fsm < 'a >::exec_at_reverse) ... NOT COVERED
485: lit_int, replace `1` with `2`, at src/dfa.rs@789:44-789:45(fn Fsm < 'a >::exec_at_reverse) ... NOT COVERED
486: lit_int, replace `1` with `0`, at src/dfa.rs@789:44-789:45(fn Fsm < 'a >::exec_at_reverse) ... NOT COVERED
487: binop_num, replace `+` with `-`, at src/dfa.rs@789:42-789:43(fn Fsm < 'a >::exec_at_reverse) ... NOT COVERED
488: unop_not, remove `!`, at src/dfa.rs@796:33-796:34(fn Fsm < 'a >::exec_at_reverse) ... NOT COVERED
489: binop_bit, replace `&` with `|`, at src/dfa.rs@796:31-796:32(fn Fsm < 'a >::exec_at_reverse) ... NOT COVERED
490: binop_bit, replace `&` with `^`, at src/dfa.rs@796:31-796:32(fn Fsm < 'a >::exec_at_reverse) ... NOT COVERED
491: binop_eq, replace `==` with `!=`, at src/dfa.rs@796:47-796:49(fn Fsm < 'a >::exec_at_reverse) ... NOT COVERED
492: lit_int, replace `2` with `3`, at src/dfa.rs@796:67-796:68(fn Fsm < 'a >::exec_at_reverse) ... NOT COVERED
493: lit_int, replace `2` with `1`, at src/dfa.rs@796:67-796:68(fn Fsm < 'a >::exec_at_reverse) ... NOT COVERED
494: binop_cmp, replace `>=` with `<`, at src/dfa.rs@796:64-796:66(fn Fsm < 'a >::exec_at_reverse) ... NOT COVERED
495: binop_cmp, replace `>=` with `<=`, at src/dfa.rs@796:64-796:66(fn Fsm < 'a >::exec_at_reverse) ... NOT COVERED
496: binop_cmp, replace `>=` with `>`, at src/dfa.rs@796:64-796:66(fn Fsm < 'a >::exec_at_reverse) ... NOT COVERED
497: binop_bool, replace `&&` with `||`, at src/dfa.rs@796:58-796:60(fn Fsm < 'a >::exec_at_reverse) ... NOT COVERED
498: lit_int, replace `1` with `2`, at src/dfa.rs@798:26-798:27(fn Fsm < 'a >::exec_at_reverse) ... NOT COVERED
499: lit_int, replace `1` with `0`, at src/dfa.rs@798:26-798:27(fn Fsm < 'a >::exec_at_reverse) ... NOT COVERED
500: binop_cmp, replace `<` with `<=`, at src/dfa.rs@803:22-803:23(fn Fsm < 'a >::exec_at_reverse) ... NOT COVERED
501: binop_cmp, replace `<` with `>=`, at src/dfa.rs@803:22-803:23(fn Fsm < 'a >::exec_at_reverse) ... NOT COVERED
502: binop_cmp, replace `<` with `>`, at src/dfa.rs@803:22-803:23(fn Fsm < 'a >::exec_at_reverse) ... NOT COVERED
503: lit_int, replace `2` with `3`, at src/dfa.rs@804:48-804:49(fn Fsm < 'a >::exec_at_reverse) ... NOT COVERED
504: lit_int, replace `2` with `1`, at src/dfa.rs@804:48-804:49(fn Fsm < 'a >::exec_at_reverse) ... NOT COVERED
505: binop_num, replace `+` with `-`, at src/dfa.rs@804:46-804:47(fn Fsm < 'a >::exec_at_reverse) ... NOT COVERED
506: binop_cmp, replace `>=` with `<`, at src/dfa.rs@806:30-806:32(fn Fsm < 'a >::exec_at_reverse) ... NOT COVERED
507: binop_cmp, replace `>=` with `<=`, at src/dfa.rs@806:30-806:32(fn Fsm < 'a >::exec_at_reverse) ... NOT COVERED
508: binop_cmp, replace `>=` with `>`, at src/dfa.rs@806:30-806:32(fn Fsm < 'a >::exec_at_reverse) ... NOT COVERED
509: binop_eq, replace `==` with `!=`, at src/dfa.rs@807:27-807:29(fn Fsm < 'a >::exec_at_reverse) ... NOT COVERED
510: binop_bit, replace `&` with `|`, at src/dfa.rs@819:27-819:28(fn Fsm < 'a >::exec_at_reverse) ... NOT COVERED
511: binop_bit, replace `&` with `^`, at src/dfa.rs@819:27-819:28(fn Fsm < 'a >::exec_at_reverse) ... NOT COVERED
512: lit_int, replace `0` with `1`, at src/dfa.rs@819:43-819:44(fn Fsm < 'a >::exec_at_reverse) ... NOT COVERED
513: binop_cmp, replace `>` with `<`, at src/dfa.rs@819:41-819:42(fn Fsm < 'a >::exec_at_reverse) ... NOT COVERED
514: binop_cmp, replace `>` with `<=`, at src/dfa.rs@819:41-819:42(fn Fsm < 'a >::exec_at_reverse) ... NOT COVERED
515: binop_cmp, replace `>` with `>=`, at src/dfa.rs@819:41-819:42(fn Fsm < 'a >::exec_at_reverse) ... NOT COVERED
516: unop_not, remove `!`, at src/dfa.rs@820:31-820:32(fn Fsm < 'a >::exec_at_reverse) ... NOT COVERED
517: lit_int, replace `1` with `2`, at src/dfa.rs@821:48-821:49(fn Fsm < 'a >::exec_at_reverse) ... NOT COVERED
518: lit_int, replace `1` with `0`, at src/dfa.rs@821:48-821:49(fn Fsm < 'a >::exec_at_reverse) ... NOT COVERED
519: binop_num, replace `+` with `-`, at src/dfa.rs@821:46-821:47(fn Fsm < 'a >::exec_at_reverse) ... NOT COVERED
520: lit_int, replace `0` with `1`, at src/dfa.rs@836:60-836:61(fn Fsm < 'a >::exec_at_reverse) ... NOT COVERED
521: binop_bit, replace `&` with `|`, at src/dfa.rs@840:19-840:20(fn Fsm < 'a >::exec_at_reverse) ... NOT COVERED
522: binop_bit, replace `&` with `^`, at src/dfa.rs@840:19-840:20(fn Fsm < 'a >::exec_at_reverse) ... NOT COVERED
523: lit_int, replace `0` with `1`, at src/dfa.rs@840:35-840:36(fn Fsm < 'a >::exec_at_reverse) ... NOT COVERED
524: binop_cmp, replace `>` with `<`, at src/dfa.rs@840:33-840:34(fn Fsm < 'a >::exec_at_reverse) ... NOT COVERED
525: binop_cmp, replace `>` with `<=`, at src/dfa.rs@840:33-840:34(fn Fsm < 'a >::exec_at_reverse) ... NOT COVERED
526: binop_cmp, replace `>` with `>=`, at src/dfa.rs@840:33-840:34(fn Fsm < 'a >::exec_at_reverse) ... NOT COVERED
527: unop_not, remove `!`, at src/dfa.rs@841:23-841:24(fn Fsm < 'a >::exec_at_reverse) ... NOT COVERED
528: lit_int, replace `0` with `1`, at src/dfa.rs@843:35-843:36(fn Fsm < 'a >::exec_at_reverse) ... NOT COVERED
529: stmt_call, remove `qcur . clear () ;`, at src/dfa.rs@900:8-900:20(fn Fsm < 'a >::exec_byte) ... NOT COVERED
530: stmt_call, remove `qcur . insert (ip) ;`, at src/dfa.rs@902:12-902:27(fn Fsm < 'a >::exec_byte) ... NOT COVERED
531: lit_bool, replace `true` with `false`, at src/dfa.rs@920:28-920:32(fn Fsm < 'a >::exec_byte) ... NOT COVERED
532: lit_bool, replace `true` with `false`, at src/dfa.rs@921:33-921:37(fn Fsm < 'a >::exec_byte) ... NOT COVERED
533: lit_bool, replace `false` with `true`, at src/dfa.rs@922:41-922:46(fn Fsm < 'a >::exec_byte) ... NOT COVERED
534: binop_eq, replace `==` with `!=`, at src/dfa.rs@922:54-922:56(fn Fsm < 'a >::exec_byte) ... NOT COVERED
535: lit_bool, replace `true` with `false`, at src/dfa.rs@923:33-923:37(fn Fsm < 'a >::exec_byte) ... NOT COVERED
536: binop_eq, replace `==` with `!=`, at src/dfa.rs@925:28-925:30(fn Fsm < 'a >::exec_byte) ... NOT COVERED
537: lit_bool, replace `true` with `false`, at src/dfa.rs@926:42-926:46(fn Fsm < 'a >::exec_byte) ... NOT COVERED
538: lit_bool, replace `true` with `false`, at src/dfa.rs@928:38-928:42(fn Fsm < 'a >::exec_byte) ... NOT COVERED
539: stmt_call, remove `qnext . clear () ;`, at src/dfa.rs@932:12-932:25(fn Fsm < 'a >::exec_byte) ... NOT COVERED
540: stmt_call, remove `self . follow_epsilons (usize_to_u32 (ip), qnext, flags) ;`, at src/dfa.rs@934:16-934:68(fn Fsm < 'a >::exec_byte) ... NOT COVERED
541: stmt_call, remove `mem :: swap (qcur, qnext) ;`, at src/dfa.rs@936:12-936:34(fn Fsm < 'a >::exec_byte) ... NOT COVERED
542: lit_bool, replace `false` with `true`, at src/dfa.rs@951:52-951:57(fn Fsm < 'a >::exec_byte) ... NOT COVERED
543: binop_eq, replace `==` with `!=`, at src/dfa.rs@951:65-951:67(fn Fsm < 'a >::exec_byte) ... NOT COVERED
544: stmt_call, remove `state_flags . set_word () ;`, at src/dfa.rs@953:12-953:34(fn Fsm < 'a >::exec_byte) ... NOT COVERED
545: stmt_call, remove `qnext . clear () ;`, at src/dfa.rs@957:8-957:21(fn Fsm < 'a >::exec_byte) ... NOT COVERED
546: stmt_call, remove `state_flags . set_match () ;`, at src/dfa.rs@965:20-965:43(fn Fsm < 'a >::exec_byte) ... NOT COVERED
547: unop_not, remove `!`, at src/dfa.rs@966:23-966:24(fn Fsm < 'a >::exec_byte) ... NOT COVERED
548: lit_int, replace `1` with `2`, at src/dfa.rs@968:56-968:57(fn Fsm < 'a >::exec_byte) ... NOT COVERED
549: lit_int, replace `1` with `0`, at src/dfa.rs@968:56-968:57(fn Fsm < 'a >::exec_byte) ... NOT COVERED
550: binop_cmp, replace `>` with `<`, at src/dfa.rs@968:54-968:55(fn Fsm < 'a >::exec_byte) ... NOT COVERED
551: binop_cmp, replace `>` with `<=`, at src/dfa.rs@968:54-968:55(fn Fsm < 'a >::exec_byte) ... NOT COVERED
552: binop_cmp, replace `>` with `>=`, at src/dfa.rs@968:54-968:55(fn Fsm < 'a >::exec_byte) ... NOT COVERED
553: unop_not, remove `!`, at src/dfa.rs@969:27-969:28(fn Fsm < 'a >::exec_byte) ... NOT COVERED
554: binop_bool, replace `&&` with `||`, at src/dfa.rs@969:24-969:26(fn Fsm < 'a >::exec_byte) ... NOT COVERED
555: stmt_call, remove `qnext . insert (ip) ;`, at src/dfa.rs@973:24-973:40(fn Fsm < 'a >::exec_byte) ... NOT COVERED
556: lit_bool, replace `false` with `true`, at src/dfa.rs@977:42-977:47(fn Fsm < 'a >::exec_byte) ... NOT COVERED
557: stmt_call, remove `self . follow_epsilons (inst . goto as InstPtr, qnext, empty_flags,) ;`, at src/dfa.rs@978:24-982:25(fn Fsm < 'a >::exec_byte) ... NOT COVERED
558: lit_int, replace `1` with `2`, at src/dfa.rs@988:63-988:64(fn Fsm < 'a >::exec_byte) ... NOT COVERED
559: lit_int, replace `1` with `0`, at src/dfa.rs@988:63-988:64(fn Fsm < 'a >::exec_byte) ... NOT COVERED
560: binop_cmp, replace `>` with `<`, at src/dfa.rs@988:61-988:62(fn Fsm < 'a >::exec_byte) ... NOT COVERED
561: binop_cmp, replace `>` with `<=`, at src/dfa.rs@988:61-988:62(fn Fsm < 'a >::exec_byte) ... NOT COVERED
562: binop_cmp, replace `>` with `>=`, at src/dfa.rs@988:61-988:62(fn Fsm < 'a >::exec_byte) ... NOT COVERED
563: binop_bool, replace `&&` with `||`, at src/dfa.rs@988:34-988:36(fn Fsm < 'a >::exec_byte) ... NOT COVERED
564: stmt_call, remove `mem :: swap (qcur, qnext) ;`, at src/dfa.rs@993:12-993:34(fn Fsm < 'a >::exec_byte) ... NOT COVERED
565: lit_bool, replace `false` with `true`, at src/dfa.rs@995:12-995:17(fn Fsm < 'a >::exec_byte) ... NOT COVERED
566: lit_bool, replace `true` with `false`, at src/dfa.rs@997:12-997:16(fn Fsm < 'a >::exec_byte) ... NOT COVERED
567: unop_not, remove `!`, at src/dfa.rs@1012:25-1012:26(fn Fsm < 'a >::exec_byte) ... NOT COVERED
568: binop_bit, replace `&` with `|`, at src/dfa.rs@1012:23-1012:24(fn Fsm < 'a >::exec_byte) ... NOT COVERED
569: binop_bit, replace `&` with `^`, at src/dfa.rs@1012:23-1012:24(fn Fsm < 'a >::exec_byte) ... NOT COVERED
570: binop_eq, replace `==` with `!=`, at src/dfa.rs@1012:39-1012:41(fn Fsm < 'a >::exec_byte) ... NOT COVERED
571: binop_cmp, replace `<=` with `<`, at src/dfa.rs@1018:16-1018:18(fn Fsm < 'a >::exec_byte) ... NOT COVERED
572: binop_cmp, replace `<=` with `>=`, at src/dfa.rs@1018:16-1018:18(fn Fsm < 'a >::exec_byte) ... NOT COVERED
573: binop_cmp, replace `<=` with `>`, at src/dfa.rs@1018:16-1018:18(fn Fsm < 'a >::exec_byte) ... NOT COVERED
574: binop_bool, replace `&&` with `||`, at src/dfa.rs@1018:29-1018:31(fn Fsm < 'a >::exec_byte) ... NOT COVERED
575: stmt_call, remove `self . cache . trans . set_next (si, cls, next) ;`, at src/dfa.rs@1025:12-1025:52(fn Fsm < 'a >::exec_byte) ... NOT COVERED
576: stmt_call, remove `self . cache . stack . push (ip) ;`, at src/dfa.rs@1064:8-1064:33(fn Fsm < 'a >::follow_epsilons) ... NOT COVERED
577: stmt_call, remove `q . insert (ip as usize) ;`, at src/dfa.rs@1073:16-1073:37(fn Fsm < 'a >::follow_epsilons) ... NOT COVERED
578: stmt_call, remove `self . cache . stack . push (inst . goto2 as InstPtr) ;`, at src/dfa.rs@1120:24-1120:68(fn Fsm < 'a >::follow_epsilons) ... NOT COVERED
579: binop_cmp, replace `>` with `<`, at src/dfa.rs@1168:35-1168:36(fn Fsm < 'a >::cached_state) ... NOT COVERED
580: binop_cmp, replace `>` with `<=`, at src/dfa.rs@1168:35-1168:36(fn Fsm < 'a >::cached_state) ... NOT COVERED
581: binop_cmp, replace `>` with `>=`, at src/dfa.rs@1168:35-1168:36(fn Fsm < 'a >::cached_state) ... NOT COVERED
582: unop_not, remove `!`, at src/dfa.rs@1169:15-1169:16(fn Fsm < 'a >::cached_state) ... NOT COVERED
583: binop_bool, replace `&&` with `||`, at src/dfa.rs@1169:12-1169:14(fn Fsm < 'a >::cached_state) ... NOT COVERED
584: stmt_call, remove `insts . clear () ;`, at src/dfa.rs@1206:8-1206:21(fn Fsm < 'a >::cached_state_key) ... NOT COVERED
585: lit_int, replace `0` with `1`, at src/dfa.rs@1208:19-1208:20(fn Fsm < 'a >::cached_state_key) ... NOT COVERED
586: stmt_call, remove `insts . push (0) ;`, at src/dfa.rs@1208:8-1208:21(fn Fsm < 'a >::cached_state_key) ... NOT COVERED
587: lit_int, replace `0` with `1`, at src/dfa.rs@1210:23-1210:24(fn Fsm < 'a >::cached_state_key) ... NOT COVERED
588: stmt_call, remove `state_flags . set_empty () ;`, at src/dfa.rs@1218:20-1218:43(fn Fsm < 'a >::cached_state_key) ... NOT COVERED
589: stmt_call, remove `push_inst_ptr (& mut insts, & mut prev, ip) ;`, at src/dfa.rs@1222:20-1222:60(fn Fsm < 'a >::cached_state_key) ... NOT COVERED
590: unop_not, remove `!`, at src/dfa.rs@1223:23-1223:24(fn Fsm < 'a >::cached_state_key) ... NOT COVERED
591: lit_int, replace `1` with `2`, at src/dfa.rs@1233:42-1233:43(fn Fsm < 'a >::cached_state_key) ... NOT COVERED
592: lit_int, replace `1` with `0`, at src/dfa.rs@1233:42-1233:43(fn Fsm < 'a >::cached_state_key) ... NOT COVERED
593: binop_eq, replace `==` with `!=`, at src/dfa.rs@1233:39-1233:41(fn Fsm < 'a >::cached_state_key) ... NOT COVERED
594: unop_not, remove `!`, at src/dfa.rs@1233:47-1233:48(fn Fsm < 'a >::cached_state_key) ... NOT COVERED
595: binop_bool, replace `&&` with `||`, at src/dfa.rs@1233:44-1233:46(fn Fsm < 'a >::cached_state_key) ... NOT COVERED
596: lit_int, replace `0` with `1`, at src/dfa.rs@1237:18-1237:19(fn Fsm < 'a >::cached_state_key) ... NOT COVERED
597: lit_bool, replace `true` with `false`, at src/dfa.rs@1258:19-1258:23(fn Fsm < 'a >::clear_cache_and_save) ... NOT COVERED
598: unop_not, remove `!`, at src/dfa.rs@1264:19-1264:20(fn Fsm < 'a >::clear_cache_and_save) ... NOT COVERED
599: lit_bool, replace `false` with `true`, at src/dfa.rs@1265:27-1265:32(fn Fsm < 'a >::clear_cache_and_save) ... NOT COVERED
600: lit_bool, replace `true` with `false`, at src/dfa.rs@1271:16-1271:20(fn Fsm < 'a >::clear_cache_and_save) ... NOT COVERED
601: lit_int, replace `3` with `4`, at src/dfa.rs@1287:37-1287:38(fn Fsm < 'a >::clear_cache) ... NOT COVERED
602: lit_int, replace `3` with `2`, at src/dfa.rs@1287:37-1287:38(fn Fsm < 'a >::clear_cache) ... NOT COVERED
603: binop_cmp, replace `>=` with `<`, at src/dfa.rs@1287:34-1287:36(fn Fsm < 'a >::clear_cache) ... NOT COVERED
604: binop_cmp, replace `>=` with `<=`, at src/dfa.rs@1287:34-1287:36(fn Fsm < 'a >::clear_cache) ... NOT COVERED
605: binop_cmp, replace `>=` with `>`, at src/dfa.rs@1287:34-1287:36(fn Fsm < 'a >::clear_cache) ... NOT COVERED
606: binop_cmp, replace `>=` with `<`, at src/dfa.rs@1288:23-1288:25(fn Fsm < 'a >::clear_cache) ... NOT COVERED
607: binop_cmp, replace `>=` with `<=`, at src/dfa.rs@1288:23-1288:25(fn Fsm < 'a >::clear_cache) ... NOT COVERED
608: binop_cmp, replace `>=` with `>`, at src/dfa.rs@1288:23-1288:25(fn Fsm < 'a >::clear_cache) ... NOT COVERED
609: binop_bool, replace `&&` with `||`, at src/dfa.rs@1288:12-1288:14(fn Fsm < 'a >::clear_cache) ... NOT COVERED
610: binop_num, replace `-` with `+`, at src/dfa.rs@1289:24-1289:25(fn Fsm < 'a >::clear_cache) ... NOT COVERED
611: lit_int, replace `10` with `11`, at src/dfa.rs@1289:52-1289:54(fn Fsm < 'a >::clear_cache) ... NOT COVERED
612: lit_int, replace `10` with `9`, at src/dfa.rs@1289:52-1289:54(fn Fsm < 'a >::clear_cache) ... NOT COVERED
613: binop_num, replace `*` with `/`, at src/dfa.rs@1289:55-1289:56(fn Fsm < 'a >::clear_cache) ... NOT COVERED
614: binop_cmp, replace `<=` with `<`, at src/dfa.rs@1289:49-1289:51(fn Fsm < 'a >::clear_cache) ... NOT COVERED
615: binop_cmp, replace `<=` with `>=`, at src/dfa.rs@1289:49-1289:51(fn Fsm < 'a >::clear_cache) ... NOT COVERED
616: binop_cmp, replace `<=` with `>`, at src/dfa.rs@1289:49-1289:51(fn Fsm < 'a >::clear_cache) ... NOT COVERED
617: binop_bool, replace `&&` with `||`, at src/dfa.rs@1289:12-1289:14(fn Fsm < 'a >::clear_cache) ... NOT COVERED
618: lit_bool, replace `false` with `true`, at src/dfa.rs@1291:19-1291:24(fn Fsm < 'a >::clear_cache) ... NOT COVERED
619: lit_int, replace `1` with `2`, at src/dfa.rs@1295:34-1295:35(fn Fsm < 'a >::clear_cache) ... NOT COVERED
620: lit_int, replace `1` with `0`, at src/dfa.rs@1295:34-1295:35(fn Fsm < 'a >::clear_cache) ... NOT COVERED
621: unop_not, remove `!`, at src/dfa.rs@1298:44-1298:45(fn Fsm < 'a >::clear_cache) ... NOT COVERED
622: binop_bit, replace `&` with `|`, at src/dfa.rs@1298:42-1298:43(fn Fsm < 'a >::clear_cache) ... NOT COVERED
623: binop_bit, replace `&` with `^`, at src/dfa.rs@1298:42-1298:43(fn Fsm < 'a >::clear_cache) ... NOT COVERED
624: binop_cmp, replace `<=` with `<`, at src/dfa.rs@1299:47-1299:49(fn Fsm < 'a >::clear_cache) ... NOT COVERED
625: binop_cmp, replace `<=` with `>=`, at src/dfa.rs@1299:47-1299:49(fn Fsm < 'a >::clear_cache) ... NOT COVERED
626: binop_cmp, replace `<=` with `>`, at src/dfa.rs@1299:47-1299:49(fn Fsm < 'a >::clear_cache) ... NOT COVERED
627: stmt_call, remove `self . cache . reset_size () ;`, at src/dfa.rs@1304:8-1304:31(fn Fsm < 'a >::clear_cache) ... NOT COVERED
628: stmt_call, remove `self . cache . trans . clear () ;`, at src/dfa.rs@1305:8-1305:32(fn Fsm < 'a >::clear_cache) ... NOT COVERED
629: stmt_call, remove `self . cache . compiled . clear () ;`, at src/dfa.rs@1306:8-1306:35(fn Fsm < 'a >::clear_cache) ... NOT COVERED
630: lit_bool, replace `true` with `false`, at src/dfa.rs@1317:8-1317:12(fn Fsm < 'a >::clear_cache) ... NOT COVERED
631: binop_eq, replace `==` with `!=`, at src/dfa.rs@1350:14-1350:16(fn Fsm < 'a >::next_state) ... NOT COVERED
632: lit_int, replace `0` with `1`, at src/dfa.rs@1380:43-1380:44(fn Fsm < 'a >::start_state) ... NOT COVERED
633: lit_int, replace `1` with `2`, at src/dfa.rs@1381:46-1381:47(fn Fsm < 'a >::start_state) ... NOT COVERED
634: lit_int, replace `1` with `0`, at src/dfa.rs@1381:46-1381:47(fn Fsm < 'a >::start_state) ... NOT COVERED
635: binop_bit, replace `|` with `&`, at src/dfa.rs@1381:16-1381:17(fn Fsm < 'a >::start_state) ... NOT COVERED
636: binop_bit, replace `|` with `^`, at src/dfa.rs@1381:16-1381:17(fn Fsm < 'a >::start_state) ... NOT COVERED
637: lit_int, replace `2` with `3`, at src/dfa.rs@1382:53-1382:54(fn Fsm < 'a >::start_state) ... NOT COVERED
638: lit_int, replace `2` with `1`, at src/dfa.rs@1382:53-1382:54(fn Fsm < 'a >::start_state) ... NOT COVERED
639: binop_bit, replace `|` with `&`, at src/dfa.rs@1382:16-1382:17(fn Fsm < 'a >::start_state) ... NOT COVERED
640: binop_bit, replace `|` with `^`, at src/dfa.rs@1382:16-1382:17(fn Fsm < 'a >::start_state) ... NOT COVERED
641: lit_int, replace `3` with `4`, at src/dfa.rs@1383:51-1383:52(fn Fsm < 'a >::start_state) ... NOT COVERED
642: lit_int, replace `3` with `2`, at src/dfa.rs@1383:51-1383:52(fn Fsm < 'a >::start_state) ... NOT COVERED
643: binop_bit, replace `|` with `&`, at src/dfa.rs@1383:16-1383:17(fn Fsm < 'a >::start_state) ... NOT COVERED
644: binop_bit, replace `|` with `^`, at src/dfa.rs@1383:16-1383:17(fn Fsm < 'a >::start_state) ... NOT COVERED
645: lit_int, replace `4` with `5`, at src/dfa.rs@1384:56-1384:57(fn Fsm < 'a >::start_state) ... NOT COVERED
646: lit_int, replace `4` with `3`, at src/dfa.rs@1384:56-1384:57(fn Fsm < 'a >::start_state) ... NOT COVERED
647: binop_bit, replace `|` with `&`, at src/dfa.rs@1384:16-1384:17(fn Fsm < 'a >::start_state) ... NOT COVERED
648: binop_bit, replace `|` with `^`, at src/dfa.rs@1384:16-1384:17(fn Fsm < 'a >::start_state) ... NOT COVERED
649: lit_int, replace `5` with `6`, at src/dfa.rs@1385:60-1385:61(fn Fsm < 'a >::start_state) ... NOT COVERED
650: lit_int, replace `5` with `4`, at src/dfa.rs@1385:60-1385:61(fn Fsm < 'a >::start_state) ... NOT COVERED
651: binop_bit, replace `|` with `&`, at src/dfa.rs@1385:16-1385:17(fn Fsm < 'a >::start_state) ... NOT COVERED
652: binop_bit, replace `|` with `^`, at src/dfa.rs@1385:16-1385:17(fn Fsm < 'a >::start_state) ... NOT COVERED
653: lit_int, replace `6` with `7`, at src/dfa.rs@1386:52-1386:53(fn Fsm < 'a >::start_state) ... NOT COVERED
654: lit_int, replace `6` with `5`, at src/dfa.rs@1386:52-1386:53(fn Fsm < 'a >::start_state) ... NOT COVERED
655: binop_bit, replace `|` with `&`, at src/dfa.rs@1386:16-1386:17(fn Fsm < 'a >::start_state) ... NOT COVERED
656: binop_bit, replace `|` with `^`, at src/dfa.rs@1386:16-1386:17(fn Fsm < 'a >::start_state) ... NOT COVERED
657: stmt_call, remove `q . clear () ;`, at src/dfa.rs@1393:8-1393:17(fn Fsm < 'a >::start_state) ... NOT COVERED
658: stmt_call, remove `self . follow_epsilons (start, q, empty_flags) ;`, at src/dfa.rs@1395:8-1395:51(fn Fsm < 'a >::start_state) ... NOT COVERED
659: lit_int, replace `0` with `1`, at src/dfa.rs@1415:34-1415:35(fn Fsm < 'a >::start_flags) ... NOT COVERED
660: binop_eq, replace `==` with `!=`, at src/dfa.rs@1415:31-1415:33(fn Fsm < 'a >::start_flags) ... NOT COVERED
661: lit_int, replace `0` with `1`, at src/dfa.rs@1417:39-1417:40(fn Fsm < 'a >::start_flags) ... NOT COVERED
662: binop_eq, replace `==` with `!=`, at src/dfa.rs@1417:36-1417:38(fn Fsm < 'a >::start_flags) ... NOT COVERED
663: lit_int, replace `1` with `2`, at src/dfa.rs@1417:54-1417:55(fn Fsm < 'a >::start_flags) ... NOT COVERED
664: lit_int, replace `1` with `0`, at src/dfa.rs@1417:54-1417:55(fn Fsm < 'a >::start_flags) ... NOT COVERED
665: binop_num, replace `-` with `+`, at src/dfa.rs@1417:52-1417:53(fn Fsm < 'a >::start_flags) ... NOT COVERED
666: binop_eq, replace `==` with `!=`, at src/dfa.rs@1417:57-1417:59(fn Fsm < 'a >::start_flags) ... NOT COVERED
667: binop_bool, replace `||` with `&&`, at src/dfa.rs@1417:41-1417:43(fn Fsm < 'a >::start_flags) ... NOT COVERED
668: lit_int, replace `0` with `1`, at src/dfa.rs@1420:32-1420:33(fn Fsm < 'a >::start_flags) ... NOT COVERED
669: binop_cmp, replace `>` with `<`, at src/dfa.rs@1420:30-1420:31(fn Fsm < 'a >::start_flags) ... NOT COVERED
670: binop_cmp, replace `>` with `<=`, at src/dfa.rs@1420:30-1420:31(fn Fsm < 'a >::start_flags) ... NOT COVERED
671: binop_cmp, replace `>` with `>=`, at src/dfa.rs@1420:30-1420:31(fn Fsm < 'a >::start_flags) ... NOT COVERED
672: lit_int, replace `1` with `2`, at src/dfa.rs@1420:58-1420:59(fn Fsm < 'a >::start_flags) ... NOT COVERED
673: lit_int, replace `1` with `0`, at src/dfa.rs@1420:58-1420:59(fn Fsm < 'a >::start_flags) ... NOT COVERED
674: binop_num, replace `-` with `+`, at src/dfa.rs@1420:56-1420:57(fn Fsm < 'a >::start_flags) ... NOT COVERED
675: binop_bool, replace `&&` with `||`, at src/dfa.rs@1420:34-1420:36(fn Fsm < 'a >::start_flags) ... NOT COVERED
676: binop_cmp, replace `<` with `<=`, at src/dfa.rs@1421:25-1421:26(fn Fsm < 'a >::start_flags) ... NOT COVERED
677: binop_cmp, replace `<` with `>=`, at src/dfa.rs@1421:25-1421:26(fn Fsm < 'a >::start_flags) ... NOT COVERED
678: binop_cmp, replace `<` with `>`, at src/dfa.rs@1421:25-1421:26(fn Fsm < 'a >::start_flags) ... NOT COVERED
679: binop_bool, replace `&&` with `||`, at src/dfa.rs@1421:38-1421:40(fn Fsm < 'a >::start_flags) ... NOT COVERED
680: stmt_call, remove `state_flags . set_word () ;`, at src/dfa.rs@1423:12-1423:34(fn Fsm < 'a >::start_flags) ... NOT COVERED
681: binop_eq, replace `==` with `!=`, at src/dfa.rs@1425:19-1425:21(fn Fsm < 'a >::start_flags) ... NOT COVERED
682: lit_bool, replace `true` with `false`, at src/dfa.rs@1426:44-1426:48(fn Fsm < 'a >::start_flags) ... NOT COVERED
683: lit_bool, replace `true` with `false`, at src/dfa.rs@1428:40-1428:44(fn Fsm < 'a >::start_flags) ... NOT COVERED
684: binop_eq, replace `==` with `!=`, at src/dfa.rs@1444:31-1444:33(fn Fsm < 'a >::start_flags_reverse) ... NOT COVERED
685: binop_eq, replace `==` with `!=`, at src/dfa.rs@1446:36-1446:38(fn Fsm < 'a >::start_flags_reverse) ... NOT COVERED
686: binop_eq, replace `==` with `!=`, at src/dfa.rs@1446:62-1446:64(fn Fsm < 'a >::start_flags_reverse) ... NOT COVERED
687: binop_bool, replace `||` with `&&`, at src/dfa.rs@1446:50-1446:52(fn Fsm < 'a >::start_flags_reverse) ... NOT COVERED
688: binop_cmp, replace `<` with `<=`, at src/dfa.rs@1450:15-1450:16(fn Fsm < 'a >::start_flags_reverse) ... NOT COVERED
689: binop_cmp, replace `<` with `>=`, at src/dfa.rs@1450:15-1450:16(fn Fsm < 'a >::start_flags_reverse) ... NOT COVERED
690: binop_cmp, replace `<` with `>`, at src/dfa.rs@1450:15-1450:16(fn Fsm < 'a >::start_flags_reverse) ... NOT COVERED
691: binop_bool, replace `&&` with `||`, at src/dfa.rs@1450:28-1450:30(fn Fsm < 'a >::start_flags_reverse) ... NOT COVERED
692: lit_int, replace `0` with `1`, at src/dfa.rs@1451:27-1451:28(fn Fsm < 'a >::start_flags_reverse) ... NOT COVERED
693: binop_cmp, replace `>` with `<`, at src/dfa.rs@1451:25-1451:26(fn Fsm < 'a >::start_flags_reverse) ... NOT COVERED
694: binop_cmp, replace `>` with `<=`, at src/dfa.rs@1451:25-1451:26(fn Fsm < 'a >::start_flags_reverse) ... NOT COVERED
695: binop_cmp, replace `>` with `>=`, at src/dfa.rs@1451:25-1451:26(fn Fsm < 'a >::start_flags_reverse) ... NOT COVERED
696: lit_int, replace `1` with `2`, at src/dfa.rs@1451:53-1451:54(fn Fsm < 'a >::start_flags_reverse) ... NOT COVERED
697: lit_int, replace `1` with `0`, at src/dfa.rs@1451:53-1451:54(fn Fsm < 'a >::start_flags_reverse) ... NOT COVERED
698: binop_num, replace `-` with `+`, at src/dfa.rs@1451:51-1451:52(fn Fsm < 'a >::start_flags_reverse) ... NOT COVERED
699: binop_bool, replace `&&` with `||`, at src/dfa.rs@1451:29-1451:31(fn Fsm < 'a >::start_flags_reverse) ... NOT COVERED
700: stmt_call, remove `state_flags . set_word () ;`, at src/dfa.rs@1453:12-1453:34(fn Fsm < 'a >::start_flags_reverse) ... NOT COVERED
701: binop_eq, replace `==` with `!=`, at src/dfa.rs@1455:19-1455:21(fn Fsm < 'a >::start_flags_reverse) ... NOT COVERED
702: lit_bool, replace `true` with `false`, at src/dfa.rs@1456:44-1456:48(fn Fsm < 'a >::start_flags_reverse) ... NOT COVERED
703: lit_bool, replace `true` with `false`, at src/dfa.rs@1458:40-1458:44(fn Fsm < 'a >::start_flags_reverse) ... NOT COVERED
704: lit_int, replace `128` with `129`, at src/dfa.rs@1489:21-1489:24(fn Fsm < 'a >::add_state) ... NOT COVERED
705: lit_int, replace `128` with `127`, at src/dfa.rs@1489:21-1489:24(fn Fsm < 'a >::add_state) ... NOT COVERED
706: lit_int, replace `256` with `257`, at src/dfa.rs@1489:26-1489:29(fn Fsm < 'a >::add_state) ... NOT COVERED
707: lit_int, replace `256` with `255`, at src/dfa.rs@1489:26-1489:29(fn Fsm < 'a >::add_state) ... NOT COVERED
708: stmt_call, remove `self . cache . trans . set_next (si, cls, STATE_QUIT) ;`, at src/dfa.rs@1491:16-1491:62(fn Fsm < 'a >::add_state) ... NOT COVERED
709: binop_num, replace `+` with `-`, at src/dfa.rs@1497:12-1497:13(fn Fsm < 'a >::add_state) ... NOT COVERED
710: lit_int, replace `2` with `3`, at src/dfa.rs@1498:15-1498:16(fn Fsm < 'a >::add_state) ... NOT COVERED
711: lit_int, replace `2` with `1`, at src/dfa.rs@1498:15-1498:16(fn Fsm < 'a >::add_state) ... NOT COVERED
712: binop_num, replace `*` with `/`, at src/dfa.rs@1498:17-1498:18(fn Fsm < 'a >::add_state) ... NOT COVERED
713: binop_num, replace `+` with `-`, at src/dfa.rs@1498:12-1498:13(fn Fsm < 'a >::add_state) ... NOT COVERED
714: binop_num, replace `+` with `-`, at src/dfa.rs@1499:12-1499:13(fn Fsm < 'a >::add_state) ... NOT COVERED
715: stmt_call, remove `self . cache . compiled . insert (state, si) ;`, at src/dfa.rs@1500:8-1500:45(fn Fsm < 'a >::add_state) ... NOT COVERED
716: binop_num, replace `+` with `-`, at src/dfa.rs@1515:61-1515:62(fn Fsm < 'a >::prefix_at) ... NOT COVERED
717: lit_int, replace `255` with `256`, at src/dfa.rs@1524:32-1524:35(fn Fsm < 'a >::num_byte_classes) ... NOT COVERED
718: lit_int, replace `255` with `254`, at src/dfa.rs@1524:32-1524:35(fn Fsm < 'a >::num_byte_classes) ... NOT COVERED
719: lit_int, replace `1` with `2`, at src/dfa.rs@1524:48-1524:49(fn Fsm < 'a >::num_byte_classes) ... NOT COVERED
720: lit_int, replace `1` with `0`, at src/dfa.rs@1524:48-1524:49(fn Fsm < 'a >::num_byte_classes) ... NOT COVERED
721: binop_num, replace `+` with `-`, at src/dfa.rs@1524:46-1524:47(fn Fsm < 'a >::num_byte_classes) ... NOT COVERED
722: lit_int, replace `1` with `2`, at src/dfa.rs@1524:53-1524:54(fn Fsm < 'a >::num_byte_classes) ... NOT COVERED
723: lit_int, replace `1` with `0`, at src/dfa.rs@1524:53-1524:54(fn Fsm < 'a >::num_byte_classes) ... NOT COVERED
724: binop_num, replace `+` with `-`, at src/dfa.rs@1524:51-1524:52(fn Fsm < 'a >::num_byte_classes) ... NOT COVERED
725: lit_int, replace `1` with `2`, at src/dfa.rs@1532:46-1532:47(fn Fsm < 'a >::byte_class) ... NOT COVERED
726: lit_int, replace `1` with `0`, at src/dfa.rs@1532:46-1532:47(fn Fsm < 'a >::byte_class) ... NOT COVERED
727: binop_num, replace `-` with `+`, at src/dfa.rs@1532:44-1532:45(fn Fsm < 'a >::byte_class) ... NOT COVERED
728: lit_int, replace `1` with `2`, at src/dfa.rs@1552:58-1552:59(fn Fsm < 'a >::continue_past_first_match) ... NOT COVERED
729: lit_int, replace `1` with `0`, at src/dfa.rs@1552:58-1552:59(fn Fsm < 'a >::continue_past_first_match) ... NOT COVERED
730: binop_cmp, replace `>` with `<`, at src/dfa.rs@1552:56-1552:57(fn Fsm < 'a >::continue_past_first_match) ... NOT COVERED
731: binop_cmp, replace `>` with `<=`, at src/dfa.rs@1552:56-1552:57(fn Fsm < 'a >::continue_past_first_match) ... NOT COVERED
732: binop_cmp, replace `>` with `>=`, at src/dfa.rs@1552:56-1552:57(fn Fsm < 'a >::continue_past_first_match) ... NOT COVERED
733: binop_bool, replace `||` with `&&`, at src/dfa.rs@1552:29-1552:31(fn Fsm < 'a >::continue_past_first_match) ... NOT COVERED
734: unop_not, remove `!`, at src/dfa.rs@1557:8-1557:9(fn Fsm < 'a >::has_prefix) ... NOT COVERED
735: unop_not, remove `!`, at src/dfa.rs@1558:15-1558:16(fn Fsm < 'a >::has_prefix) ... NOT COVERED
736: binop_bool, replace `&&` with `||`, at src/dfa.rs@1558:12-1558:14(fn Fsm < 'a >::has_prefix) ... NOT COVERED
737: unop_not, remove `!`, at src/dfa.rs@1559:15-1559:16(fn Fsm < 'a >::has_prefix) ... NOT COVERED
738: binop_bool, replace `&&` with `||`, at src/dfa.rs@1559:12-1559:14(fn Fsm < 'a >::has_prefix) ... NOT COVERED
739: binop_bit, replace `|` with `&`, at src/dfa.rs@1569:15-1569:16(fn Fsm < 'a >::start_ptr) ... NOT COVERED
740: binop_bit, replace `|` with `^`, at src/dfa.rs@1569:15-1569:16(fn Fsm < 'a >::start_ptr) ... NOT COVERED
741: binop_num, replace `+` with `-`, at src/dfa.rs@1581:24-1581:25(fn Fsm < 'a >::approximate_size) ... NOT COVERED
742: binop_num, replace `/` with `*`, at src/dfa.rs@1631:36-1631:37(fn StateMap::get_state) ... NOT COVERED
743: stmt_call, remove `self . map . insert (state . clone (), si) ;`, at src/dfa.rs@1635:8-1635:42(fn StateMap::insert) ... NOT COVERED
744: stmt_call, remove `self . states . push (state) ;`, at src/dfa.rs@1636:8-1636:31(fn StateMap::insert) ... NOT COVERED
745: stmt_call, remove `self . map . clear () ;`, at src/dfa.rs@1640:8-1640:24(fn StateMap::clear) ... NOT COVERED
746: stmt_call, remove `self . states . clear () ;`, at src/dfa.rs@1641:8-1641:27(fn StateMap::clear) ... NOT COVERED
747: binop_num, replace `/` with `*`, at src/dfa.rs@1656:25-1656:26(fn Transitions::num_states) ... NOT COVERED
748: binop_cmp, replace `>` with `<`, at src/dfa.rs@1664:14-1664:15(fn Transitions::add) ... NOT COVERED
749: binop_cmp, replace `>` with `<=`, at src/dfa.rs@1664:14-1664:15(fn Transitions::add) ... NOT COVERED
750: binop_cmp, replace `>` with `>=`, at src/dfa.rs@1664:14-1664:15(fn Transitions::add) ... NOT COVERED
751: stmt_call, remove `self . table . extend (repeat (STATE_UNKNOWN) . take (self . num_byte_classes)) ;`, at src/dfa.rs@1667:8-1667:76(fn Transitions::add) ... NOT COVERED
752: stmt_call, remove `self . table . clear () ;`, at src/dfa.rs@1673:8-1673:26(fn Transitions::clear) ... NOT COVERED
753: binop_num, replace `+` with `-`, at src/dfa.rs@1678:31-1678:32(fn Transitions::set_next) ... NOT COVERED
754: binop_num, replace `+` with `-`, at src/dfa.rs@1683:31-1683:32(fn Transitions::next) ... NOT COVERED
755: binop_num, replace `*` with `/`, at src/dfa.rs@1688:30-1688:31(fn Transitions::state_heap_size) ... NOT COVERED
756: lit_int, replace `1` with `2`, at src/dfa.rs@1701:17-1701:28(fn StateFlags::is_match) ... NOT COVERED
757: lit_int, replace `1` with `0`, at src/dfa.rs@1701:17-1701:28(fn StateFlags::is_match) ... NOT COVERED
758: binop_bit, replace `&` with `|`, at src/dfa.rs@1701:15-1701:16(fn StateFlags::is_match) ... NOT COVERED
759: binop_bit, replace `&` with `^`, at src/dfa.rs@1701:15-1701:16(fn StateFlags::is_match) ... NOT COVERED
760: lit_int, replace `0` with `1`, at src/dfa.rs@1701:31-1701:32(fn StateFlags::is_match) ... NOT COVERED
761: binop_cmp, replace `>` with `<`, at src/dfa.rs@1701:29-1701:30(fn StateFlags::is_match) ... NOT COVERED
762: binop_cmp, replace `>` with `<=`, at src/dfa.rs@1701:29-1701:30(fn StateFlags::is_match) ... NOT COVERED
763: binop_cmp, replace `>` with `>=`, at src/dfa.rs@1701:29-1701:30(fn StateFlags::is_match) ... NOT COVERED
764: lit_int, replace `1` with `2`, at src/dfa.rs@1705:18-1705:29(fn StateFlags::set_match) ... NOT COVERED
765: lit_int, replace `1` with `0`, at src/dfa.rs@1705:18-1705:29(fn StateFlags::set_match) ... NOT COVERED
766: lit_int, replace `2` with `3`, at src/dfa.rs@1709:17-1709:29(fn StateFlags::is_word) ... NOT COVERED
767: lit_int, replace `2` with `1`, at src/dfa.rs@1709:17-1709:29(fn StateFlags::is_word) ... NOT COVERED
768: binop_bit, replace `&` with `|`, at src/dfa.rs@1709:15-1709:16(fn StateFlags::is_word) ... NOT COVERED
769: binop_bit, replace `&` with `^`, at src/dfa.rs@1709:15-1709:16(fn StateFlags::is_word) ... NOT COVERED
770: lit_int, replace `0` with `1`, at src/dfa.rs@1709:32-1709:33(fn StateFlags::is_word) ... NOT COVERED
771: binop_cmp, replace `>` with `<`, at src/dfa.rs@1709:30-1709:31(fn StateFlags::is_word) ... NOT COVERED
772: binop_cmp, replace `>` with `<=`, at src/dfa.rs@1709:30-1709:31(fn StateFlags::is_word) ... NOT COVERED
773: binop_cmp, replace `>` with `>=`, at src/dfa.rs@1709:30-1709:31(fn StateFlags::is_word) ... NOT COVERED
774: lit_int, replace `2` with `3`, at src/dfa.rs@1713:18-1713:30(fn StateFlags::set_word) ... NOT COVERED
775: lit_int, replace `2` with `1`, at src/dfa.rs@1713:18-1713:30(fn StateFlags::set_word) ... NOT COVERED
776: lit_int, replace `4` with `5`, at src/dfa.rs@1717:17-1717:29(fn StateFlags::has_empty) ... NOT COVERED
777: lit_int, replace `4` with `3`, at src/dfa.rs@1717:17-1717:29(fn StateFlags::has_empty) ... NOT COVERED
778: binop_bit, replace `&` with `|`, at src/dfa.rs@1717:15-1717:16(fn StateFlags::has_empty) ... NOT COVERED
779: binop_bit, replace `&` with `^`, at src/dfa.rs@1717:15-1717:16(fn StateFlags::has_empty) ... NOT COVERED
780: lit_int, replace `0` with `1`, at src/dfa.rs@1717:32-1717:33(fn StateFlags::has_empty) ... NOT COVERED
781: binop_cmp, replace `>` with `<`, at src/dfa.rs@1717:30-1717:31(fn StateFlags::has_empty) ... NOT COVERED
782: binop_cmp, replace `>` with `<=`, at src/dfa.rs@1717:30-1717:31(fn StateFlags::has_empty) ... NOT COVERED
783: binop_cmp, replace `>` with `>=`, at src/dfa.rs@1717:30-1717:31(fn StateFlags::has_empty) ... NOT COVERED
784: lit_int, replace `4` with `5`, at src/dfa.rs@1721:18-1721:30(fn StateFlags::set_empty) ... NOT COVERED
785: lit_int, replace `4` with `3`, at src/dfa.rs@1721:18-1721:30(fn StateFlags::set_empty) ... NOT COVERED
786: lit_int, replace `256` with `257`, at src/dfa.rs@1730:13-1730:16(fn Byte::eof) ... NOT COVERED
787: lit_int, replace `256` with `255`, at src/dfa.rs@1730:13-1730:16(fn Byte::eof) ... NOT COVERED
788: lit_int, replace `256` with `257`, at src/dfa.rs@1733:18-1733:21(fn Byte::is_eof) ... NOT COVERED
789: lit_int, replace `256` with `255`, at src/dfa.rs@1733:18-1733:21(fn Byte::is_eof) ... NOT COVERED
790: binop_eq, replace `==` with `!=`, at src/dfa.rs@1733:15-1733:17(fn Byte::is_eof) ... NOT COVERED
791: lit_bool, replace `false` with `true`, at src/dfa.rs@1738:27-1738:32(fn Byte::is_ascii_word) ... NOT COVERED
792: lit_bool, replace `true` with `false`, at src/dfa.rs@1742:62-1742:66(fn Byte::is_ascii_word) ... NOT COVERED
793: lit_bool, replace `false` with `true`, at src/dfa.rs@1743:17-1743:22(fn Byte::is_ascii_word) ... NOT COVERED
794: lit_int, replace `0` with `1`, at src/dfa.rs@1769:18-1769:19(fn Transitions::fmt) ... NOT COVERED
795: binop_num, replace `*` with `/`, at src/dfa.rs@1770:23-1770:24(fn Transitions::fmt) ... NOT COVERED
796: binop_num, replace `+` with `-`, at src/dfa.rs@1771:22-1771:23(fn Transitions::fmt) ... NOT COVERED
797: stmt_call, remove `fmtd . entry (& si . to_string (), & TransitionsRow (& self . table [s .. e])) ;`, at src/dfa.rs@1772:12-1772:75(fn Transitions::fmt) ... NOT COVERED
798: stmt_call, remove `fmtd . entry (& vb (b as usize), & "DEAD") ;`, at src/dfa.rs@1787:20-1787:56(fn TransitionsRow < 'a >::fmt) ... NOT COVERED
799: stmt_call, remove `fmtd . entry (& vb (b as usize), & si . to_string ()) ;`, at src/dfa.rs@1790:20-1790:64(fn TransitionsRow < 'a >::fmt) ... NOT COVERED
800: binop_cmp, replace `>` with `<`, at src/dfa.rs@1812:9-1812:10(fn vb) ... NOT COVERED
801: binop_cmp, replace `>` with `<=`, at src/dfa.rs@1812:9-1812:10(fn vb) ... NOT COVERED
802: binop_cmp, replace `>` with `>=`, at src/dfa.rs@1812:9-1812:10(fn vb) ... NOT COVERED
803: binop_cmp, replace `>` with `<`, at src/dfa.rs@1821:18-1821:19(fn usize_to_u32) ... NOT COVERED
804: binop_cmp, replace `>` with `<=`, at src/dfa.rs@1821:18-1821:19(fn usize_to_u32) ... NOT COVERED
805: binop_cmp, replace `>` with `>=`, at src/dfa.rs@1821:18-1821:19(fn usize_to_u32) ... NOT COVERED
806: binop_eq, replace `==` with `!=`, at src/dfa.rs@1830:10-1830:12(fn show_state_ptr) ... NOT COVERED
807: binop_eq, replace `==` with `!=`, at src/dfa.rs@1833:10-1833:12(fn show_state_ptr) ... NOT COVERED
808: binop_eq, replace `==` with `!=`, at src/dfa.rs@1836:10-1836:12(fn show_state_ptr) ... NOT COVERED
809: binop_bit, replace `&` with `|`, at src/dfa.rs@1839:10-1839:11(fn show_state_ptr) ... NOT COVERED
810: binop_bit, replace `&` with `^`, at src/dfa.rs@1839:10-1839:11(fn show_state_ptr) ... NOT COVERED
811: lit_int, replace `0` with `1`, at src/dfa.rs@1839:26-1839:27(fn show_state_ptr) ... NOT COVERED
812: binop_cmp, replace `>` with `<`, at src/dfa.rs@1839:24-1839:25(fn show_state_ptr) ... NOT COVERED
813: binop_cmp, replace `>` with `<=`, at src/dfa.rs@1839:24-1839:25(fn show_state_ptr) ... NOT COVERED
814: binop_cmp, replace `>` with `>=`, at src/dfa.rs@1839:24-1839:25(fn show_state_ptr) ... NOT COVERED
815: binop_bit, replace `&` with `|`, at src/dfa.rs@1842:10-1842:11(fn show_state_ptr) ... NOT COVERED
816: binop_bit, replace `&` with `^`, at src/dfa.rs@1842:10-1842:11(fn show_state_ptr) ... NOT COVERED
817: lit_int, replace `0` with `1`, at src/dfa.rs@1842:26-1842:27(fn show_state_ptr) ... NOT COVERED
818: binop_cmp, replace `>` with `<`, at src/dfa.rs@1842:24-1842:25(fn show_state_ptr) ... NOT COVERED
819: binop_cmp, replace `>` with `<=`, at src/dfa.rs@1842:24-1842:25(fn show_state_ptr) ... NOT COVERED
820: binop_cmp, replace `>` with `>=`, at src/dfa.rs@1842:24-1842:25(fn show_state_ptr) ... NOT COVERED
821: lit_int, replace `1` with `2`, at src/dfa.rs@1850:31-1850:32(fn write_vari32) ... killed
822: lit_int, replace `1` with `0`, at src/dfa.rs@1850:31-1850:32(fn write_vari32) ... killed
823: lit_int, replace `0` with `1`, at src/dfa.rs@1851:11-1851:12(fn write_vari32) ... killed
824: binop_cmp, replace `<` with `<=`, at src/dfa.rs@1851:9-1851:10(fn write_vari32) ... killed
825: binop_cmp, replace `<` with `>=`, at src/dfa.rs@1851:9-1851:10(fn write_vari32) ... killed
826: binop_cmp, replace `<` with `>`, at src/dfa.rs@1851:9-1851:10(fn write_vari32) ... killed
827: unop_not, remove `!`, at src/dfa.rs@1852:13-1852:14(fn write_vari32) ... killed
828: lit_int, replace `1` with `2`, at src/dfa.rs@1860:23-1860:24(fn read_vari32) ... killed
829: lit_int, replace `1` with `0`, at src/dfa.rs@1860:23-1860:24(fn read_vari32) ... killed
830: lit_int, replace `1` with `2`, at src/dfa.rs@1861:12-1861:13(fn read_vari32) ... killed
831: lit_int, replace `1` with `0`, at src/dfa.rs@1861:12-1861:13(fn read_vari32) ... killed
832: binop_bit, replace `&` with `|`, at src/dfa.rs@1861:10-1861:11(fn read_vari32) ... killed
833: binop_bit, replace `&` with `^`, at src/dfa.rs@1861:10-1861:11(fn read_vari32) ... killed
834: lit_int, replace `0` with `1`, at src/dfa.rs@1861:17-1861:18(fn read_vari32) ... killed
835: binop_eq, replace `!=` with `==`, at src/dfa.rs@1861:14-1861:16(fn read_vari32) ... killed
836: unop_not, remove `!`, at src/dfa.rs@1862:12-1862:13(fn read_vari32) ... killed
837: lit_int, replace `128` with `129`, at src/dfa.rs@1869:15-1869:26(fn write_varu32) ... killed
838: lit_int, replace `128` with `127`, at src/dfa.rs@1869:15-1869:26(fn write_varu32) ... SURVIVED
839: binop_cmp, replace `>=` with `<`, at src/dfa.rs@1869:12-1869:14(fn write_varu32) ... killed (timeout)
840: binop_cmp, replace `>=` with `<=`, at src/dfa.rs@1869:12-1869:14(fn write_varu32) ... killed (timeout)
841: binop_cmp, replace `>=` with `>`, at src/dfa.rs@1869:12-1869:14(fn write_varu32) ... killed
842: lit_int, replace `128` with `129`, at src/dfa.rs@1870:30-1870:41(fn write_varu32) ... killed
843: lit_int, replace `128` with `127`, at src/dfa.rs@1870:30-1870:41(fn write_varu32) ... killed
844: binop_bit, replace `|` with `&`, at src/dfa.rs@1870:28-1870:29(fn write_varu32) ... killed
845: binop_bit, replace `|` with `^`, at src/dfa.rs@1870:28-1870:29(fn write_varu32) ... killed
846: stmt_call, remove `data . push ((n as u8) | 0b1000_0000) ;`, at src/dfa.rs@1870:8-1870:42(fn write_varu32) ... killed
847: lit_int, replace `7` with `8`, at src/dfa.rs@1871:14-1871:15(fn write_varu32) ... killed
848: lit_int, replace `7` with `6`, at src/dfa.rs@1871:14-1871:15(fn write_varu32) ... killed
849: stmt_call, remove `data . push (n as u8) ;`, at src/dfa.rs@1873:4-1873:22(fn write_varu32) ... killed
850: lit_int, replace `0` with `1`, at src/dfa.rs@1878:21-1878:22(fn read_varu32) ... killed
851: lit_int, replace `0` with `1`, at src/dfa.rs@1879:25-1879:26(fn read_varu32) ... killed
852: lit_int, replace `128` with `129`, at src/dfa.rs@1881:15-1881:26(fn read_varu32) ... killed
853: lit_int, replace `128` with `127`, at src/dfa.rs@1881:15-1881:26(fn read_varu32) ... killed
854: binop_cmp, replace `<` with `<=`, at src/dfa.rs@1881:13-1881:14(fn read_varu32) ... killed
855: binop_cmp, replace `<` with `>=`, at src/dfa.rs@1881:13-1881:14(fn read_varu32) ... killed
856: binop_cmp, replace `<` with `>`, at src/dfa.rs@1881:13-1881:14(fn read_varu32) ... killed
857: binop_bit, replace `|` with `&`, at src/dfa.rs@1882:22-1882:23(fn read_varu32) ... killed
858: binop_bit, replace `|` with `^`, at src/dfa.rs@1882:22-1882:23(fn read_varu32) ... SURVIVED
859: lit_int, replace `1` with `2`, at src/dfa.rs@1882:51-1882:52(fn read_varu32) ... killed
860: lit_int, replace `1` with `0`, at src/dfa.rs@1882:51-1882:52(fn read_varu32) ... killed
861: binop_num, replace `+` with `-`, at src/dfa.rs@1882:49-1882:50(fn read_varu32) ... killed
862: lit_int, replace `127` with `128`, at src/dfa.rs@1884:27-1884:38(fn read_varu32) ... killed
863: lit_int, replace `127` with `126`, at src/dfa.rs@1884:27-1884:38(fn read_varu32) ... killed
864: binop_bit, replace `&` with `|`, at src/dfa.rs@1884:25-1884:26(fn read_varu32) ... killed
865: binop_bit, replace `&` with `^`, at src/dfa.rs@1884:25-1884:26(fn read_varu32) ... killed
866: lit_int, replace `7` with `8`, at src/dfa.rs@1885:17-1885:18(fn read_varu32) ... killed
867: lit_int, replace `7` with `6`, at src/dfa.rs@1885:17-1885:18(fn read_varu32) ... killed
868: lit_int, replace `0` with `1`, at src/dfa.rs@1887:5-1887:6(fn read_varu32) ... NOT COVERED
869: lit_int, replace `0` with `1`, at src/dfa.rs@1887:8-1887:9(fn read_varu32) ... NOT COVERED
870: lit_int, replace `79` with `80`, at src/error.rs@53:50-53:52(fn Error::fmt) ... NOT COVERED
871: lit_int, replace `79` with `78`, at src/error.rs@53:50-53:52(fn Error::fmt) ... NOT COVERED
872: lit_bool, replace `false` with `true`, at src/lib.rs@1:0-1:0(fn ExecBuilder::new_options) ... SURVIVED
873: lit_bool, replace `true` with `false`, at src/lib.rs@1:0-1:0(fn ExecBuilder::new_options) ... SURVIVED
874: lit_bool, replace `false` with `true`, at src/lib.rs@1:0-1:0(fn ExecBuilder::parse) ... SURVIVED
875: lit_int, replace `1` with `2`, at src/lib.rs@1:0-1:0(fn ExecBuilder::parse) ... SURVIVED
876: lit_int, replace `1` with `0`, at src/lib.rs@1:0-1:0(fn ExecBuilder::parse) ... SURVIVED
877: binop_cmp, replace `>` with `<`, at src/exec.rs@116:17-116:34(fn ExecBuilder::parse) ... SURVIVED
878: binop_cmp, replace `>` with `<=`, at src/exec.rs@116:17-116:34(fn ExecBuilder::parse) ... SURVIVED
879: binop_cmp, replace `>` with `>=`, at src/exec.rs@116:17-116:34(fn ExecBuilder::parse) ... SURVIVED
880: unop_not, remove `!`, at src/exec.rs@116:17-116:34(fn ExecBuilder::parse) ... SURVIVED
881: unop_not, remove `!`, at src/exec.rs@116:17-116:34(fn ExecBuilder::parse) ... SURVIVED
882: binop_bool, replace `||` with `&&`, at src/exec.rs@116:17-116:34(fn ExecBuilder::parse) ... SURVIVED
883: unop_not, remove `!`, at src/exec.rs@116:17-116:34(fn ExecBuilder::parse) ... SURVIVED
884: binop_bool, replace `&&` with `||`, at src/exec.rs@116:17-116:34(fn ExecBuilder::parse) ... SURVIVED
885: binop_bool, replace `&&` with `||`, at src/exec.rs@116:17-116:34(fn ExecBuilder::parse) ... SURVIVED
886: unop_not, remove `!`, at src/exec.rs@116:17-116:34(fn ExecBuilder::parse) ... SURVIVED
887: unop_not, remove `!`, at src/exec.rs@116:17-116:34(fn ExecBuilder::parse) ... SURVIVED
888: binop_bool, replace `&&` with `||`, at src/exec.rs@116:17-116:34(fn ExecBuilder::parse) ... SURVIVED
889: binop_bool, replace `&&` with `||`, at src/exec.rs@116:17-116:34(fn ExecBuilder::parse) ... SURVIVED
890: unop_not, remove `!`, at src/exec.rs@116:17-116:34(fn ExecBuilder::parse) ... SURVIVED
891: stmt_call, remove `exprs . push (expr) ;`, at src/exec.rs@116:17-116:34(fn ExecBuilder::parse) ... killed
892: binop_bool, replace `||` with `&&`, at src/exec.rs@116:17-116:34(fn ExecBuilder::build) ... SURVIVED
893: lit_bool, replace `true` with `false`, at src/lib.rs@1:0-1:0(fn ExecBuilder::build) ... SURVIVED
894: lit_bool, replace `true` with `false`, at src/lib.rs@1:0-1:0(fn ExecBuilder::build) ... SURVIVED
895: lit_bool, replace `true` with `false`, at src/lib.rs@1:0-1:0(fn ExecBuilder::build) ... SURVIVED
896: lit_int, replace `1` with `2`, at src/lib.rs@1:0-1:0(fn ExecBuilder::build_aho_corasick) ... SURVIVED
897: lit_int, replace `1` with `0`, at src/lib.rs@1:0-1:0(fn ExecBuilder::build_aho_corasick) ... SURVIVED
898: binop_eq, replace `!=` with `==`, at src/exec.rs@116:17-116:34(fn ExecBuilder::build_aho_corasick) ... SURVIVED
899: lit_int, replace `0` with `1`, at src/lib.rs@1:0-1:0(fn ExecBuilder::build_aho_corasick) ... killed
900: lit_int, replace `32` with `33`, at src/lib.rs@1:0-1:0(fn ExecBuilder::build_aho_corasick) ... NOT COVERED
901: lit_int, replace `32` with `31`, at src/lib.rs@1:0-1:0(fn ExecBuilder::build_aho_corasick) ... NOT COVERED
902: binop_cmp, replace `<=` with `<`, at src/exec.rs@116:17-116:34(fn ExecBuilder::build_aho_corasick) ... NOT COVERED
903: binop_cmp, replace `<=` with `>=`, at src/exec.rs@116:17-116:34(fn ExecBuilder::build_aho_corasick) ... NOT COVERED
904: binop_cmp, replace `<=` with `>`, at src/exec.rs@116:17-116:34(fn ExecBuilder::build_aho_corasick) ... NOT COVERED
905: lit_bool, replace `true` with `false`, at src/lib.rs@1:0-1:0(fn ExecBuilder::build_aho_corasick) ... NOT COVERED
906: lit_int, replace `2` with `3`, at src/exec.rs@416:37-416:38(fn ExecNoSync < 'c >::slots_len) ... NOT COVERED
907: lit_int, replace `2` with `1`, at src/exec.rs@416:37-416:38(fn ExecNoSync < 'c >::slots_len) ... NOT COVERED
908: binop_num, replace `*` with `/`, at src/exec.rs@416:35-416:36(fn ExecNoSync < 'c >::slots_len) ... NOT COVERED
909: lit_int, replace `1` with `2`, at src/exec.rs@420:12-420:13(fn ExecNoSync < 'c >::next_after_empty) ... NOT COVERED
910: lit_int, replace `1` with `0`, at src/exec.rs@420:12-420:13(fn ExecNoSync < 'c >::next_after_empty) ... NOT COVERED
911: binop_num, replace `+` with `-`, at src/exec.rs@420:10-420:11(fn ExecNoSync < 'c >::next_after_empty) ... NOT COVERED
912: unop_not, remove `!`, at src/exec.rs@427:11-427:12(fn ExecNoSync < 'c >::shortest_match_at) ... NOT COVERED
913: lit_bool, replace `true` with `false`, at src/exec.rs@448:20-448:24(fn ExecNoSync < 'c >::shortest_match_at) ... NOT COVERED
914: unop_not, remove `!`, at src/exec.rs@476:11-476:12(fn ExecNoSync < 'c >::is_match_at) ... NOT COVERED
915: lit_bool, replace `false` with `true`, at src/exec.rs@477:19-477:24(fn ExecNoSync < 'c >::is_match_at) ... NOT COVERED
916: lit_bool, replace `true` with `false`, at src/exec.rs@490:45-490:49(fn ExecNoSync < 'c >::is_match_at) ... NOT COVERED
917: lit_bool, replace `false` with `true`, at src/exec.rs@491:47-491:52(fn ExecNoSync < 'c >::is_match_at) ... NOT COVERED
918: lit_bool, replace `true` with `false`, at src/exec.rs@500:20-500:24(fn ExecNoSync < 'c >::is_match_at) ... NOT COVERED
919: lit_bool, replace `true` with `false`, at src/exec.rs@504:45-504:49(fn ExecNoSync < 'c >::is_match_at) ... NOT COVERED
920: lit_bool, replace `false` with `true`, at src/exec.rs@505:47-505:52(fn ExecNoSync < 'c >::is_match_at) ... NOT COVERED
921: lit_bool, replace `true` with `false`, at src/exec.rs@512:45-512:49(fn ExecNoSync < 'c >::is_match_at) ... NOT COVERED
922: lit_bool, replace `false` with `true`, at src/exec.rs@513:47-513:52(fn ExecNoSync < 'c >::is_match_at) ... NOT COVERED
923: lit_bool, replace `false` with `true`, at src/exec.rs@518:34-518:39(fn ExecNoSync < 'c >::is_match_at) ... NOT COVERED
924: unop_not, remove `!`, at src/exec.rs@526:11-526:12(fn ExecNoSync < 'c >::find_at) ... SURVIVED
925: lit_int, replace `0` with `1`, at src/exec.rs@593:26-593:27(fn ExecNoSync < 'c >::captures_read_at) ... NOT COVERED
926: lit_int, replace `1` with `2`, at src/exec.rs@594:26-594:27(fn ExecNoSync < 'c >::captures_read_at) ... NOT COVERED
927: lit_int, replace `1` with `0`, at src/exec.rs@594:26-594:27(fn ExecNoSync < 'c >::captures_read_at) ... NOT COVERED
928: unop_not, remove `!`, at src/exec.rs@600:11-600:12(fn ExecNoSync < 'c >::captures_read_at) ... NOT COVERED
929: binop_num, replace `+` with `-`, at src/exec.rs@690:62-690:63(fn ExecNoSync < 'c >::find_literals) ... NOT COVERED
930: binop_num, replace `+` with `-`, at src/exec.rs@690:73-690:74(fn ExecNoSync < 'c >::find_literals) ... NOT COVERED
931: unop_not, remove `!`, at src/exec.rs@694:19-694:20(fn ExecNoSync < 'c >::find_literals) ... killed
932: lit_int, replace `0` with `1`, at src/exec.rs@695:66-695:67(fn ExecNoSync < 'c >::find_literals) ... killed
933: binop_eq, replace `==` with `!=`, at src/exec.rs@695:63-695:65(fn ExecNoSync < 'c >::find_literals) ... killed
934: binop_bool, replace `&&` with `||`, at src/exec.rs@695:54-695:56(fn ExecNoSync < 'c >::find_literals) ... killed
935: binop_bool, replace `||` with `&&`, at src/exec.rs@695:20-695:22(fn ExecNoSync < 'c >::find_literals) ... killed
936: binop_num, replace `+` with `-`, at src/exec.rs@698:45-698:46(fn ExecNoSync < 'c >::find_literals) ... SURVIVED
937: binop_num, replace `+` with `-`, at src/exec.rs@698:56-698:57(fn ExecNoSync < 'c >::find_literals) ... killed
938: binop_num, replace `+` with `-`, at src/exec.rs@706:41-706:42(fn ExecNoSync < 'c >::find_literals) ... NOT COVERED
939: binop_num, replace `+` with `-`, at src/exec.rs@706:52-706:53(fn ExecNoSync < 'c >::find_literals) ... NOT COVERED
940: binop_num, replace `+` with `-`, at src/exec.rs@714:32-714:33(fn ExecNoSync < 'c >::find_literals) ... NOT COVERED
941: binop_num, replace `+` with `-`, at src/exec.rs@714:51-714:52(fn ExecNoSync < 'c >::find_literals) ... NOT COVERED
942: lit_bool, replace `false` with `true`, at src/exec.rs@733:12-733:17(fn ExecNoSync < 'c >::find_dfa_forward) ... NOT COVERED
943: binop_eq, replace `==` with `!=`, at src/exec.rs@739:32-739:34(fn ExecNoSync < 'c >::find_dfa_forward) ... NOT COVERED
944: lit_bool, replace `false` with `true`, at src/exec.rs@746:12-746:17(fn ExecNoSync < 'c >::find_dfa_forward) ... NOT COVERED
945: binop_num, replace `-` with `+`, at src/exec.rs@748:16-748:17(fn ExecNoSync < 'c >::find_dfa_forward) ... NOT COVERED
946: binop_num, replace `+` with `-`, at src/exec.rs@750:37-750:38(fn ExecNoSync < 'c >::find_dfa_forward) ... NOT COVERED
947: lit_bool, replace `false` with `true`, at src/exec.rs@773:12-773:17(fn ExecNoSync < 'c >::find_dfa_anchored_reverse) ... NOT COVERED
948: binop_num, replace `-` with `+`, at src/exec.rs@775:23-775:24(fn ExecNoSync < 'c >::find_dfa_anchored_reverse) ... NOT COVERED
949: binop_num, replace `+` with `-`, at src/exec.rs@777:37-777:38(fn ExecNoSync < 'c >::find_dfa_anchored_reverse) ... NOT COVERED
950: lit_bool, replace `true` with `false`, at src/exec.rs@787:60-787:64(fn ExecNoSync < 'c >::shortest_dfa) ... NOT COVERED
951: binop_cmp, replace `<=` with `<`, at src/exec.rs@832:18-832:20(fn ExecNoSync < 'c >::exec_dfa_reverse_suffix) ... NOT COVERED
952: binop_cmp, replace `<=` with `>=`, at src/exec.rs@832:18-832:20(fn ExecNoSync < 'c >::exec_dfa_reverse_suffix) ... NOT COVERED
953: binop_cmp, replace `<=` with `>`, at src/exec.rs@832:18-832:20(fn ExecNoSync < 'c >::exec_dfa_reverse_suffix) ... NOT COVERED
954: binop_num, replace `+` with `-`, at src/exec.rs@837:31-837:32(fn ExecNoSync < 'c >::exec_dfa_reverse_suffix) ... NOT COVERED
955: lit_bool, replace `false` with `true`, at src/exec.rs@841:16-841:21(fn ExecNoSync < 'c >::exec_dfa_reverse_suffix) ... NOT COVERED
956: binop_num, replace `-` with `+`, at src/exec.rs@843:20-843:21(fn ExecNoSync < 'c >::exec_dfa_reverse_suffix) ... NOT COVERED
957: binop_num, replace `+` with `-`, at src/exec.rs@846:53-846:54(fn ExecNoSync < 'c >::exec_dfa_reverse_suffix) ... NOT COVERED
958: lit_int, replace `1` with `2`, at src/exec.rs@849:36-849:37(fn ExecNoSync < 'c >::exec_dfa_reverse_suffix) ... NOT COVERED
959: lit_int, replace `1` with `0`, at src/exec.rs@849:36-849:37(fn ExecNoSync < 'c >::exec_dfa_reverse_suffix) ... NOT COVERED
960: lit_bool, replace `false` with `true`, at src/exec.rs@887:12-887:17(fn ExecNoSync < 'c >::find_dfa_reverse_suffix) ... NOT COVERED
961: lit_bool, replace `false` with `true`, at src/exec.rs@916:18-916:23(fn ExecNoSync < 'c >::match_nfa_type) ... NOT COVERED
962: lit_bool, replace `true` with `false`, at src/exec.rs@918:12-918:16(fn ExecNoSync < 'c >::match_nfa_type) ... NOT COVERED
963: lit_bool, replace `false` with `true`, at src/exec.rs@919:12-919:17(fn ExecNoSync < 'c >::match_nfa_type) ... NOT COVERED
964: lit_bool, replace `false` with `true`, at src/exec.rs@942:18-942:23(fn ExecNoSync < 'c >::shortest_nfa_type) ... NOT COVERED
965: lit_bool, replace `true` with `false`, at src/exec.rs@944:12-944:16(fn ExecNoSync < 'c >::shortest_nfa_type) ... NOT COVERED
966: lit_bool, replace `true` with `false`, at src/exec.rs@945:12-945:16(fn ExecNoSync < 'c >::shortest_nfa_type) ... NOT COVERED
967: lit_int, replace `1` with `2`, at src/exec.rs@950:18-950:19(fn ExecNoSync < 'c >::shortest_nfa_type) ... NOT COVERED
968: lit_int, replace `1` with `0`, at src/exec.rs@950:18-950:19(fn ExecNoSync < 'c >::shortest_nfa_type) ... NOT COVERED
969: lit_bool, replace `false` with `true`, at src/exec.rs@966:18-966:23(fn ExecNoSync < 'c >::find_nfa) ... SURVIVED
970: lit_bool, replace `false` with `true`, at src/exec.rs@968:12-968:17(fn ExecNoSync < 'c >::find_nfa) ... SURVIVED
971: lit_bool, replace `false` with `true`, at src/exec.rs@969:12-969:17(fn ExecNoSync < 'c >::find_nfa) ... SURVIVED
972: lit_int, replace `0` with `1`, at src/exec.rs@974:25-974:26(fn ExecNoSync < 'c >::find_nfa) ... killed
973: lit_int, replace `1` with `2`, at src/exec.rs@974:35-974:36(fn ExecNoSync < 'c >::find_nfa) ... killed
974: lit_int, replace `1` with `0`, at src/exec.rs@974:35-974:36(fn ExecNoSync < 'c >::find_nfa) ... killed
975: lit_bool, replace `false` with `true`, at src/exec.rs@1013:18-1013:23(fn ExecNoSync < 'c >::captures_nfa_type) ... NOT COVERED
976: lit_bool, replace `false` with `true`, at src/exec.rs@1015:12-1015:17(fn ExecNoSync < 'c >::captures_nfa_type) ... NOT COVERED
977: lit_bool, replace `false` with `true`, at src/exec.rs@1016:12-1016:17(fn ExecNoSync < 'c >::captures_nfa_type) ... NOT COVERED
978: lit_int, replace `0` with `1`, at src/exec.rs@1021:25-1021:26(fn ExecNoSync < 'c >::captures_nfa_type) ... NOT COVERED
979: lit_int, replace `1` with `2`, at src/exec.rs@1021:35-1021:36(fn ExecNoSync < 'c >::captures_nfa_type) ... NOT COVERED
980: lit_int, replace `1` with `0`, at src/exec.rs@1021:35-1021:36(fn ExecNoSync < 'c >::captures_nfa_type) ... NOT COVERED
981: binop_eq, replace `==` with `!=`, at src/exec.rs@1052:43-1052:45(fn ExecNoSync < 'c >::exec_nfa) ... SURVIVED
982: binop_bool, replace `||` with `&&`, at src/exec.rs@1052:37-1052:39(fn ExecNoSync < 'c >::exec_nfa) ... SURVIVED
983: unop_not, remove `!`, at src/exec.rs@1147:11-1147:12(fn ExecNoSync < 'c >::many_matches_at) ... NOT COVERED
984: lit_bool, replace `false` with `true`, at src/exec.rs@1148:19-1148:24(fn ExecNoSync < 'c >::many_matches_at) ... NOT COVERED
985: lit_int, replace `0` with `1`, at src/exec.rs@1154:24-1154:25(fn ExecNoSync < 'c >::many_matches_at) ... NOT COVERED
986: lit_int, replace `0` with `1`, at src/exec.rs@1155:24-1155:25(fn ExecNoSync < 'c >::many_matches_at) ... NOT COVERED
987: lit_bool, replace `true` with `false`, at src/exec.rs@1166:45-1166:49(fn ExecNoSync < 'c >::many_matches_at) ... NOT COVERED
988: lit_bool, replace `false` with `true`, at src/exec.rs@1167:47-1167:52(fn ExecNoSync < 'c >::many_matches_at) ... NOT COVERED
989: lit_bool, replace `false` with `true`, at src/exec.rs@1172:24-1172:29(fn ExecNoSync < 'c >::many_matches_at) ... NOT COVERED
990: lit_bool, replace `false` with `true`, at src/exec.rs@1173:24-1173:29(fn ExecNoSync < 'c >::many_matches_at) ... NOT COVERED
991: lit_bool, replace `true` with `false`, at src/exec.rs@1189:45-1189:49(fn ExecNoSync < 'c >::many_matches_at) ... NOT COVERED
992: lit_bool, replace `false` with `true`, at src/exec.rs@1190:47-1190:52(fn ExecNoSync < 'c >::many_matches_at) ... NOT COVERED
993: lit_bool, replace `false` with `true`, at src/exec.rs@1195:24-1195:29(fn ExecNoSync < 'c >::many_matches_at) ... NOT COVERED
994: lit_bool, replace `false` with `true`, at src/exec.rs@1196:24-1196:29(fn ExecNoSync < 'c >::many_matches_at) ... NOT COVERED
995: lit_bool, replace `false` with `true`, at src/exec.rs@1207:16-1207:21(fn ExecNoSync < 'c >::many_matches_at) ... NOT COVERED
996: lit_bool, replace `false` with `true`, at src/exec.rs@1208:16-1208:21(fn ExecNoSync < 'c >::many_matches_at) ... NOT COVERED
997: lit_bool, replace `false` with `true`, at src/exec.rs@1213:23-1213:28(fn ExecNoSync < 'c >::many_matches_at) ... NOT COVERED
998: lit_bool, replace `true` with `false`, at src/exec.rs@1221:12-1221:16(fn ExecNoSync < 'c >::imp) ... NOT COVERED
999: lit_int, replace `1` with `2`, at src/exec.rs@1227:29-1227:30(fn ExecNoSync < 'c >::imp) ... SURVIVED
1000: lit_int, replace `1` with `0`, at src/exec.rs@1227:29-1227:30(fn ExecNoSync < 'c >::imp) ... SURVIVED
1001: lit_int, replace `20` with `21`, at src/exec.rs@1227:34-1227:36(fn ExecNoSync < 'c >::imp) ... SURVIVED
1002: lit_int, replace `20` with `19`, at src/exec.rs@1227:34-1227:36(fn ExecNoSync < 'c >::imp) ... SURVIVED
1003: binop_cmp, replace `>` with `<`, at src/exec.rs@1227:26-1227:27(fn ExecNoSync < 'c >::imp) ... SURVIVED
1004: binop_cmp, replace `>` with `<=`, at src/exec.rs@1227:26-1227:27(fn ExecNoSync < 'c >::imp) ... SURVIVED
1005: binop_cmp, replace `>` with `>=`, at src/exec.rs@1227:26-1227:27(fn ExecNoSync < 'c >::imp) ... SURVIVED
1006: binop_bool, replace `&&` with `||`, at src/exec.rs@1227:38-1227:40(fn ExecNoSync < 'c >::imp) ... SURVIVED
1007: lit_int, replace `1` with `2`, at src/exec.rs@1229:32-1229:33(fn ExecNoSync < 'c >::imp) ... NOT COVERED
1008: lit_int, replace `1` with `0`, at src/exec.rs@1229:32-1229:33(fn ExecNoSync < 'c >::imp) ... NOT COVERED
1009: binop_cmp, replace `>=` with `<`, at src/exec.rs@1229:29-1229:31(fn ExecNoSync < 'c >::imp) ... NOT COVERED
1010: binop_cmp, replace `>=` with `<=`, at src/exec.rs@1229:29-1229:31(fn ExecNoSync < 'c >::imp) ... NOT COVERED
1011: binop_cmp, replace `>=` with `>`, at src/exec.rs@1229:29-1229:31(fn ExecNoSync < 'c >::imp) ... NOT COVERED
1012: unop_not, remove `!`, at src/exec.rs@1229:37-1229:38(fn ExecNoSync < 'c >::imp) ... NOT COVERED
1013: binop_bool, replace `&&` with `||`, at src/exec.rs@1229:34-1229:36(fn ExecNoSync < 'c >::imp) ... NOT COVERED
1014: lit_bool, replace `false` with `true`, at src/exec.rs@1230:27-1230:32(fn ExecNoSync < 'c >::imp) ... NOT COVERED
1015: lit_bool, replace `true` with `false`, at src/exec.rs@1233:12-1233:16(fn ExecNoSync < 'c >::imp) ... SURVIVED
1016: lit_int, replace `1` with `2`, at src/exec.rs@1353:31-1353:32(fn ExecReadOnly::imp) ... SURVIVED
1017: lit_int, replace `1` with `0`, at src/exec.rs@1353:31-1353:32(fn ExecReadOnly::imp) ... SURVIVED
1018: binop_eq, replace `!=` with `==`, at src/exec.rs@1353:28-1353:30(fn ExecReadOnly::imp) ... SURVIVED
1019: unop_not, remove `!`, at src/exec.rs@1393:15-1393:16(fn ExecReadOnly::imp) ... NOT COVERED
1020: lit_int, replace `2` with `3`, at src/exec.rs@1397:31-1397:32(fn ExecReadOnly::imp) ... NOT COVERED
1021: lit_int, replace `2` with `1`, at src/exec.rs@1397:31-1397:32(fn ExecReadOnly::imp) ... NOT COVERED
1022: binop_cmp, replace `>=` with `<`, at src/exec.rs@1397:28-1397:30(fn ExecReadOnly::imp) ... NOT COVERED
1023: binop_cmp, replace `>=` with `<=`, at src/exec.rs@1397:28-1397:30(fn ExecReadOnly::imp) ... NOT COVERED
1024: binop_cmp, replace `>=` with `>`, at src/exec.rs@1397:28-1397:30(fn ExecReadOnly::imp) ... NOT COVERED
1025: unop_not, remove `!`, at src/exec.rs@1402:15-1402:16(fn ExecReadOnly::imp) ... NOT COVERED
1026: binop_bool, replace `&&` with `||`, at src/exec.rs@1402:41-1402:43(fn ExecReadOnly::imp) ... NOT COVERED
1027: lit_bool, replace `false` with `true`, at src/exec.rs@1437:19-1437:24(fn ExecReadOnly::should_suffix_scan) ... NOT COVERED
1028: lit_int, replace `3` with `4`, at src/exec.rs@1440:19-1440:20(fn ExecReadOnly::should_suffix_scan) ... NOT COVERED
1029: lit_int, replace `3` with `2`, at src/exec.rs@1440:19-1440:20(fn ExecReadOnly::should_suffix_scan) ... NOT COVERED
1030: binop_cmp, replace `>=` with `<`, at src/exec.rs@1440:16-1440:18(fn ExecReadOnly::should_suffix_scan) ... NOT COVERED
1031: binop_cmp, replace `>=` with `<=`, at src/exec.rs@1440:16-1440:18(fn ExecReadOnly::should_suffix_scan) ... NOT COVERED
1032: binop_cmp, replace `>=` with `>`, at src/exec.rs@1440:16-1440:18(fn ExecReadOnly::should_suffix_scan) ... NOT COVERED
1033: binop_cmp, replace `>` with `<`, at src/exec.rs@1440:32-1440:33(fn ExecReadOnly::should_suffix_scan) ... NOT COVERED
1034: binop_cmp, replace `>` with `<=`, at src/exec.rs@1440:32-1440:33(fn ExecReadOnly::should_suffix_scan) ... NOT COVERED
1035: binop_cmp, replace `>` with `>=`, at src/exec.rs@1440:32-1440:33(fn ExecReadOnly::should_suffix_scan) ... NOT COVERED
1036: binop_bool, replace `&&` with `||`, at src/exec.rs@1440:21-1440:23(fn ExecReadOnly::should_suffix_scan) ... NOT COVERED
1037: unop_not, remove `!`, at src/exec.rs@1539:7-1539:8(fn alternation_literals) ... SURVIVED
1038: stmt_call, remove `dst . extend_from_slice (c . encode_utf8 (& mut buf) . as_bytes ()) ;`, at src/exec.rs@1550:12-1550:69(fn alternation_literals) ... NOT COVERED
1039: stmt_call, remove `dst . push (b) ;`, at src/exec.rs@1553:12-1553:23(fn alternation_literals) ... NOT COVERED
1040: stmt_call, remove `lits . push (lit) ;`, at src/exec.rs@1572:8-1572:22(fn alternation_literals) ... NOT COVERED
1041: lit_int, replace `0` with `1`, at src/expand.rs@131:16-131:17(fn find_cap_ref) ... killed
1042: lit_int, replace `1` with `2`, at src/expand.rs@133:20-133:21(fn find_cap_ref) ... killed
1043: lit_int, replace `1` with `0`, at src/expand.rs@133:20-133:21(fn find_cap_ref) ... killed
1044: binop_cmp, replace `<=` with `<`, at src/expand.rs@133:17-133:19(fn find_cap_ref) ... killed
1045: binop_cmp, replace `<=` with `>=`, at src/expand.rs@133:17-133:19(fn find_cap_ref) ... killed
1046: binop_cmp, replace `<=` with `>`, at src/expand.rs@133:17-133:19(fn find_cap_ref) ... killed
1047: lit_int, replace `0` with `1`, at src/expand.rs@133:29-133:30(fn find_cap_ref) ... killed
1048: binop_eq, replace `!=` with `==`, at src/expand.rs@133:32-133:34(fn find_cap_ref) ... killed
1049: binop_bool, replace `||` with `&&`, at src/expand.rs@133:22-133:24(fn find_cap_ref) ... killed
1050: lit_bool, replace `false` with `true`, at src/expand.rs@136:20-136:25(fn find_cap_ref) ... killed
1051: lit_int, replace `1` with `2`, at src/expand.rs@137:9-137:10(fn find_cap_ref) ... killed
1052: lit_int, replace `1` with `0`, at src/expand.rs@137:9-137:10(fn find_cap_ref) ... killed
1053: binop_eq, replace `==` with `!=`, at src/expand.rs@138:14-138:16(fn find_cap_ref) ... killed
1054: lit_bool, replace `true` with `false`, at src/expand.rs@139:16-139:20(fn find_cap_ref) ... killed
1055: lit_int, replace `1` with `2`, at src/expand.rs@140:13-140:14(fn find_cap_ref) ... killed
1056: lit_int, replace `1` with `0`, at src/expand.rs@140:13-140:14(fn find_cap_ref) ... killed
1057: lit_bool, replace `false` with `true`, at src/expand.rs@143:34-143:39(fn find_cap_ref) ... killed (timeout)
1058: lit_int, replace `1` with `2`, at src/expand.rs@144:19-144:20(fn find_cap_ref) ... killed
1059: lit_int, replace `1` with `0`, at src/expand.rs@144:19-144:20(fn find_cap_ref) ... killed (timeout)
1060: binop_eq, replace `==` with `!=`, at src/expand.rs@146:15-146:17(fn find_cap_ref) ... killed
1061: lit_bool, replace `false` with `true`, at src/expand.rs@155:36-155:41(fn find_cap_ref) ... killed
1062: binop_eq, replace `==` with `!=`, at src/expand.rs@155:50-155:52(fn find_cap_ref) ... killed
1063: unop_not, remove `!`, at src/expand.rs@155:11-155:12(fn find_cap_ref) ... killed
1064: lit_int, replace `1` with `2`, at src/expand.rs@158:19-158:20(fn find_cap_ref) ... killed
1065: lit_int, replace `1` with `0`, at src/expand.rs@158:19-158:20(fn find_cap_ref) ... killed
1066: lit_bool, replace `true` with `false`, at src/expand.rs@172:58-172:62(fn is_valid_cap_letter) ... killed
1067: lit_bool, replace `false` with `true`, at src/expand.rs@173:13-173:18(fn is_valid_cap_letter) ... killed
1068: lit_int, replace `0` with `1`, at src/input.rs@25:20-25:21(fn InputAt::is_start) ... killed
1069: binop_eq, replace `==` with `!=`, at src/input.rs@25:17-25:19(fn InputAt::is_start) ... killed
1070: binop_bool, replace `&&` with `||`, at src/input.rs@30:25-30:27(fn InputAt::is_end) ... NOT COVERED
1071: lit_int, replace `0` with `1`, at src/input.rs@54:20-54:21(fn InputAt::is_empty) ... NOT COVERED
1072: binop_eq, replace `==` with `!=`, at src/input.rs@54:17-54:19(fn InputAt::is_empty) ... NOT COVERED
1073: binop_num, replace `+` with `-`, at src/input.rs@64:17-64:18(fn InputAt::next_pos) ... killed
1074: binop_cmp, replace `>=` with `<`, at src/input.rs@161:13-161:15(fn CharInput < 't >::at) ... killed
1075: binop_cmp, replace `>=` with `<=`, at src/input.rs@161:13-161:15(fn CharInput < 't >::at) ... killed
1076: binop_cmp, replace `>=` with `>`, at src/input.rs@161:13-161:15(fn CharInput < 't >::at) ... SURVIVED
1077: lit_int, replace `0` with `1`, at src/input.rs@162:72-162:73(fn CharInput < 't >::at) ... NOT COVERED
1078: lit_int, replace `0` with `1`, at src/input.rs@182:28-182:29(fn CharInput < 't >::is_empty_match) ... NOT COVERED
1079: binop_eq, replace `==` with `!=`, at src/input.rs@182:25-182:27(fn CharInput < 't >::is_empty_match) ... NOT COVERED
1080: binop_eq, replace `==` with `!=`, at src/input.rs@182:35-182:37(fn CharInput < 't >::is_empty_match) ... NOT COVERED
1081: binop_bool, replace `||` with `&&`, at src/input.rs@182:30-182:32(fn CharInput < 't >::is_empty_match) ... NOT COVERED
1082: binop_eq, replace `==` with `!=`, at src/input.rs@186:25-186:27(fn CharInput < 't >::is_empty_match) ... NOT COVERED
1083: binop_eq, replace `==` with `!=`, at src/input.rs@186:44-186:46(fn CharInput < 't >::is_empty_match) ... NOT COVERED
1084: binop_bool, replace `||` with `&&`, at src/input.rs@186:39-186:41(fn CharInput < 't >::is_empty_match) ... NOT COVERED
1085: lit_int, replace `0` with `1`, at src/input.rs@188:37-188:38(fn CharInput < 't >::is_empty_match) ... killed
1086: binop_eq, replace `==` with `!=`, at src/input.rs@188:34-188:36(fn CharInput < 't >::is_empty_match) ... killed
1087: binop_eq, replace `==` with `!=`, at src/input.rs@189:32-189:34(fn CharInput < 't >::is_empty_match) ... NOT COVERED
1088: binop_eq, replace `!=` with `==`, at src/input.rs@192:34-192:36(fn CharInput < 't >::is_empty_match) ... NOT COVERED
1089: binop_eq, replace `==` with `!=`, at src/input.rs@196:34-196:36(fn CharInput < 't >::is_empty_match) ... NOT COVERED
1090: binop_eq, replace `!=` with `==`, at src/input.rs@200:34-200:36(fn CharInput < 't >::is_empty_match) ... NOT COVERED
1091: binop_eq, replace `==` with `!=`, at src/input.rs@204:34-204:36(fn CharInput < 't >::is_empty_match) ... NOT COVERED
1092: binop_num, replace `+` with `-`, at src/input.rs@214:71-214:72(fn CharInput < 't >::prefix_at) ... NOT COVERED
1093: binop_cmp, replace `>=` with `<`, at src/input.rs@250:13-250:15(fn ByteInput < 't >::at) ... killed
1094: binop_cmp, replace `>=` with `<=`, at src/input.rs@250:13-250:15(fn ByteInput < 't >::at) ... killed
1095: binop_cmp, replace `>=` with `>`, at src/input.rs@250:13-250:15(fn ByteInput < 't >::at) ... SURVIVED
1096: lit_int, replace `0` with `1`, at src/input.rs@251:72-251:73(fn ByteInput < 't >::at) ... NOT COVERED
1097: lit_int, replace `1` with `2`, at src/input.rs@257:21-257:22(fn ByteInput < 't >::at) ... SURVIVED
1098: lit_int, replace `1` with `0`, at src/input.rs@257:21-257:22(fn ByteInput < 't >::at) ... killed
1099: lit_int, replace `0` with `1`, at src/input.rs@275:28-275:29(fn ByteInput < 't >::is_empty_match) ... NOT COVERED
1100: binop_eq, replace `==` with `!=`, at src/input.rs@275:25-275:27(fn ByteInput < 't >::is_empty_match) ... NOT COVERED
1101: binop_eq, replace `==` with `!=`, at src/input.rs@275:35-275:37(fn ByteInput < 't >::is_empty_match) ... NOT COVERED
1102: binop_bool, replace `||` with `&&`, at src/input.rs@275:30-275:32(fn ByteInput < 't >::is_empty_match) ... NOT COVERED
1103: binop_eq, replace `==` with `!=`, at src/input.rs@279:25-279:27(fn ByteInput < 't >::is_empty_match) ... NOT COVERED
1104: binop_eq, replace `==` with `!=`, at src/input.rs@279:44-279:46(fn ByteInput < 't >::is_empty_match) ... NOT COVERED
1105: binop_bool, replace `||` with `&&`, at src/input.rs@279:39-279:41(fn ByteInput < 't >::is_empty_match) ... NOT COVERED
1106: lit_int, replace `0` with `1`, at src/input.rs@281:37-281:38(fn ByteInput < 't >::is_empty_match) ... killed
1107: binop_eq, replace `==` with `!=`, at src/input.rs@281:34-281:36(fn ByteInput < 't >::is_empty_match) ... killed
1108: binop_eq, replace `==` with `!=`, at src/input.rs@282:32-282:34(fn ByteInput < 't >::is_empty_match) ... NOT COVERED
1109: binop_eq, replace `!=` with `==`, at src/input.rs@285:34-285:36(fn ByteInput < 't >::is_empty_match) ... NOT COVERED
1110: binop_eq, replace `==` with `!=`, at src/input.rs@289:34-289:36(fn ByteInput < 't >::is_empty_match) ... NOT COVERED
1111: unop_not, remove `!`, at src/input.rs@296:39-296:40(fn ByteInput < 't >::is_empty_match) ... NOT COVERED
1112: binop_bool, replace `&&` with `||`, at src/input.rs@296:36-296:38(fn ByteInput < 't >::is_empty_match) ... NOT COVERED
1113: lit_bool, replace `false` with `true`, at src/input.rs@297:31-297:36(fn ByteInput < 't >::is_empty_match) ... NOT COVERED
1114: unop_not, remove `!`, at src/input.rs@299:39-299:40(fn ByteInput < 't >::is_empty_match) ... NOT COVERED
1115: binop_bool, replace `&&` with `||`, at src/input.rs@299:36-299:38(fn ByteInput < 't >::is_empty_match) ... NOT COVERED
1116: lit_bool, replace `false` with `true`, at src/input.rs@300:31-300:36(fn ByteInput < 't >::is_empty_match) ... NOT COVERED
1117: binop_eq, replace `!=` with `==`, at src/input.rs@303:34-303:36(fn ByteInput < 't >::is_empty_match) ... NOT COVERED
1118: unop_not, remove `!`, at src/input.rs@310:39-310:40(fn ByteInput < 't >::is_empty_match) ... NOT COVERED
1119: binop_bool, replace `&&` with `||`, at src/input.rs@310:36-310:38(fn ByteInput < 't >::is_empty_match) ... NOT COVERED
1120: lit_bool, replace `false` with `true`, at src/input.rs@311:31-311:36(fn ByteInput < 't >::is_empty_match) ... NOT COVERED
1121: unop_not, remove `!`, at src/input.rs@313:39-313:40(fn ByteInput < 't >::is_empty_match) ... NOT COVERED
1122: binop_bool, replace `&&` with `||`, at src/input.rs@313:36-313:38(fn ByteInput < 't >::is_empty_match) ... NOT COVERED
1123: lit_bool, replace `false` with `true`, at src/input.rs@314:31-314:36(fn ByteInput < 't >::is_empty_match) ... NOT COVERED
1124: binop_eq, replace `==` with `!=`, at src/input.rs@317:34-317:36(fn ByteInput < 't >::is_empty_match) ... NOT COVERED
1125: binop_num, replace `+` with `-`, at src/input.rs@327:71-327:72(fn ByteInput < 't >::prefix_at) ... NOT COVERED
1126: binop_eq, replace `==` with `!=`, at src/input.rs@363:15-363:17(fn Char::is_none) ... NOT COVERED
1127: lit_int, replace `1` with `2`, at src/input.rs@371:38-371:39(fn Char::len_utf8) ... SURVIVED
1128: lit_int, replace `1` with `0`, at src/input.rs@371:38-371:39(fn Char::len_utf8) ... SURVIVED
1129: lit_bool, replace `false` with `true`, at src/input.rs@382:38-382:43(fn Char::is_word_char) ... NOT COVERED
1130: binop_cmp, replace `<=` with `<`, at src/input.rs@390:25-390:27(fn Char::is_word_byte) ... NOT COVERED
1131: binop_cmp, replace `<=` with `>=`, at src/input.rs@390:25-390:27(fn Char::is_word_byte) ... NOT COVERED
1132: binop_cmp, replace `<=` with `>`, at src/input.rs@390:25-390:27(fn Char::is_word_byte) ... NOT COVERED
1133: lit_bool, replace `false` with `true`, at src/input.rs@391:30-391:35(fn Char::is_word_byte) ... NOT COVERED
1134: binop_eq, replace `==` with `!=`, at src/input.rs@411:15-411:17(fn Char::eq) ... NOT COVERED
1135: binop_eq, replace `==` with `!=`, at src/input.rs@418:21-418:23(fn char::eq) ... killed
1136: unop_not, remove `!`, at src/literal/imp.rs@79:25-79:26(fn LiteralSearcher::complete) ... SURVIVED
1137: binop_bool, replace `&&` with `||`, at src/literal/imp.rs@79:22-79:24(fn LiteralSearcher::complete) ... SURVIVED
1138: lit_int, replace `0` with `1`, at src/literal/imp.rs@87:27-87:28(fn LiteralSearcher::find) ... NOT COVERED
1139: lit_int, replace `0` with `1`, at src/literal/imp.rs@87:30-87:31(fn LiteralSearcher::find) ... NOT COVERED
1140: lit_int, replace `1` with `2`, at src/literal/imp.rs@88:67-88:68(fn LiteralSearcher::find) ... NOT COVERED
1141: lit_int, replace `1` with `0`, at src/literal/imp.rs@88:67-88:68(fn LiteralSearcher::find) ... NOT COVERED
1142: binop_num, replace `+` with `-`, at src/literal/imp.rs@88:65-88:66(fn LiteralSearcher::find) ... NOT COVERED
1143: binop_num, replace `+` with `-`, at src/literal/imp.rs@89:65-89:66(fn LiteralSearcher::find) ... NOT COVERED
1144: binop_num, replace `+` with `-`, at src/literal/imp.rs@90:64-90:65(fn LiteralSearcher::find) ... NOT COVERED
1145: binop_cmp, replace `>` with `<`, at src/literal/imp.rs@103:25-103:26(fn LiteralSearcher::find_start) ... killed
1146: binop_cmp, replace `>` with `<=`, at src/literal/imp.rs@103:25-103:26(fn LiteralSearcher::find_start) ... killed
1147: binop_cmp, replace `>` with `>=`, at src/literal/imp.rs@103:25-103:26(fn LiteralSearcher::find_start) ... SURVIVED
1148: lit_int, replace `0` with `1`, at src/literal/imp.rs@106:32-106:33(fn LiteralSearcher::find_start) ... killed
1149: binop_eq, replace `==` with `!=`, at src/literal/imp.rs@106:19-106:21(fn LiteralSearcher::find_start) ... killed
1150: lit_int, replace `0` with `1`, at src/literal/imp.rs@107:29-107:30(fn LiteralSearcher::find_start) ... killed
1151: binop_cmp, replace `>` with `<`, at src/literal/imp.rs@116:25-116:26(fn LiteralSearcher::find_end) ... NOT COVERED
1152: binop_cmp, replace `>` with `<=`, at src/literal/imp.rs@116:25-116:26(fn LiteralSearcher::find_end) ... NOT COVERED
1153: binop_cmp, replace `>` with `>=`, at src/literal/imp.rs@116:25-116:26(fn LiteralSearcher::find_end) ... NOT COVERED
1154: binop_num, replace `-` with `+`, at src/literal/imp.rs@119:47-119:48(fn LiteralSearcher::find_end) ... NOT COVERED
1155: binop_eq, replace `==` with `!=`, at src/literal/imp.rs@119:19-119:21(fn LiteralSearcher::find_end) ... NOT COVERED
1156: binop_num, replace `-` with `+`, at src/literal/imp.rs@120:44-120:45(fn LiteralSearcher::find_end) ... NOT COVERED
1157: lit_int, replace `0` with `1`, at src/literal/imp.rs@150:22-150:23(fn LiteralSearcher::is_empty) ... SURVIVED
1158: binop_eq, replace `==` with `!=`, at src/literal/imp.rs@150:19-150:21(fn LiteralSearcher::is_empty) ... SURVIVED
1159: lit_int, replace `0` with `1`, at src/literal/imp.rs@157:21-157:22(fn LiteralSearcher::len) ... NOT COVERED
1160: lit_int, replace `1` with `2`, at src/literal/imp.rs@159:30-159:31(fn LiteralSearcher::len) ... NOT COVERED
1161: lit_int, replace `1` with `0`, at src/literal/imp.rs@159:30-159:31(fn LiteralSearcher::len) ... NOT COVERED
1162: lit_int, replace `1` with `2`, at src/literal/imp.rs@160:29-160:30(fn LiteralSearcher::len) ... NOT COVERED
1163: lit_int, replace `1` with `0`, at src/literal/imp.rs@160:29-160:30(fn LiteralSearcher::len) ... NOT COVERED
1164: lit_int, replace `0` with `1`, at src/literal/imp.rs@170:21-170:22(fn LiteralSearcher::approximate_size) ... NOT COVERED
1165: lit_int, replace `26` with `27`, at src/literal/imp.rs@195:31-195:33(fn Matcher::new) ... SURVIVED
1166: lit_int, replace `26` with `25`, at src/literal/imp.rs@195:31-195:33(fn Matcher::new) ... SURVIVED
1167: binop_cmp, replace `>=` with `<`, at src/literal/imp.rs@195:28-195:30(fn Matcher::new) ... SURVIVED
1168: binop_cmp, replace `>=` with `<=`, at src/literal/imp.rs@195:28-195:30(fn Matcher::new) ... SURVIVED
1169: binop_cmp, replace `>=` with `>`, at src/literal/imp.rs@195:28-195:30(fn Matcher::new) ... SURVIVED
1170: lit_int, replace `1` with `2`, at src/literal/imp.rs@207:36-207:37(fn Matcher::new) ... NOT COVERED
1171: lit_int, replace `1` with `0`, at src/literal/imp.rs@207:36-207:37(fn Matcher::new) ... NOT COVERED
1172: binop_eq, replace `==` with `!=`, at src/literal/imp.rs@207:33-207:35(fn Matcher::new) ... NOT COVERED
1173: lit_int, replace `0` with `1`, at src/literal/imp.rs@208:38-208:39(fn Matcher::new) ... NOT COVERED
1174: lit_int, replace `1` with `2`, at src/literal/imp.rs@217:55-217:56(fn Matcher::new) ... NOT COVERED
1175: lit_int, replace `1` with `0`, at src/literal/imp.rs@217:55-217:56(fn Matcher::new) ... NOT COVERED
1176: binop_cmp, replace `<=` with `<`, at src/literal/imp.rs@217:52-217:54(fn Matcher::new) ... NOT COVERED
1177: binop_cmp, replace `<=` with `>=`, at src/literal/imp.rs@217:52-217:54(fn Matcher::new) ... NOT COVERED
1178: binop_cmp, replace `<=` with `>`, at src/literal/imp.rs@217:52-217:54(fn Matcher::new) ... NOT COVERED
1179: binop_bool, replace `&&` with `||`, at src/literal/imp.rs@217:57-217:59(fn Matcher::new) ... NOT COVERED
1180: lit_int, replace `100` with `101`, at src/literal/imp.rs@218:36-218:39(fn Matcher::new) ... NOT COVERED
1181: lit_int, replace `100` with `99`, at src/literal/imp.rs@218:36-218:39(fn Matcher::new) ... NOT COVERED
1182: binop_cmp, replace `<=` with `<`, at src/literal/imp.rs@218:33-218:35(fn Matcher::new) ... NOT COVERED
1183: binop_cmp, replace `<=` with `>=`, at src/literal/imp.rs@218:33-218:35(fn Matcher::new) ... NOT COVERED
1184: binop_cmp, replace `<=` with `>`, at src/literal/imp.rs@218:33-218:35(fn Matcher::new) ... NOT COVERED
1185: unop_not, remove `!`, at src/literal/imp.rs@218:43-218:44(fn Matcher::new) ... NOT COVERED
1186: binop_bool, replace `&&` with `||`, at src/literal/imp.rs@218:40-218:42(fn Matcher::new) ... NOT COVERED
1187: lit_bool, replace `true` with `false`, at src/literal/imp.rs@228:17-228:21(fn Matcher::new) ... NOT COVERED
1188: lit_int, replace `0` with `1`, at src/literal/imp.rs@253:37-253:38(fn LiteralIter < 'a >::next) ... killed
1189: lit_int, replace `1` with `2`, at src/literal/imp.rs@253:40-253:41(fn LiteralIter < 'a >::next) ... killed
1190: lit_int, replace `1` with `0`, at src/literal/imp.rs@253:40-253:41(fn LiteralIter < 'a >::next) ... killed
1191: lit_int, replace `1` with `2`, at src/literal/imp.rs@254:34-254:35(fn LiteralIter < 'a >::next) ... killed
1192: lit_int, replace `1` with `0`, at src/literal/imp.rs@254:34-254:35(fn LiteralIter < 'a >::next) ... SURVIVED
1193: lit_int, replace `0` with `1`, at src/literal/imp.rs@271:37-271:38(fn LiteralIter < 'a >::next) ... NOT COVERED
1194: lit_int, replace `1` with `2`, at src/literal/imp.rs@272:34-272:35(fn LiteralIter < 'a >::next) ... NOT COVERED
1195: lit_int, replace `1` with `0`, at src/literal/imp.rs@272:34-272:35(fn LiteralIter < 'a >::next) ... NOT COVERED
1196: lit_int, replace `0` with `1`, at src/literal/imp.rs@280:37-280:38(fn LiteralIter < 'a >::next) ... NOT COVERED
1197: lit_int, replace `1` with `2`, at src/literal/imp.rs@281:34-281:35(fn LiteralIter < 'a >::next) ... NOT COVERED
1198: lit_int, replace `1` with `0`, at src/literal/imp.rs@281:34-281:35(fn LiteralIter < 'a >::next) ... NOT COVERED
1199: lit_bool, replace `true` with `false`, at src/literal/imp.rs@302:22-302:26(fn SingleByteSet::new) ... SURVIVED
1200: lit_bool, replace `true` with `false`, at src/literal/imp.rs@303:23-303:27(fn SingleByteSet::new) ... SURVIVED
1201: lit_int, replace `1` with `2`, at src/literal/imp.rs@310:58-310:59(fn SingleByteSet::prefixes) ... SURVIVED
1202: lit_int, replace `1` with `0`, at src/literal/imp.rs@310:58-310:59(fn SingleByteSet::prefixes) ... SURVIVED
1203: binop_eq, replace `==` with `!=`, at src/literal/imp.rs@310:55-310:57(fn SingleByteSet::prefixes) ... SURVIVED
1204: binop_bool, replace `&&` with `||`, at src/literal/imp.rs@310:42-310:44(fn SingleByteSet::prefixes) ... SURVIVED
1205: lit_int, replace `0` with `1`, at src/literal/imp.rs@311:38-311:39(fn SingleByteSet::prefixes) ... SURVIVED
1206: unop_not, remove `!`, at src/literal/imp.rs@312:19-312:20(fn SingleByteSet::prefixes) ... SURVIVED
1207: lit_int, replace `127` with `128`, at src/literal/imp.rs@313:27-313:31(fn SingleByteSet::prefixes) ... SURVIVED
1208: lit_int, replace `127` with `126`, at src/literal/imp.rs@313:27-313:31(fn SingleByteSet::prefixes) ... SURVIVED
1209: binop_cmp, replace `>` with `<`, at src/literal/imp.rs@313:25-313:26(fn SingleByteSet::prefixes) ... SURVIVED
1210: binop_cmp, replace `>` with `<=`, at src/literal/imp.rs@313:25-313:26(fn SingleByteSet::prefixes) ... SURVIVED
1211: binop_cmp, replace `>` with `>=`, at src/literal/imp.rs@313:25-313:26(fn SingleByteSet::prefixes) ... SURVIVED
1212: lit_bool, replace `false` with `true`, at src/literal/imp.rs@314:41-314:46(fn SingleByteSet::prefixes) ... NOT COVERED
1213: stmt_call, remove `sset . dense . push (b) ;`, at src/literal/imp.rs@316:20-316:38(fn SingleByteSet::prefixes) ... SURVIVED
1214: lit_bool, replace `true` with `false`, at src/literal/imp.rs@317:46-317:50(fn SingleByteSet::prefixes) ... SURVIVED
1215: lit_int, replace `1` with `2`, at src/literal/imp.rs@327:58-327:59(fn SingleByteSet::suffixes) ... SURVIVED
1216: lit_int, replace `1` with `0`, at src/literal/imp.rs@327:58-327:59(fn SingleByteSet::suffixes) ... SURVIVED
1217: binop_eq, replace `==` with `!=`, at src/literal/imp.rs@327:55-327:57(fn SingleByteSet::suffixes) ... SURVIVED
1218: binop_bool, replace `&&` with `||`, at src/literal/imp.rs@327:42-327:44(fn SingleByteSet::suffixes) ... SURVIVED
1219: lit_int, replace `1` with `2`, at src/literal/imp.rs@328:60-328:61(fn SingleByteSet::suffixes) ... killed
1220: lit_int, replace `1` with `0`, at src/literal/imp.rs@328:60-328:61(fn SingleByteSet::suffixes) ... SURVIVED
1221: unop_not, remove `!`, at src/literal/imp.rs@329:19-329:20(fn SingleByteSet::suffixes) ... SURVIVED
1222: lit_int, replace `127` with `128`, at src/literal/imp.rs@330:27-330:31(fn SingleByteSet::suffixes) ... SURVIVED
1223: lit_int, replace `127` with `126`, at src/literal/imp.rs@330:27-330:31(fn SingleByteSet::suffixes) ... SURVIVED
1224: binop_cmp, replace `>` with `<`, at src/literal/imp.rs@330:25-330:26(fn SingleByteSet::suffixes) ... SURVIVED
1225: binop_cmp, replace `>` with `<=`, at src/literal/imp.rs@330:25-330:26(fn SingleByteSet::suffixes) ... SURVIVED
1226: binop_cmp, replace `>` with `>=`, at src/literal/imp.rs@330:25-330:26(fn SingleByteSet::suffixes) ... SURVIVED
1227: lit_bool, replace `false` with `true`, at src/literal/imp.rs@331:41-331:46(fn SingleByteSet::suffixes) ... NOT COVERED
1228: stmt_call, remove `sset . dense . push (b) ;`, at src/literal/imp.rs@333:20-333:38(fn SingleByteSet::suffixes) ... SURVIVED
1229: lit_bool, replace `true` with `false`, at src/literal/imp.rs@334:46-334:50(fn SingleByteSet::suffixes) ... SURVIVED
1230: lit_int, replace `0` with `1`, at src/literal/imp.rs@346:35-346:36(fn SingleByteSet::find) ... NOT COVERED
1231: lit_int, replace `0` with `1`, at src/literal/imp.rs@347:36-347:37(fn SingleByteSet::find) ... NOT COVERED
1232: lit_int, replace `1` with `2`, at src/literal/imp.rs@347:51-347:52(fn SingleByteSet::find) ... NOT COVERED
1233: lit_int, replace `1` with `0`, at src/literal/imp.rs@347:51-347:52(fn SingleByteSet::find) ... NOT COVERED
1234: lit_int, replace `0` with `1`, at src/literal/imp.rs@348:36-348:37(fn SingleByteSet::find) ... NOT COVERED
1235: lit_int, replace `1` with `2`, at src/literal/imp.rs@348:51-348:52(fn SingleByteSet::find) ... NOT COVERED
1236: lit_int, replace `1` with `0`, at src/literal/imp.rs@348:51-348:52(fn SingleByteSet::find) ... NOT COVERED
1237: lit_int, replace `2` with `3`, at src/literal/imp.rs@348:66-348:67(fn SingleByteSet::find) ... NOT COVERED
1238: lit_int, replace `2` with `1`, at src/literal/imp.rs@348:66-348:67(fn SingleByteSet::find) ... NOT COVERED
1239: binop_num, replace `*` with `/`, at src/literal/imp.rs@364:26-364:27(fn SingleByteSet::approximate_size) ... NOT COVERED
1240: binop_num, replace `*` with `/`, at src/literal/imp.rs@365:33-365:34(fn SingleByteSet::approximate_size) ... NOT COVERED
1241: binop_num, replace `+` with `-`, at src/literal/imp.rs@365:12-365:13(fn SingleByteSet::approximate_size) ... NOT COVERED
1242: lit_int, replace `0` with `1`, at src/literal/imp.rs@414:28-414:29(fn FreqyPacked::new) ... killed
1243: lit_int, replace `0` with `1`, at src/literal/imp.rs@415:28-415:29(fn FreqyPacked::new) ... killed
1244: lit_int, replace `1` with `2`, at src/literal/imp.rs@416:21-416:22(fn FreqyPacked::new) ... killed
1245: lit_int, replace `1` with `0`, at src/literal/imp.rs@416:21-416:22(fn FreqyPacked::new) ... SURVIVED
1246: binop_cmp, replace `<` with `<=`, at src/literal/imp.rs@417:28-417:29(fn FreqyPacked::new) ... SURVIVED
1247: binop_cmp, replace `<` with `>=`, at src/literal/imp.rs@417:28-417:29(fn FreqyPacked::new) ... SURVIVED
1248: binop_cmp, replace `<` with `>`, at src/literal/imp.rs@417:28-417:29(fn FreqyPacked::new) ... SURVIVED
1249: binop_eq, replace `==` with `!=`, at src/literal/imp.rs@422:21-422:23(fn FreqyPacked::new) ... SURVIVED
1250: binop_eq, replace `!=` with `==`, at src/literal/imp.rs@424:24-424:26(fn FreqyPacked::new) ... SURVIVED
1251: binop_cmp, replace `<` with `<=`, at src/literal/imp.rs@424:49-424:50(fn FreqyPacked::new) ... SURVIVED
1252: binop_cmp, replace `<` with `>=`, at src/literal/imp.rs@424:49-424:50(fn FreqyPacked::new) ... SURVIVED
1253: binop_cmp, replace `<` with `>`, at src/literal/imp.rs@424:49-424:50(fn FreqyPacked::new) ... SURVIVED
1254: binop_bool, replace `&&` with `||`, at src/literal/imp.rs@424:33-424:35(fn FreqyPacked::new) ... SURVIVED
1255: binop_eq, replace `==` with `!=`, at src/literal/imp.rs@430:49-430:51(fn FreqyPacked::new) ... killed
1256: binop_eq, replace `==` with `!=`, at src/literal/imp.rs@431:49-431:51(fn FreqyPacked::new) ... killed
1257: lit_int, replace `0` with `1`, at src/literal/imp.rs@447:22-447:23(fn FreqyPacked::empty) ... SURVIVED
1258: lit_int, replace `0` with `1`, at src/literal/imp.rs@448:19-448:20(fn FreqyPacked::empty) ... SURVIVED
1259: lit_int, replace `0` with `1`, at src/literal/imp.rs@449:20-449:21(fn FreqyPacked::empty) ... SURVIVED
1260: lit_int, replace `0` with `1`, at src/literal/imp.rs@450:19-450:20(fn FreqyPacked::empty) ... SURVIVED
1261: lit_int, replace `0` with `1`, at src/literal/imp.rs@451:20-451:21(fn FreqyPacked::empty) ... SURVIVED
1262: binop_cmp, replace `<` with `<=`, at src/literal/imp.rs@458:26-458:27(fn FreqyPacked::find) ... SURVIVED
1263: binop_cmp, replace `<` with `>=`, at src/literal/imp.rs@458:26-458:27(fn FreqyPacked::find) ... killed
1264: binop_cmp, replace `<` with `>`, at src/literal/imp.rs@458:26-458:27(fn FreqyPacked::find) ... SURVIVED
1265: binop_bool, replace `||` with `&&`, at src/literal/imp.rs@458:38-458:40(fn FreqyPacked::find) ... SURVIVED
1266: binop_cmp, replace `<` with `<=`, at src/literal/imp.rs@462:16-462:17(fn FreqyPacked::find) ... SURVIVED
1267: binop_cmp, replace `<` with `>=`, at src/literal/imp.rs@462:16-462:17(fn FreqyPacked::find) ... SURVIVED
1268: binop_cmp, replace `<` with `>`, at src/literal/imp.rs@462:16-462:17(fn FreqyPacked::find) ... killed
1269: binop_num, replace `-` with `+`, at src/literal/imp.rs@467:26-467:27(fn FreqyPacked::find) ... SURVIVED
1270: binop_num, replace `+` with `-`, at src/literal/imp.rs@468:28-468:29(fn FreqyPacked::find) ... killed
1271: binop_cmp, replace `>` with `<`, at src/literal/imp.rs@469:19-469:20(fn FreqyPacked::find) ... killed
1272: binop_cmp, replace `>` with `<=`, at src/literal/imp.rs@469:19-469:20(fn FreqyPacked::find) ... killed
1273: binop_cmp, replace `>` with `>=`, at src/literal/imp.rs@469:19-469:20(fn FreqyPacked::find) ... SURVIVED
1274: binop_eq, replace `==` with `!=`, at src/literal/imp.rs@473:36-473:38(fn FreqyPacked::find) ... SURVIVED
1275: binop_eq, replace `==` with `!=`, at src/literal/imp.rs@473:61-473:63(fn FreqyPacked::find) ... killed
1276: binop_bool, replace `&&` with `||`, at src/literal/imp.rs@473:50-473:52(fn FreqyPacked::find) ... SURVIVED
1277: lit_int, replace `1` with `2`, at src/literal/imp.rs@476:17-476:18(fn FreqyPacked::find) ... SURVIVED
1278: lit_int, replace `1` with `0`, at src/literal/imp.rs@476:17-476:18(fn FreqyPacked::find) ... killed (timeout)
1279: binop_cmp, replace `<` with `<=`, at src/literal/imp.rs@483:22-483:23(fn FreqyPacked::is_suffix) ... NOT COVERED
1280: binop_cmp, replace `<` with `>=`, at src/literal/imp.rs@483:22-483:23(fn FreqyPacked::is_suffix) ... NOT COVERED
1281: binop_cmp, replace `<` with `>`, at src/literal/imp.rs@483:22-483:23(fn FreqyPacked::is_suffix) ... NOT COVERED
1282: lit_bool, replace `false` with `true`, at src/literal/imp.rs@484:19-484:24(fn FreqyPacked::is_suffix) ... NOT COVERED
1283: binop_num, replace `-` with `+`, at src/literal/imp.rs@486:24-486:25(fn FreqyPacked::is_suffix) ... NOT COVERED
1284: binop_eq, replace `==` with `!=`, at src/literal/imp.rs@486:40-486:42(fn FreqyPacked::is_suffix) ... NOT COVERED
1285: binop_num, replace `*` with `/`, at src/literal/imp.rs@498:23-498:24(fn FreqyPacked::approximate_size) ... NOT COVERED
1286: binop_cmp, replace `<` with `<=`, at src/literal/imp.rs@592:26-592:27(fn BoyerMooreSearch::find) ... killed
1287: binop_cmp, replace `<` with `>=`, at src/literal/imp.rs@592:26-592:27(fn BoyerMooreSearch::find) ... killed
1288: binop_cmp, replace `<` with `>`, at src/literal/imp.rs@592:26-592:27(fn BoyerMooreSearch::find) ... killed
1289: lit_int, replace `1` with `2`, at src/literal/imp.rs@596:50-596:51(fn BoyerMooreSearch::find) ... killed
1290: lit_int, replace `1` with `0`, at src/literal/imp.rs@596:50-596:51(fn BoyerMooreSearch::find) ... killed
1291: binop_num, replace `-` with `+`, at src/literal/imp.rs@596:48-596:49(fn BoyerMooreSearch::find) ... killed
1292: lit_int, replace `2` with `3`, at src/literal/imp.rs@604:41-604:42(fn BoyerMooreSearch::find) ... SURVIVED
1293: lit_int, replace `2` with `1`, at src/literal/imp.rs@604:41-604:42(fn BoyerMooreSearch::find) ... SURVIVED
1294: binop_num, replace `+` with `-`, at src/literal/imp.rs@604:39-604:40(fn BoyerMooreSearch::find) ... killed
1295: binop_num, replace `*` with `/`, at src/literal/imp.rs@604:44-604:45(fn BoyerMooreSearch::find) ... killed
1296: binop_cmp, replace `>` with `<`, at src/literal/imp.rs@606:26-606:27(fn BoyerMooreSearch::find) ... killed
1297: binop_cmp, replace `>` with `<=`, at src/literal/imp.rs@606:26-606:27(fn BoyerMooreSearch::find) ... killed
1298: binop_cmp, replace `>` with `>=`, at src/literal/imp.rs@606:26-606:27(fn BoyerMooreSearch::find) ... SURVIVED
1299: lit_int, replace `1` with `2`, at src/literal/imp.rs@609:48-609:49(fn BoyerMooreSearch::find) ... SURVIVED
1300: lit_int, replace `1` with `0`, at src/literal/imp.rs@609:48-609:49(fn BoyerMooreSearch::find) ... killed
1301: binop_num, replace `+` with `-`, at src/literal/imp.rs@609:46-609:47(fn BoyerMooreSearch::find) ... killed
1302: binop_num, replace `*` with `/`, at src/literal/imp.rs@609:51-609:52(fn BoyerMooreSearch::find) ... killed
1303: binop_num, replace `-` with `+`, at src/literal/imp.rs@609:31-609:32(fn BoyerMooreSearch::find) ... killed
1304: binop_cmp, replace `>=` with `<`, at src/literal/imp.rs@616:30-616:32(fn BoyerMooreSearch::find) ... killed
1305: binop_cmp, replace `>=` with `<=`, at src/literal/imp.rs@616:30-616:32(fn BoyerMooreSearch::find) ... killed
1306: binop_cmp, replace `>=` with `>`, at src/literal/imp.rs@616:30-616:32(fn BoyerMooreSearch::find) ... SURVIVED
1307: lit_int, replace `1` with `2`, at src/literal/imp.rs@621:67-621:68(fn BoyerMooreSearch::find) ... killed
1308: lit_int, replace `1` with `0`, at src/literal/imp.rs@621:67-621:68(fn BoyerMooreSearch::find) ... killed
1309: binop_num, replace `-` with `+`, at src/literal/imp.rs@621:65-621:66(fn BoyerMooreSearch::find) ... killed
1310: binop_num, replace `-` with `+`, at src/literal/imp.rs@621:43-621:44(fn BoyerMooreSearch::find) ... killed
1311: lit_int, replace `0` with `1`, at src/literal/imp.rs@625:35-625:36(fn BoyerMooreSearch::find) ... killed (timeout)
1312: binop_eq, replace `==` with `!=`, at src/literal/imp.rs@625:32-625:34(fn BoyerMooreSearch::find) ... killed (timeout)
1313: binop_cmp, replace `<` with `<=`, at src/literal/imp.rs@632:25-632:26(fn BoyerMooreSearch::find) ... killed
1314: binop_cmp, replace `<` with `>=`, at src/literal/imp.rs@632:25-632:26(fn BoyerMooreSearch::find) ... killed
1315: binop_cmp, replace `<` with `>`, at src/literal/imp.rs@632:25-632:26(fn BoyerMooreSearch::find) ... killed
1316: lit_int, replace `0` with `1`, at src/literal/imp.rs@634:23-634:24(fn BoyerMooreSearch::find) ... killed (timeout)
1317: binop_eq, replace `==` with `!=`, at src/literal/imp.rs@634:20-634:22(fn BoyerMooreSearch::find) ... killed (timeout)
1318: lit_int, replace `1` with `2`, at src/literal/imp.rs@636:67-636:68(fn BoyerMooreSearch::find) ... killed
1319: lit_int, replace `1` with `0`, at src/literal/imp.rs@636:67-636:68(fn BoyerMooreSearch::find) ... killed
1320: binop_num, replace `-` with `+`, at src/literal/imp.rs@636:65-636:66(fn BoyerMooreSearch::find) ... killed
1321: binop_num, replace `-` with `+`, at src/literal/imp.rs@636:43-636:44(fn BoyerMooreSearch::find) ... killed
1322: binop_num, replace `-` with `+`, at src/literal/imp.rs@697:23-697:24(fn BoyerMooreSearch::should_use) ... NOT COVERED
1323: binop_cmp, replace `>` with `<`, at src/literal/imp.rs@701:22-701:23(fn BoyerMooreSearch::should_use) ... NOT COVERED
1324: binop_cmp, replace `>` with `<=`, at src/literal/imp.rs@701:22-701:23(fn BoyerMooreSearch::should_use) ... NOT COVERED
1325: binop_cmp, replace `>` with `>=`, at src/literal/imp.rs@701:22-701:23(fn BoyerMooreSearch::should_use) ... NOT COVERED
1326: binop_cmp, replace `>=` with `<`, at src/literal/imp.rs@703:52-703:54(fn BoyerMooreSearch::should_use) ... NOT COVERED
1327: binop_cmp, replace `>=` with `<=`, at src/literal/imp.rs@703:52-703:54(fn BoyerMooreSearch::should_use) ... NOT COVERED
1328: binop_cmp, replace `>=` with `>`, at src/literal/imp.rs@703:52-703:54(fn BoyerMooreSearch::should_use) ... NOT COVERED
1329: binop_bool, replace `&&` with `||`, at src/literal/imp.rs@703:12-703:14(fn BoyerMooreSearch::should_use) ... NOT COVERED
1330: binop_num, replace `-` with `+`, at src/literal/imp.rs@710:31-710:32(fn BoyerMooreSearch::check_match) ... killed
1331: binop_eq, replace `!=` with `==`, at src/literal/imp.rs@710:57-710:59(fn BoyerMooreSearch::check_match) ... killed
1332: lit_bool, replace `false` with `true`, at src/literal/imp.rs@711:19-711:24(fn BoyerMooreSearch::check_match) ... killed
1333: lit_int, replace `1` with `2`, at src/literal/imp.rs@715:62-715:63(fn BoyerMooreSearch::check_match) ... killed
1334: lit_int, replace `1` with `0`, at src/literal/imp.rs@715:62-715:63(fn BoyerMooreSearch::check_match) ... killed
1335: binop_num, replace `-` with `+`, at src/literal/imp.rs@715:60-715:61(fn BoyerMooreSearch::check_match) ... killed
1336: binop_num, replace `-` with `+`, at src/literal/imp.rs@715:38-715:39(fn BoyerMooreSearch::check_match) ... killed
1337: lit_int, replace `0` with `1`, at src/literal/imp.rs@716:17-716:18(fn BoyerMooreSearch::check_match) ... killed
1338: binop_num, replace `+` with `-`, at src/literal/imp.rs@717:56-717:57(fn BoyerMooreSearch::check_match) ... killed
1339: binop_eq, replace `!=` with `==`, at src/literal/imp.rs@717:31-717:33(fn BoyerMooreSearch::check_match) ... killed
1340: lit_bool, replace `false` with `true`, at src/literal/imp.rs@718:23-718:28(fn BoyerMooreSearch::check_match) ... killed
1341: lit_bool, replace `true` with `false`, at src/literal/imp.rs@722:8-722:12(fn BoyerMooreSearch::check_match) ... killed
1342: lit_int, replace `0` with `1`, at src/literal/imp.rs@750:23-750:24(fn BoyerMooreSearch::skip_loop) ... SURVIVED
1343: binop_eq, replace `!=` with `==`, at src/literal/imp.rs@750:20-750:22(fn BoyerMooreSearch::skip_loop) ... SURVIVED
1344: lit_int, replace `0` with `1`, at src/literal/imp.rs@757:27-757:28(fn BoyerMooreSearch::skip_loop) ... SURVIVED
1345: binop_eq, replace `!=` with `==`, at src/literal/imp.rs@757:24-757:26(fn BoyerMooreSearch::skip_loop) ... SURVIVED
1346: lit_int, replace `0` with `1`, at src/literal/imp.rs@764:31-764:32(fn BoyerMooreSearch::skip_loop) ... SURVIVED
1347: binop_eq, replace `!=` with `==`, at src/literal/imp.rs@764:28-764:30(fn BoyerMooreSearch::skip_loop) ... SURVIVED
1348: binop_num, replace `-` with `+`, at src/literal/imp.rs@772:38-772:39(fn BoyerMooreSearch::skip_loop) ... SURVIVED
1349: lit_int, replace `16` with `17`, at src/literal/imp.rs@773:30-773:32(fn BoyerMooreSearch::skip_loop) ... SURVIVED
1350: lit_int, replace `16` with `15`, at src/literal/imp.rs@773:30-773:32(fn BoyerMooreSearch::skip_loop) ... SURVIVED
1351: binop_num, replace `*` with `/`, at src/literal/imp.rs@773:33-773:34(fn BoyerMooreSearch::skip_loop) ... SURVIVED
1352: binop_cmp, replace `>` with `<`, at src/literal/imp.rs@773:28-773:29(fn BoyerMooreSearch::skip_loop) ... SURVIVED
1353: binop_cmp, replace `>` with `<=`, at src/literal/imp.rs@773:28-773:29(fn BoyerMooreSearch::skip_loop) ... SURVIVED
1354: binop_cmp, replace `>` with `>=`, at src/literal/imp.rs@773:28-773:29(fn BoyerMooreSearch::skip_loop) ... SURVIVED
1355: binop_cmp, replace `>=` with `<`, at src/literal/imp.rs@778:42-778:44(fn BoyerMooreSearch::skip_loop) ... NOT COVERED
1356: binop_cmp, replace `>=` with `<=`, at src/literal/imp.rs@778:42-778:44(fn BoyerMooreSearch::skip_loop) ... NOT COVERED
1357: binop_cmp, replace `>=` with `>`, at src/literal/imp.rs@778:42-778:44(fn BoyerMooreSearch::skip_loop) ... NOT COVERED
1358: lit_int, replace `1` with `2`, at src/literal/imp.rs@787:45-787:46(fn BoyerMooreSearch::skip_loop) ... SURVIVED
1359: lit_int, replace `1` with `0`, at src/literal/imp.rs@787:45-787:46(fn BoyerMooreSearch::skip_loop) ... SURVIVED
1360: binop_num, replace `+` with `-`, at src/literal/imp.rs@787:47-787:48(fn BoyerMooreSearch::skip_loop) ... killed
1361: lit_int, replace `0` with `1`, at src/literal/imp.rs@788:43-788:44(fn BoyerMooreSearch::skip_loop) ... SURVIVED
1362: binop_num, replace `+` with `-`, at src/literal/imp.rs@795:44-795:45(fn BoyerMooreSearch::skip_loop) ... killed
1363: binop_num, replace `+` with `-`, at src/literal/imp.rs@796:44-796:45(fn BoyerMooreSearch::skip_loop) ... SURVIVED
1364: lit_int, replace `1` with `2`, at src/literal/imp.rs@819:48-819:49(fn BoyerMooreSearch::compile_skip_table) ... killed
1365: lit_int, replace `1` with `0`, at src/literal/imp.rs@819:48-819:49(fn BoyerMooreSearch::compile_skip_table) ... killed
1366: binop_num, replace `-` with `+`, at src/literal/imp.rs@819:46-819:47(fn BoyerMooreSearch::compile_skip_table) ... killed
1367: binop_num, replace `-` with `+`, at src/literal/imp.rs@819:51-819:52(fn BoyerMooreSearch::compile_skip_table) ... killed
1368: lit_int, replace `0` with `1`, at src/literal/imp.rs@828:33-828:34(fn BoyerMooreSearch::select_guard) ... killed
1369: lit_int, replace `1` with `2`, at src/literal/imp.rs@829:49-829:50(fn BoyerMooreSearch::select_guard) ... killed
1370: lit_int, replace `1` with `0`, at src/literal/imp.rs@829:49-829:50(fn BoyerMooreSearch::select_guard) ... killed
1371: binop_num, replace `-` with `+`, at src/literal/imp.rs@829:47-829:48(fn BoyerMooreSearch::select_guard) ... killed
1372: binop_cmp, replace `<` with `<=`, at src/literal/imp.rs@831:29-831:30(fn BoyerMooreSearch::select_guard) ... SURVIVED
1373: binop_cmp, replace `<` with `>=`, at src/literal/imp.rs@831:29-831:30(fn BoyerMooreSearch::select_guard) ... SURVIVED
1374: binop_cmp, replace `<` with `>`, at src/literal/imp.rs@831:29-831:30(fn BoyerMooreSearch::select_guard) ... SURVIVED
1375: lit_int, replace `1` with `2`, at src/literal/imp.rs@833:50-833:51(fn BoyerMooreSearch::select_guard) ... killed
1376: lit_int, replace `1` with `0`, at src/literal/imp.rs@833:50-833:51(fn BoyerMooreSearch::select_guard) ... killed
1377: binop_num, replace `-` with `+`, at src/literal/imp.rs@833:48-833:49(fn BoyerMooreSearch::select_guard) ... killed
1378: binop_num, replace `-` with `+`, at src/literal/imp.rs@833:53-833:54(fn BoyerMooreSearch::select_guard) ... killed
1379: lit_int, replace `1` with `2`, at src/literal/imp.rs@849:28-849:29(fn BoyerMooreSearch::compile_md2_shift) ... killed
1380: lit_int, replace `1` with `0`, at src/literal/imp.rs@849:28-849:29(fn BoyerMooreSearch::compile_md2_shift) ... killed
1381: binop_eq, replace `==` with `!=`, at src/literal/imp.rs@849:25-849:27(fn BoyerMooreSearch::compile_md2_shift) ... killed
1382: lit_int, replace `3735928495` with `3735928496`, at src/literal/imp.rs@850:19-850:29(fn BoyerMooreSearch::compile_md2_shift) ... SURVIVED
1383: lit_int, replace `3735928495` with `3735928494`, at src/literal/imp.rs@850:19-850:29(fn BoyerMooreSearch::compile_md2_shift) ... SURVIVED
1384: lit_int, replace `2` with `3`, at src/literal/imp.rs@853:36-853:37(fn BoyerMooreSearch::compile_md2_shift) ... killed
1385: lit_int, replace `2` with `1`, at src/literal/imp.rs@853:36-853:37(fn BoyerMooreSearch::compile_md2_shift) ... killed (timeout)
1386: binop_num, replace `-` with `+`, at src/literal/imp.rs@853:34-853:35(fn BoyerMooreSearch::compile_md2_shift) ... killed
1387: lit_int, replace `0` with `1`, at src/literal/imp.rs@854:18-854:19(fn BoyerMooreSearch::compile_md2_shift) ... SURVIVED
1388: binop_cmp, replace `>` with `<`, at src/literal/imp.rs@854:16-854:17(fn BoyerMooreSearch::compile_md2_shift) ... SURVIVED
1389: binop_cmp, replace `>` with `<=`, at src/literal/imp.rs@854:16-854:17(fn BoyerMooreSearch::compile_md2_shift) ... killed
1390: binop_cmp, replace `>` with `>=`, at src/literal/imp.rs@854:16-854:17(fn BoyerMooreSearch::compile_md2_shift) ... killed
1391: binop_eq, replace `==` with `!=`, at src/literal/imp.rs@855:26-855:28(fn BoyerMooreSearch::compile_md2_shift) ... SURVIVED
1392: lit_int, replace `1` with `2`, at src/literal/imp.rs@856:40-856:41(fn BoyerMooreSearch::compile_md2_shift) ... killed (timeout)
1393: lit_int, replace `1` with `0`, at src/literal/imp.rs@856:40-856:41(fn BoyerMooreSearch::compile_md2_shift) ... killed
1394: binop_num, replace `-` with `+`, at src/literal/imp.rs@856:38-856:39(fn BoyerMooreSearch::compile_md2_shift) ... SURVIVED
1395: binop_num, replace `-` with `+`, at src/literal/imp.rs@856:43-856:44(fn BoyerMooreSearch::compile_md2_shift) ... killed
1396: lit_int, replace `1` with `2`, at src/literal/imp.rs@858:17-858:18(fn BoyerMooreSearch::compile_md2_shift) ... killed
1397: lit_int, replace `1` with `0`, at src/literal/imp.rs@858:17-858:18(fn BoyerMooreSearch::compile_md2_shift) ... killed (timeout)
1398: lit_int, replace `1` with `2`, at src/literal/imp.rs@863:24-863:25(fn BoyerMooreSearch::compile_md2_shift) ... killed (timeout)
1399: lit_int, replace `1` with `0`, at src/literal/imp.rs@863:24-863:25(fn BoyerMooreSearch::compile_md2_shift) ... SURVIVED
1400: binop_num, replace `-` with `+`, at src/literal/imp.rs@863:22-863:23(fn BoyerMooreSearch::compile_md2_shift) ... killed
1401: binop_num, replace `*` with `/`, at src/literal/imp.rs@867:28-867:29(fn BoyerMooreSearch::approximate_size) ... NOT COVERED
1402: lit_int, replace `256` with `257`, at src/literal/imp.rs@868:15-868:18(fn BoyerMooreSearch::approximate_size) ... NOT COVERED
1403: lit_int, replace `256` with `255`, at src/literal/imp.rs@868:15-868:18(fn BoyerMooreSearch::approximate_size) ... NOT COVERED
1404: binop_num, replace `*` with `/`, at src/literal/imp.rs@868:19-868:20(fn BoyerMooreSearch::approximate_size) ... NOT COVERED
1405: binop_num, replace `+` with `-`, at src/literal/imp.rs@868:12-868:13(fn BoyerMooreSearch::approximate_size) ... NOT COVERED
1406: stmt_call, remove `cache . clist . resize (prog . len (), prog . captures . len ()) ;`, at src/pikevm.rs@100:8-100:59(fn Fsm < 'r, I >::exec) ... NOT COVERED
1407: stmt_call, remove `cache . nlist . resize (prog . len (), prog . captures . len ()) ;`, at src/pikevm.rs@101:8-101:59(fn Fsm < 'r, I >::exec) ... NOT COVERED
1408: lit_bool, replace `false` with `true`, at src/pikevm.rs@124:26-124:31(fn Fsm < 'r, I >::exec_) ... NOT COVERED
1409: lit_bool, replace `false` with `true`, at src/pikevm.rs@125:30-125:35(fn Fsm < 'r, I >::exec_) ... NOT COVERED
1410: stmt_call, remove `clist . set . clear () ;`, at src/pikevm.rs@126:8-126:25(fn Fsm < 'r, I >::exec_) ... NOT COVERED
1411: stmt_call, remove `nlist . set . clear () ;`, at src/pikevm.rs@127:8-127:25(fn Fsm < 'r, I >::exec_) ... NOT COVERED
1412: lit_int, replace `1` with `2`, at src/pikevm.rs@140:48-140:49(fn Fsm < 'r, I >::exec_) ... NOT COVERED
1413: lit_int, replace `1` with `0`, at src/pikevm.rs@140:48-140:49(fn Fsm < 'r, I >::exec_) ... NOT COVERED
1414: binop_cmp, replace `<=` with `<`, at src/pikevm.rs@140:45-140:47(fn Fsm < 'r, I >::exec_) ... NOT COVERED
1415: binop_cmp, replace `<=` with `>=`, at src/pikevm.rs@140:45-140:47(fn Fsm < 'r, I >::exec_) ... NOT COVERED
1416: binop_cmp, replace `<=` with `>`, at src/pikevm.rs@140:45-140:47(fn Fsm < 'r, I >::exec_) ... NOT COVERED
1417: binop_bool, replace `&&` with `||`, at src/pikevm.rs@140:28-140:30(fn Fsm < 'r, I >::exec_) ... NOT COVERED
1418: binop_bool, replace `||` with `&&`, at src/pikevm.rs@141:20-141:22(fn Fsm < 'r, I >::exec_) ... NOT COVERED
1419: unop_not, remove `!`, at src/pikevm.rs@142:24-142:25(fn Fsm < 'r, I >::exec_) ... NOT COVERED
1420: binop_bool, replace `&&` with `||`, at src/pikevm.rs@142:39-142:41(fn Fsm < 'r, I >::exec_) ... NOT COVERED
1421: binop_bool, replace `||` with `&&`, at src/pikevm.rs@142:20-142:22(fn Fsm < 'r, I >::exec_) ... NOT COVERED
1422: unop_not, remove `!`, at src/pikevm.rs@150:19-150:20(fn Fsm < 'r, I >::exec_) ... NOT COVERED
1423: unop_not, remove `!`, at src/pikevm.rs@162:20-162:21(fn Fsm < 'r, I >::exec_) ... NOT COVERED
1424: unop_not, remove `!`, at src/pikevm.rs@162:52-162:53(fn Fsm < 'r, I >::exec_) ... NOT COVERED
1425: binop_bool, replace `&&` with `||`, at src/pikevm.rs@162:49-162:51(fn Fsm < 'r, I >::exec_) ... NOT COVERED
1426: binop_bool, replace `||` with `&&`, at src/pikevm.rs@162:16-162:18(fn Fsm < 'r, I >::exec_) ... NOT COVERED
1427: lit_int, replace `0` with `1`, at src/pikevm.rs@164:44-164:45(fn Fsm < 'r, I >::exec_) ... NOT COVERED
1428: stmt_call, remove `self . add (& mut clist, slots, 0, at) ;`, at src/pikevm.rs@164:16-164:50(fn Fsm < 'r, I >::exec_) ... NOT COVERED
1429: lit_int, replace `0` with `1`, at src/pikevm.rs@171:21-171:22(fn Fsm < 'r, I >::exec_) ... NOT COVERED
1430: lit_bool, replace `true` with `false`, at src/pikevm.rs@182:30-182:34(fn Fsm < 'r, I >::exec_) ... NOT COVERED
1431: binop_bool, replace `||` with `&&`, at src/pikevm.rs@183:46-183:48(fn Fsm < 'r, I >::exec_) ... NOT COVERED
1432: lit_int, replace `1` with `2`, at src/pikevm.rs@189:50-189:51(fn Fsm < 'r, I >::exec_) ... NOT COVERED
1433: lit_int, replace `1` with `0`, at src/pikevm.rs@189:50-189:51(fn Fsm < 'r, I >::exec_) ... NOT COVERED
1434: binop_eq, replace `==` with `!=`, at src/pikevm.rs@189:47-189:49(fn Fsm < 'r, I >::exec_) ... NOT COVERED
1435: binop_cmp, replace `>=` with `<`, at src/pikevm.rs@202:24-202:26(fn Fsm < 'r, I >::exec_) ... NOT COVERED
1436: binop_cmp, replace `>=` with `<=`, at src/pikevm.rs@202:24-202:26(fn Fsm < 'r, I >::exec_) ... NOT COVERED
1437: binop_cmp, replace `>=` with `>`, at src/pikevm.rs@202:24-202:26(fn Fsm < 'r, I >::exec_) ... NOT COVERED
1438: stmt_call, remove `mem :: swap (clist, nlist) ;`, at src/pikevm.rs@206:12-206:35(fn Fsm < 'r, I >::exec_) ... NOT COVERED
1439: stmt_call, remove `nlist . set . clear () ;`, at src/pikevm.rs@207:12-207:29(fn Fsm < 'r, I >::exec_) ... NOT COVERED
1440: binop_cmp, replace `<` with `<=`, at src/pikevm.rs@237:30-237:31(fn Fsm < 'r, I >::step) ... NOT COVERED
1441: binop_cmp, replace `<` with `>=`, at src/pikevm.rs@237:30-237:31(fn Fsm < 'r, I >::step) ... NOT COVERED
1442: binop_cmp, replace `<` with `>`, at src/pikevm.rs@237:30-237:31(fn Fsm < 'r, I >::step) ... NOT COVERED
1443: lit_bool, replace `true` with `false`, at src/pikevm.rs@238:42-238:46(fn Fsm < 'r, I >::step) ... NOT COVERED
1444: lit_bool, replace `true` with `false`, at src/pikevm.rs@243:16-243:20(fn Fsm < 'r, I >::step) ... NOT COVERED
1445: binop_eq, replace `==` with `!=`, at src/pikevm.rs@246:26-246:28(fn Fsm < 'r, I >::step) ... NOT COVERED
1446: stmt_call, remove `self . add (nlist, thread_caps, inst . goto, at_next) ;`, at src/pikevm.rs@247:20-247:68(fn Fsm < 'r, I >::step) ... NOT COVERED
1447: lit_bool, replace `false` with `true`, at src/pikevm.rs@249:16-249:21(fn Fsm < 'r, I >::step) ... NOT COVERED
1448: stmt_call, remove `self . add (nlist, thread_caps, inst . goto, at_next) ;`, at src/pikevm.rs@253:20-253:68(fn Fsm < 'r, I >::step) ... NOT COVERED
1449: lit_bool, replace `false` with `true`, at src/pikevm.rs@255:16-255:21(fn Fsm < 'r, I >::step) ... NOT COVERED
1450: stmt_call, remove `self . add (nlist, thread_caps, inst . goto, at_next) ;`, at src/pikevm.rs@260:24-260:72(fn Fsm < 'r, I >::step) ... NOT COVERED
1451: lit_bool, replace `false` with `true`, at src/pikevm.rs@263:16-263:21(fn Fsm < 'r, I >::step) ... NOT COVERED
1452: lit_bool, replace `false` with `true`, at src/pikevm.rs@265:49-265:54(fn Fsm < 'r, I >::step) ... NOT COVERED
1453: stmt_call, remove `self . stack . push (FollowEpsilon :: IP (ip)) ;`, at src/pikevm.rs@278:8-278:46(fn Fsm < 'r, I >::add) ... NOT COVERED
1454: stmt_call, remove `self . add_step (nlist, thread_caps, ip, at) ;`, at src/pikevm.rs@282:20-282:61(fn Fsm < 'r, I >::add) ... NOT COVERED
1455: stmt_call, remove `nlist . set . insert (ip) ;`, at src/pikevm.rs@309:12-309:32(fn Fsm < 'r, I >::add_step) ... NOT COVERED
1456: binop_cmp, replace `<` with `<=`, at src/pikevm.rs@317:33-317:34(fn Fsm < 'r, I >::add_step) ... NOT COVERED
1457: binop_cmp, replace `<` with `>=`, at src/pikevm.rs@317:33-317:34(fn Fsm < 'r, I >::add_step) ... NOT COVERED
1458: binop_cmp, replace `<` with `>`, at src/pikevm.rs@317:33-317:34(fn Fsm < 'r, I >::add_step) ... NOT COVERED
1459: stmt_call, remove `self . stack . push (FollowEpsilon :: Capture  { slot : inst . slot, pos : thread_caps [inst . slot], }) ;`, at src/pikevm.rs@318:24-321:26(fn Fsm < 'r, I >::add_step) ... NOT COVERED
1460: stmt_call, remove `self . stack . push (FollowEpsilon :: IP (inst . goto2)) ;`, at src/pikevm.rs@327:20-327:66(fn Fsm < 'r, I >::add_step) ... NOT COVERED
1461: lit_int, replace `0` with `1`, at src/pikevm.rs@344:38-344:39(fn Threads::new) ... SURVIVED
1462: lit_int, replace `0` with `1`, at src/pikevm.rs@344:74-344:75(fn Threads::new) ... SURVIVED
1463: binop_eq, replace `==` with `!=`, at src/pikevm.rs@348:21-348:23(fn Threads::resize) ... NOT COVERED
1464: lit_int, replace `2` with `3`, at src/pikevm.rs@351:40-351:41(fn Threads::resize) ... NOT COVERED
1465: lit_int, replace `2` with `1`, at src/pikevm.rs@351:40-351:41(fn Threads::resize) ... NOT COVERED
1466: binop_num, replace `*` with `/`, at src/pikevm.rs@351:38-351:39(fn Threads::resize) ... NOT COVERED
1467: binop_num, replace `*` with `/`, at src/pikevm.rs@357:19-357:20(fn Threads::caps) ... NOT COVERED
1468: binop_num, replace `+` with `-`, at src/pikevm.rs@358:28-358:29(fn Threads::caps) ... NOT COVERED
1469: lit_int, replace `0` with `1`, at src/prog.rs@86:19-86:20(fn Program::new) ... SURVIVED
1470: lit_bool, replace `true` with `false`, at src/prog.rs@88:23-88:27(fn Program::new) ... SURVIVED
1471: lit_bool, replace `false` with `true`, at src/prog.rs@89:22-89:27(fn Program::new) ... SURVIVED
1472: lit_bool, replace `false` with `true`, at src/prog.rs@90:20-90:25(fn Program::new) ... killed
1473: lit_bool, replace `false` with `true`, at src/prog.rs@91:24-91:29(fn Program::new) ... killed
1474: lit_bool, replace `false` with `true`, at src/prog.rs@92:31-92:36(fn Program::new) ... SURVIVED
1475: lit_bool, replace `false` with `true`, at src/prog.rs@93:29-93:34(fn Program::new) ... SURVIVED
1476: lit_bool, replace `false` with `true`, at src/prog.rs@94:39-94:44(fn Program::new) ... SURVIVED
1477: lit_int, replace `2` with `3`, at src/prog.rs@96:28-96:29(fn Program::new) ... SURVIVED
1478: lit_int, replace `2` with `1`, at src/prog.rs@96:28-96:29(fn Program::new) ... SURVIVED
1479: lit_int, replace `1` with `2`, at src/prog.rs@96:33-96:34(fn Program::new) ... SURVIVED
1480: lit_int, replace `1` with `0`, at src/prog.rs@96:33-96:34(fn Program::new) ... SURVIVED
1481: lit_int, replace `20` with `21`, at src/prog.rs@96:38-96:40(fn Program::new) ... SURVIVED
1482: lit_int, replace `20` with `19`, at src/prog.rs@96:38-96:40(fn Program::new) ... SURVIVED
1483: binop_num, replace `*` with `/`, at src/prog.rs@96:30-96:31(fn Program::new) ... SURVIVED
1484: lit_int, replace `1` with `2`, at src/prog.rs@114:32-114:33(fn Program::leads_to_match) ... NOT COVERED
1485: lit_int, replace `1` with `0`, at src/prog.rs@114:32-114:33(fn Program::leads_to_match) ... NOT COVERED
1486: binop_cmp, replace `>` with `<`, at src/prog.rs@114:30-114:31(fn Program::leads_to_match) ... NOT COVERED
1487: binop_cmp, replace `>` with `<=`, at src/prog.rs@114:30-114:31(fn Program::leads_to_match) ... NOT COVERED
1488: binop_cmp, replace `>` with `>=`, at src/prog.rs@114:30-114:31(fn Program::leads_to_match) ... NOT COVERED
1489: lit_bool, replace `false` with `true`, at src/prog.rs@118:19-118:24(fn Program::leads_to_match) ... NOT COVERED
1490: lit_bool, replace `true` with `false`, at src/prog.rs@121:30-121:34(fn Program::leads_to_match) ... NOT COVERED
1491: lit_bool, replace `false` with `true`, at src/prog.rs@122:17-122:22(fn Program::leads_to_match) ... NOT COVERED
1492: unop_not, remove `!`, at src/prog.rs@129:23-129:24(fn Program::needs_dotstar) ... SURVIVED
1493: binop_bool, replace `&&` with `||`, at src/prog.rs@129:20-129:22(fn Program::needs_dotstar) ... SURVIVED
1494: unop_not, remove `!`, at src/prog.rs@129:43-129:44(fn Program::needs_dotstar) ... SURVIVED
1495: binop_bool, replace `&&` with `||`, at src/prog.rs@129:40-129:42(fn Program::needs_dotstar) ... SURVIVED
1496: binop_bool, replace `||` with `&&`, at src/prog.rs@135:22-135:24(fn Program::uses_bytes) ... SURVIVED
1497: binop_num, replace `*` with `/`, at src/prog.rs@151:20-151:21(fn Program::approximate_size) ... NOT COVERED
1498: binop_num, replace `*` with `/`, at src/prog.rs@152:34-152:35(fn Program::approximate_size) ... NOT COVERED
1499: binop_num, replace `+` with `-`, at src/prog.rs@152:12-152:13(fn Program::approximate_size) ... NOT COVERED
1500: binop_num, replace `*` with `/`, at src/prog.rs@153:35-153:36(fn Program::approximate_size) ... NOT COVERED
1501: binop_num, replace `+` with `-`, at src/prog.rs@153:12-153:13(fn Program::approximate_size) ... NOT COVERED
1502: binop_num, replace `+` with `-`, at src/prog.rs@155:44-155:45(fn Program::approximate_size) ... NOT COVERED
1503: binop_num, replace `*` with `/`, at src/prog.rs@155:16-155:17(fn Program::approximate_size) ... NOT COVERED
1504: binop_num, replace `+` with `-`, at src/prog.rs@154:12-154:13(fn Program::approximate_size) ... NOT COVERED
1505: binop_num, replace `*` with `/`, at src/prog.rs@156:39-156:40(fn Program::approximate_size) ... NOT COVERED
1506: binop_num, replace `+` with `-`, at src/prog.rs@156:12-156:13(fn Program::approximate_size) ... NOT COVERED
1507: binop_num, replace `+` with `-`, at src/prog.rs@157:12-157:13(fn Program::approximate_size) ... NOT COVERED
1508: lit_int, replace `1` with `2`, at src/prog.rs@175:29-175:30(fn Program::with_goto) ... NOT COVERED
1509: lit_int, replace `1` with `0`, at src/prog.rs@175:29-175:30(fn Program::with_goto) ... NOT COVERED
1510: binop_num, replace `+` with `-`, at src/prog.rs@175:27-175:28(fn Program::with_goto) ... NOT COVERED
1511: binop_eq, replace `==` with `!=`, at src/prog.rs@175:20-175:22(fn Program::with_goto) ... NOT COVERED
1512: binop_eq, replace `==` with `!=`, at src/prog.rs@233:18-233:20(fn Program::fmt) ... NOT COVERED
1513: lit_bool, replace `true` with `false`, at src/prog.rs@302:30-302:34(fn Inst::is_match) ... NOT COVERED
1514: lit_bool, replace `false` with `true`, at src/prog.rs@303:17-303:22(fn Inst::is_match) ... NOT COVERED
1515: lit_int, replace `4` with `5`, at src/prog.rs@386:41-386:42(fn InstRanges::matches) ... NOT COVERED
1516: lit_int, replace `4` with `3`, at src/prog.rs@386:41-386:42(fn InstRanges::matches) ... NOT COVERED
1517: binop_cmp, replace `<` with `<=`, at src/prog.rs@387:17-387:18(fn InstRanges::matches) ... NOT COVERED
1518: binop_cmp, replace `<` with `>=`, at src/prog.rs@387:17-387:18(fn InstRanges::matches) ... NOT COVERED
1519: binop_cmp, replace `<` with `>`, at src/prog.rs@387:17-387:18(fn InstRanges::matches) ... NOT COVERED
1520: lit_bool, replace `false` with `true`, at src/prog.rs@388:23-388:28(fn InstRanges::matches) ... NOT COVERED
1521: binop_cmp, replace `<=` with `<`, at src/prog.rs@390:17-390:19(fn InstRanges::matches) ... NOT COVERED
1522: binop_cmp, replace `<=` with `>=`, at src/prog.rs@390:17-390:19(fn InstRanges::matches) ... NOT COVERED
1523: binop_cmp, replace `<=` with `>`, at src/prog.rs@390:17-390:19(fn InstRanges::matches) ... NOT COVERED
1524: lit_bool, replace `true` with `false`, at src/prog.rs@391:23-391:27(fn InstRanges::matches) ... NOT COVERED
1525: binop_cmp, replace `<` with `<=`, at src/prog.rs@396:23-396:24(fn InstRanges::matches) ... NOT COVERED
1526: binop_cmp, replace `<` with `>=`, at src/prog.rs@396:23-396:24(fn InstRanges::matches) ... NOT COVERED
1527: binop_cmp, replace `<` with `>`, at src/prog.rs@396:23-396:24(fn InstRanges::matches) ... NOT COVERED
1528: binop_cmp, replace `>` with `<`, at src/prog.rs@398:30-398:31(fn InstRanges::matches) ... NOT COVERED
1529: binop_cmp, replace `>` with `<=`, at src/prog.rs@398:30-398:31(fn InstRanges::matches) ... NOT COVERED
1530: binop_cmp, replace `>` with `>=`, at src/prog.rs@398:30-398:31(fn InstRanges::matches) ... NOT COVERED
1531: lit_int, replace `1` with `2`, at src/prog.rs@412:27-412:28(fn InstRanges::num_chars) ... NOT COVERED
1532: lit_int, replace `1` with `0`, at src/prog.rs@412:27-412:28(fn InstRanges::num_chars) ... NOT COVERED
1533: binop_num, replace `+` with `-`, at src/prog.rs@412:29-412:30(fn InstRanges::num_chars) ... NOT COVERED
1534: binop_num, replace `-` with `+`, at src/prog.rs@412:42-412:43(fn InstRanges::num_chars) ... NOT COVERED
1535: lit_int, replace `0` with `1`, at src/prog.rs@413:18-413:19(fn InstRanges::num_chars) ... NOT COVERED
1536: binop_num, replace `+` with `-`, at src/prog.rs@413:36-413:37(fn InstRanges::num_chars) ... NOT COVERED
1537: binop_cmp, replace `<=` with `<`, at src/prog.rs@432:19-432:21(fn InstBytes::matches) ... killed
1538: binop_cmp, replace `<=` with `>=`, at src/prog.rs@432:19-432:21(fn InstBytes::matches) ... SURVIVED
1539: binop_cmp, replace `<=` with `>`, at src/prog.rs@432:19-432:21(fn InstBytes::matches) ... killed
1540: binop_cmp, replace `<=` with `<`, at src/prog.rs@432:35-432:37(fn InstBytes::matches) ... killed
1541: binop_cmp, replace `<=` with `>=`, at src/prog.rs@432:35-432:37(fn InstBytes::matches) ... SURVIVED
1542: binop_cmp, replace `<=` with `>`, at src/prog.rs@432:35-432:37(fn InstBytes::matches) ... killed
1543: binop_bool, replace `&&` with `||`, at src/prog.rs@432:27-432:29(fn InstBytes::matches) ... SURVIVED
1544: lit_int, replace `10` with `11`, at src/re_builder.rs@22:24-22:26(fn RegexOptions::default) ... SURVIVED
1545: lit_int, replace `10` with `9`, at src/re_builder.rs@22:24-22:26(fn RegexOptions::default) ... SURVIVED
1546: lit_int, replace `1` with `2`, at src/re_builder.rs@22:30-22:31(fn RegexOptions::default) ... SURVIVED
1547: lit_int, replace `1` with `0`, at src/re_builder.rs@22:30-22:31(fn RegexOptions::default) ... killed
1548: lit_int, replace `20` with `21`, at src/re_builder.rs@22:35-22:37(fn RegexOptions::default) ... SURVIVED
1549: lit_int, replace `20` with `19`, at src/re_builder.rs@22:35-22:37(fn RegexOptions::default) ... SURVIVED
1550: binop_num, replace `*` with `/`, at src/re_builder.rs@22:27-22:28(fn RegexOptions::default) ... killed
1551: lit_int, replace `2` with `3`, at src/re_builder.rs@23:28-23:29(fn RegexOptions::default) ... SURVIVED
1552: lit_int, replace `2` with `1`, at src/re_builder.rs@23:28-23:29(fn RegexOptions::default) ... SURVIVED
1553: lit_int, replace `1` with `2`, at src/re_builder.rs@23:33-23:34(fn RegexOptions::default) ... SURVIVED
1554: lit_int, replace `1` with `0`, at src/re_builder.rs@23:33-23:34(fn RegexOptions::default) ... SURVIVED
1555: lit_int, replace `20` with `21`, at src/re_builder.rs@23:38-23:40(fn RegexOptions::default) ... SURVIVED
1556: lit_int, replace `20` with `19`, at src/re_builder.rs@23:38-23:40(fn RegexOptions::default) ... SURVIVED
1557: binop_num, replace `*` with `/`, at src/re_builder.rs@23:30-23:31(fn RegexOptions::default) ... SURVIVED
1558: lit_int, replace `250` with `251`, at src/re_builder.rs@24:24-24:27(fn RegexOptions::default) ... SURVIVED
1559: lit_int, replace `250` with `249`, at src/re_builder.rs@24:24-24:27(fn RegexOptions::default) ... SURVIVED
1560: lit_bool, replace `false` with `true`, at src/re_builder.rs@25:30-25:35(fn RegexOptions::default) ... SURVIVED
1561: lit_bool, replace `false` with `true`, at src/re_builder.rs@26:24-26:29(fn RegexOptions::default) ... SURVIVED
1562: lit_bool, replace `false` with `true`, at src/re_builder.rs@27:34-27:39(fn RegexOptions::default) ... SURVIVED
1563: lit_bool, replace `false` with `true`, at src/re_builder.rs@28:24-28:29(fn RegexOptions::default) ... SURVIVED
1564: lit_bool, replace `false` with `true`, at src/re_builder.rs@29:31-29:36(fn RegexOptions::default) ... SURVIVED
1565: lit_bool, replace `true` with `false`, at src/re_builder.rs@30:21-30:25(fn RegexOptions::default) ... SURVIVED
1566: lit_bool, replace `false` with `true`, at src/re_builder.rs@31:19-31:24(fn RegexOptions::default) ... SURVIVED
1567: lit_int, replace `0` with `1`, at src/re_bytes.rs@128:31-128:32(fn Regex::is_match) ... NOT COVERED
1568: lit_int, replace `0` with `1`, at src/re_bytes.rs@152:27-152:28(fn Regex::find) ... NOT COVERED
1569: lit_int, replace `0` with `1`, at src/re_bytes.rs@242:47-242:48(fn Regex::captures) ... NOT COVERED
1570: lit_int, replace `0` with `1`, at src/re_bytes.rs@303:52-303:53(fn Regex::split) ... killed
1571: lit_int, replace `1` with `2`, at src/re_bytes.rs@447:28-447:29(fn Regex::replace) ... NOT COVERED
1572: lit_int, replace `1` with `0`, at src/re_bytes.rs@447:28-447:29(fn Regex::replace) ... NOT COVERED
1573: lit_int, replace `0` with `1`, at src/re_bytes.rs@461:28-461:29(fn Regex::replace_all) ... NOT COVERED
1574: lit_int, replace `0` with `1`, at src/re_bytes.rs@482:33-482:34(fn Regex::replacen) ... NOT COVERED
1575: lit_int, replace `0` with `1`, at src/re_bytes.rs@484:27-484:28(fn Regex::replacen) ... NOT COVERED
1576: binop_cmp, replace `>` with `<`, at src/re_bytes.rs@484:25-484:26(fn Regex::replacen) ... NOT COVERED
1577: binop_cmp, replace `>` with `<=`, at src/re_bytes.rs@484:25-484:26(fn Regex::replacen) ... NOT COVERED
1578: binop_cmp, replace `>` with `>=`, at src/re_bytes.rs@484:25-484:26(fn Regex::replacen) ... NOT COVERED
1579: binop_cmp, replace `>=` with `<`, at src/re_bytes.rs@484:34-484:36(fn Regex::replacen) ... NOT COVERED
1580: binop_cmp, replace `>=` with `<=`, at src/re_bytes.rs@484:34-484:36(fn Regex::replacen) ... NOT COVERED
1581: binop_cmp, replace `>=` with `>`, at src/re_bytes.rs@484:34-484:36(fn Regex::replacen) ... NOT COVERED
1582: binop_bool, replace `&&` with `||`, at src/re_bytes.rs@484:29-484:31(fn Regex::replacen) ... NOT COVERED
1583: stmt_call, remove `new . extend_from_slice (& text [last_match .. m . start ()]) ;`, at src/re_bytes.rs@487:16-487:67(fn Regex::replacen) ... NOT COVERED
1584: stmt_call, remove `new . extend_from_slice (& rep) ;`, at src/re_bytes.rs@488:16-488:43(fn Regex::replacen) ... NOT COVERED
1585: stmt_call, remove `new . extend_from_slice (& text [last_match ..]) ;`, at src/re_bytes.rs@491:12-491:54(fn Regex::replacen) ... NOT COVERED
1586: lit_int, replace `0` with `1`, at src/re_bytes.rs@502:29-502:30(fn Regex::replacen) ... NOT COVERED
1587: lit_int, replace `0` with `1`, at src/re_bytes.rs@504:23-504:24(fn Regex::replacen) ... NOT COVERED
1588: binop_cmp, replace `>` with `<`, at src/re_bytes.rs@504:21-504:22(fn Regex::replacen) ... NOT COVERED
1589: binop_cmp, replace `>` with `<=`, at src/re_bytes.rs@504:21-504:22(fn Regex::replacen) ... NOT COVERED
1590: binop_cmp, replace `>` with `>=`, at src/re_bytes.rs@504:21-504:22(fn Regex::replacen) ... NOT COVERED
1591: binop_cmp, replace `>=` with `<`, at src/re_bytes.rs@504:30-504:32(fn Regex::replacen) ... NOT COVERED
1592: binop_cmp, replace `>=` with `<=`, at src/re_bytes.rs@504:30-504:32(fn Regex::replacen) ... NOT COVERED
1593: binop_cmp, replace `>=` with `>`, at src/re_bytes.rs@504:30-504:32(fn Regex::replacen) ... NOT COVERED
1594: binop_bool, replace `&&` with `||`, at src/re_bytes.rs@504:25-504:27(fn Regex::replacen) ... NOT COVERED
1595: lit_int, replace `0` with `1`, at src/re_bytes.rs@508:28-508:29(fn Regex::replacen) ... NOT COVERED
1596: stmt_call, remove `new . extend_from_slice (& text [last_match .. m . start ()]) ;`, at src/re_bytes.rs@509:12-509:63(fn Regex::replacen) ... NOT COVERED
1597: stmt_call, remove `rep . replace_append (& cap, & mut new) ;`, at src/re_bytes.rs@510:12-510:46(fn Regex::replacen) ... NOT COVERED
1598: stmt_call, remove `new . extend_from_slice (& text [last_match ..]) ;`, at src/re_bytes.rs@513:8-513:50(fn Regex::replacen) ... NOT COVERED
1599: lit_int, replace `0` with `1`, at src/re_bytes.rs@542:37-542:38(fn Regex::shortest_match) ... NOT COVERED
1600: lit_int, replace `0` with `1`, at src/re_bytes.rs@601:42-601:43(fn Regex::captures_read) ... NOT COVERED
1601: lit_int, replace `0` with `1`, at src/re_bytes.rs@642:32-642:33(fn Regex::as_str) ... NOT COVERED
1602: binop_cmp, replace `>=` with `<`, at src/re_bytes.rs@729:29-729:31(fn Split < 'r, 't >::next) ... SURVIVED
1603: binop_cmp, replace `>=` with `<=`, at src/re_bytes.rs@729:29-729:31(fn Split < 'r, 't >::next) ... SURVIVED
1604: binop_cmp, replace `>=` with `>`, at src/re_bytes.rs@729:29-729:31(fn Split < 'r, 't >::next) ... killed (timeout)
1605: lit_int, replace `0` with `1`, at src/re_bytes.rs@761:21-761:22(fn SplitN < 'r, 't >::next) ... NOT COVERED
1606: binop_eq, replace `==` with `!=`, at src/re_bytes.rs@761:18-761:20(fn SplitN < 'r, 't >::next) ... NOT COVERED
1607: lit_int, replace `1` with `2`, at src/re_bytes.rs@764:18-764:19(fn SplitN < 'r, 't >::next) ... NOT COVERED
1608: lit_int, replace `1` with `0`, at src/re_bytes.rs@764:18-764:19(fn SplitN < 'r, 't >::next) ... NOT COVERED
1609: lit_int, replace `0` with `1`, at src/re_bytes.rs@765:21-765:22(fn SplitN < 'r, 't >::next) ... NOT COVERED
1610: binop_eq, replace `==` with `!=`, at src/re_bytes.rs@765:18-765:20(fn SplitN < 'r, 't >::next) ... NOT COVERED
1611: stmt_call, remove `s . push_str (& escape_byte (b)) ;`, at src/re_bytes.rs@953:16-953:43(fn CapturesDebug < 'c, 't >::escape_bytes) ... NOT COVERED
1612: stmt_call, remove `map . entry (& name, & m) ;`, at src/re_bytes.rs@973:16-973:36(fn CapturesDebug < 'c, 't >::fmt) ... NOT COVERED
1613: stmt_call, remove `map . entry (& slot, & m) ;`, at src/re_bytes.rs@975:16-975:36(fn CapturesDebug < 'c, 't >::fmt) ... NOT COVERED
1614: stmt_call, remove `caps . expand (* self, dst) ;`, at src/re_bytes.rs@1120:8-1120:31(fn & 'a [u8]::replace_append) ... NOT COVERED
1615: stmt_call, remove `dst . extend_from_slice ((* self) (caps) . as_ref ()) ;`, at src/re_bytes.rs@1137:8-1137:53(fn F::replace_append) ... NOT COVERED
1616: stmt_call, remove `dst . extend_from_slice (self . 0) ;`, at src/re_bytes.rs@1153:8-1153:37(fn NoExpand < 't >::replace_append) ... NOT COVERED
1617: lit_int, replace `0` with `1`, at src/lib.rs@1:0-1:0(fn RegexSet::is_match) ... NOT COVERED
1618: lit_int, replace `0` with `1`, at src/lib.rs@1:0-1:0(fn RegexSet::matches) ... NOT COVERED
1619: lit_int, replace `0` with `1`, at src/lib.rs@1:0-1:0(fn RegexSet::is_match) ... NOT COVERED
1620: lit_int, replace `0` with `1`, at src/lib.rs@1:0-1:0(fn RegexSet::matches) ... NOT COVERED
1621: lit_int, replace `2` with `3`, at src/re_trait.rs@20:26-20:27(fn Locations::pos) ... NOT COVERED
1622: lit_int, replace `2` with `1`, at src/re_trait.rs@20:26-20:27(fn Locations::pos) ... NOT COVERED
1623: binop_num, replace `*` with `/`, at src/re_trait.rs@20:24-20:25(fn Locations::pos) ... NOT COVERED
1624: lit_int, replace `2` with `3`, at src/re_trait.rs@20:33-20:34(fn Locations::pos) ... NOT COVERED
1625: lit_int, replace `2` with `1`, at src/re_trait.rs@20:33-20:34(fn Locations::pos) ... NOT COVERED
1626: binop_num, replace `*` with `/`, at src/re_trait.rs@20:31-20:32(fn Locations::pos) ... NOT COVERED
1627: lit_int, replace `1` with `2`, at src/re_trait.rs@20:37-20:38(fn Locations::pos) ... NOT COVERED
1628: lit_int, replace `1` with `0`, at src/re_trait.rs@20:37-20:38(fn Locations::pos) ... NOT COVERED
1629: binop_num, replace `+` with `-`, at src/re_trait.rs@20:35-20:36(fn Locations::pos) ... NOT COVERED
1630: lit_int, replace `0` with `1`, at src/re_trait.rs@31:34-31:35(fn Locations::iter) ... NOT COVERED
1631: lit_int, replace `2` with `3`, at src/re_trait.rs@39:23-39:24(fn Locations::len) ... NOT COVERED
1632: lit_int, replace `2` with `1`, at src/re_trait.rs@39:23-39:24(fn Locations::len) ... NOT COVERED
1633: binop_num, replace `/` with `*`, at src/re_trait.rs@39:21-39:22(fn Locations::len) ... NOT COVERED
1634: binop_cmp, replace `>=` with `<`, at src/re_trait.rs@63:20-63:22(fn SubCapturesPosIter < 'c >::next) ... NOT COVERED
1635: binop_cmp, replace `>=` with `<=`, at src/re_trait.rs@63:20-63:22(fn SubCapturesPosIter < 'c >::next) ... NOT COVERED
1636: binop_cmp, replace `>=` with `>`, at src/re_trait.rs@63:20-63:22(fn SubCapturesPosIter < 'c >::next) ... NOT COVERED
1637: lit_int, replace `1` with `2`, at src/re_trait.rs@70:20-70:21(fn SubCapturesPosIter < 'c >::next) ... NOT COVERED
1638: lit_int, replace `1` with `0`, at src/re_trait.rs@70:20-70:21(fn SubCapturesPosIter < 'c >::next) ... NOT COVERED
1639: binop_cmp, replace `>` with `<`, at src/re_trait.rs@182:25-182:26(fn Matches < 't, R >::next) ... SURVIVED
1640: binop_cmp, replace `>` with `<=`, at src/re_trait.rs@182:25-182:26(fn Matches < 't, R >::next) ... SURVIVED
1641: binop_cmp, replace `>` with `>=`, at src/re_trait.rs@182:25-182:26(fn Matches < 't, R >::next) ... SURVIVED
1642: binop_eq, replace `==` with `!=`, at src/re_trait.rs@189:13-189:15(fn Matches < 't, R >::next) ... SURVIVED
1643: binop_eq, replace `==` with `!=`, at src/re_trait.rs@196:23-196:25(fn Matches < 't, R >::next) ... NOT COVERED
1644: binop_cmp, replace `>` with `<`, at src/re_trait.rs@238:27-238:28(fn CaptureMatches < 't, R >::next) ... NOT COVERED
1645: binop_cmp, replace `>` with `<=`, at src/re_trait.rs@238:27-238:28(fn CaptureMatches < 't, R >::next) ... NOT COVERED
1646: binop_cmp, replace `>` with `>=`, at src/re_trait.rs@238:27-238:28(fn CaptureMatches < 't, R >::next) ... NOT COVERED
1647: binop_eq, replace `==` with `!=`, at src/re_trait.rs@250:13-250:15(fn CaptureMatches < 't, R >::next) ... NOT COVERED
1648: binop_eq, replace `==` with `!=`, at src/re_trait.rs@252:23-252:25(fn CaptureMatches < 't, R >::next) ... NOT COVERED
1649: lit_int, replace `0` with `1`, at src/re_unicode.rs@184:31-184:32(fn Regex::is_match) ... NOT COVERED
1650: lit_int, replace `0` with `1`, at src/re_unicode.rs@209:27-209:28(fn Regex::find) ... NOT COVERED
1651: lit_int, replace `0` with `1`, at src/re_unicode.rs@299:47-299:48(fn Regex::captures) ... NOT COVERED
1652: lit_int, replace `0` with `1`, at src/re_unicode.rs@357:52-357:53(fn Regex::split) ... killed
1653: lit_int, replace `1` with `2`, at src/re_unicode.rs@497:28-497:29(fn Regex::replace) ... NOT COVERED
1654: lit_int, replace `1` with `0`, at src/re_unicode.rs@497:28-497:29(fn Regex::replace) ... NOT COVERED
1655: lit_int, replace `0` with `1`, at src/re_unicode.rs@511:28-511:29(fn Regex::replace_all) ... NOT COVERED
1656: lit_int, replace `0` with `1`, at src/re_unicode.rs@541:33-541:34(fn Regex::replacen) ... NOT COVERED
1657: lit_int, replace `0` with `1`, at src/re_unicode.rs@543:27-543:28(fn Regex::replacen) ... NOT COVERED
1658: binop_cmp, replace `>` with `<`, at src/re_unicode.rs@543:25-543:26(fn Regex::replacen) ... NOT COVERED
1659: binop_cmp, replace `>` with `<=`, at src/re_unicode.rs@543:25-543:26(fn Regex::replacen) ... NOT COVERED
1660: binop_cmp, replace `>` with `>=`, at src/re_unicode.rs@543:25-543:26(fn Regex::replacen) ... NOT COVERED
1661: binop_cmp, replace `>=` with `<`, at src/re_unicode.rs@543:34-543:36(fn Regex::replacen) ... NOT COVERED
1662: binop_cmp, replace `>=` with `<=`, at src/re_unicode.rs@543:34-543:36(fn Regex::replacen) ... NOT COVERED
1663: binop_cmp, replace `>=` with `>`, at src/re_unicode.rs@543:34-543:36(fn Regex::replacen) ... NOT COVERED
1664: binop_bool, replace `&&` with `||`, at src/re_unicode.rs@543:29-543:31(fn Regex::replacen) ... NOT COVERED
1665: stmt_call, remove `new . push_str (& text [last_match .. m . start ()]) ;`, at src/re_unicode.rs@546:16-546:58(fn Regex::replacen) ... NOT COVERED
1666: stmt_call, remove `new . push_str (& rep) ;`, at src/re_unicode.rs@547:16-547:34(fn Regex::replacen) ... NOT COVERED
1667: stmt_call, remove `new . push_str (& text [last_match ..]) ;`, at src/re_unicode.rs@550:12-550:45(fn Regex::replacen) ... NOT COVERED
1668: lit_int, replace `0` with `1`, at src/re_unicode.rs@561:29-561:30(fn Regex::replacen) ... NOT COVERED
1669: lit_int, replace `0` with `1`, at src/re_unicode.rs@563:23-563:24(fn Regex::replacen) ... NOT COVERED
1670: binop_cmp, replace `>` with `<`, at src/re_unicode.rs@563:21-563:22(fn Regex::replacen) ... NOT COVERED
1671: binop_cmp, replace `>` with `<=`, at src/re_unicode.rs@563:21-563:22(fn Regex::replacen) ... NOT COVERED
1672: binop_cmp, replace `>` with `>=`, at src/re_unicode.rs@563:21-563:22(fn Regex::replacen) ... NOT COVERED
1673: binop_cmp, replace `>=` with `<`, at src/re_unicode.rs@563:30-563:32(fn Regex::replacen) ... NOT COVERED
1674: binop_cmp, replace `>=` with `<=`, at src/re_unicode.rs@563:30-563:32(fn Regex::replacen) ... NOT COVERED
1675: binop_cmp, replace `>=` with `>`, at src/re_unicode.rs@563:30-563:32(fn Regex::replacen) ... NOT COVERED
1676: binop_bool, replace `&&` with `||`, at src/re_unicode.rs@563:25-563:27(fn Regex::replacen) ... NOT COVERED
1677: lit_int, replace `0` with `1`, at src/re_unicode.rs@567:28-567:29(fn Regex::replacen) ... NOT COVERED
1678: stmt_call, remove `new . push_str (& text [last_match .. m . start ()]) ;`, at src/re_unicode.rs@568:12-568:54(fn Regex::replacen) ... NOT COVERED
1679: stmt_call, remove `rep . replace_append (& cap, & mut new) ;`, at src/re_unicode.rs@569:12-569:46(fn Regex::replacen) ... NOT COVERED
1680: stmt_call, remove `new . push_str (& text [last_match ..]) ;`, at src/re_unicode.rs@572:8-572:41(fn Regex::replacen) ... NOT COVERED
1681: lit_int, replace `0` with `1`, at src/re_unicode.rs@601:37-601:38(fn Regex::shortest_match) ... NOT COVERED
1682: lit_int, replace `0` with `1`, at src/re_unicode.rs@660:42-660:43(fn Regex::captures_read) ... NOT COVERED
1683: lit_int, replace `0` with `1`, at src/re_unicode.rs@701:32-701:33(fn Regex::as_str) ... NOT COVERED
1684: binop_cmp, replace `>=` with `<`, at src/re_unicode.rs@769:29-769:31(fn Split < 'r, 't >::next) ... SURVIVED
1685: binop_cmp, replace `>=` with `<=`, at src/re_unicode.rs@769:29-769:31(fn Split < 'r, 't >::next) ... SURVIVED
1686: binop_cmp, replace `>=` with `>`, at src/re_unicode.rs@769:29-769:31(fn Split < 'r, 't >::next) ... killed (timeout)
1687: lit_int, replace `0` with `1`, at src/re_unicode.rs@801:21-801:22(fn SplitN < 'r, 't >::next) ... NOT COVERED
1688: binop_eq, replace `==` with `!=`, at src/re_unicode.rs@801:18-801:20(fn SplitN < 'r, 't >::next) ... NOT COVERED
1689: lit_int, replace `1` with `2`, at src/re_unicode.rs@804:18-804:19(fn SplitN < 'r, 't >::next) ... NOT COVERED
1690: lit_int, replace `1` with `0`, at src/re_unicode.rs@804:18-804:19(fn SplitN < 'r, 't >::next) ... NOT COVERED
1691: lit_int, replace `0` with `1`, at src/re_unicode.rs@805:21-805:22(fn SplitN < 'r, 't >::next) ... NOT COVERED
1692: binop_eq, replace `==` with `!=`, at src/re_unicode.rs@805:18-805:20(fn SplitN < 'r, 't >::next) ... NOT COVERED
1693: stmt_call, remove `map . entry (& name, & m) ;`, at src/re_unicode.rs@975:16-975:36(fn CapturesDebug < 'c, 't >::fmt) ... NOT COVERED
1694: stmt_call, remove `map . entry (& slot, & m) ;`, at src/re_unicode.rs@977:16-977:36(fn CapturesDebug < 'c, 't >::fmt) ... NOT COVERED
1695: stmt_call, remove `caps . expand (* self, dst) ;`, at src/re_unicode.rs@1162:8-1162:31(fn & 'a str::replace_append) ... NOT COVERED
1696: stmt_call, remove `dst . push_str ((* self) (caps) . as_ref ()) ;`, at src/re_unicode.rs@1179:8-1179:44(fn F::replace_append) ... NOT COVERED
1697: stmt_call, remove `dst . push_str (self . 0) ;`, at src/re_unicode.rs@1195:8-1195:28(fn NoExpand < 't >::replace_append) ... NOT COVERED
1698: stmt_call, remove `self . dense . push (value) ;`, at src/sparse.rs@49:8-49:30(fn SparseSet::insert) ... NOT COVERED
1699: binop_eq, replace `==` with `!=`, at src/sparse.rs@55:26-55:28(fn SparseSet::contains) ... NOT COVERED
1700: stmt_call, remove `self . dense . clear () ;`, at src/sparse.rs@59:8-59:26(fn SparseSet::clear) ... NOT COVERED
1701: lit_int, replace `192` with `193`, at src/utf8.rs@143:8-143:19(fn is_start_byte) ... killed
1702: lit_int, replace `192` with `191`, at src/utf8.rs@143:8-143:19(fn is_start_byte) ... killed
1703: binop_bit, replace `&` with `|`, at src/utf8.rs@143:6-143:7(fn is_start_byte) ... killed
1704: binop_bit, replace `&` with `^`, at src/utf8.rs@143:6-143:7(fn is_start_byte) ... killed
1705: lit_int, replace `128` with `129`, at src/utf8.rs@143:23-143:34(fn is_start_byte) ... killed
1706: lit_int, replace `128` with `127`, at src/utf8.rs@143:23-143:34(fn is_start_byte) ... killed
1707: binop_eq, replace `!=` with `==`, at src/utf8.rs@143:20-143:22(fn is_start_byte) ... killed
SURVIVED
    src/backtrack.rs
            53/81(65.43%) mutants survived
        1: remove `self . m . jobs . clear () ;` at 110:8-110:27(fn Bounded < 'a, 'm, 'r, 's, I >::clear)
        2: replace `1` with `2` at 123:51-123:52(fn Bounded < 'a, 'm, 'r, 's, I >::clear)
        3: replace `1` with `0` at 123:51-123:52(fn Bounded < 'a, 'm, 'r, 's, I >::clear)
        4: replace `+` with `-` at 123:49-123:50(fn Bounded < 'a, 'm, 'r, 's, I >::clear)
        5: replace `*` with `/` at 123:29-123:30(fn Bounded < 'a, 'm, 'r, 's, I >::clear)
        7: replace `1` with `2` at 123:67-123:68(fn Bounded < 'a, 'm, 'r, 's, I >::clear)
        8: replace `1` with `0` at 123:67-123:68(fn Bounded < 'a, 'm, 'r, 's, I >::clear)
        9: replace `-` with `+` at 123:65-123:66(fn Bounded < 'a, 'm, 'r, 's, I >::clear)
        10: replace `/` with `*` at 124:16-124:17(fn Bounded < 'a, 'm, 'r, 's, I >::clear)
        11: remove `self . m . visited . truncate (visited_len) ;` at 125:8-125:44(fn Bounded < 'a, 'm, 'r, 's, I >::clear)
        12: replace `0` with `1` at 127:17-127:18(fn Bounded < 'a, 'm, 'r, 's, I >::clear)
        15: replace `>` with `>=` at 129:23-129:24(fn Bounded < 'a, 'm, 'r, 's, I >::clear)
        16: replace `-` with `+` at 131:53-131:54(fn Bounded < 'a, 'm, 'r, 's, I >::clear)
        17: remove `self . m . visited . reserve_exact (visited_len - len) ;` at 131:12-131:59(fn Bounded < 'a, 'm, 'r, 's, I >::clear)
        19: replace `-` with `+` at 132:37-132:38(fn Bounded < 'a, 'm, 'r, 's, I >::clear)
        24: replace `false` with `true` at 145:39-145:44(fn Bounded < 'a, 'm, 'r, 's, I >::exec_)
        25: replace `false` with `true` at 147:26-147:31(fn Bounded < 'a, 'm, 'r, 's, I >::exec_) NOT COVERED
        26: remove `!` at 149:15-149:16(fn Bounded < 'a, 'm, 'r, 's, I >::exec_) NOT COVERED
        27: replace `||` with `&&` at 155:41-155:43(fn Bounded < 'a, 'm, 'r, 's, I >::exec_) NOT COVERED
        28: replace `1` with `2` at 156:53-156:54(fn Bounded < 'a, 'm, 'r, 's, I >::exec_) NOT COVERED
        29: replace `1` with `0` at 156:53-156:54(fn Bounded < 'a, 'm, 'r, 's, I >::exec_) NOT COVERED
        30: replace `==` with `!=` at 156:50-156:52(fn Bounded < 'a, 'm, 'r, 's, I >::exec_) NOT COVERED
        31: replace `&&` with `||` at 156:23-156:25(fn Bounded < 'a, 'm, 'r, 's, I >::exec_) NOT COVERED
        32: replace `true` with `false` at 157:23-157:27(fn Bounded < 'a, 'm, 'r, 's, I >::exec_) NOT COVERED
        33: replace `>=` with `<` at 159:24-159:26(fn Bounded < 'a, 'm, 'r, 's, I >::exec_) NOT COVERED
        34: replace `>=` with `<=` at 159:24-159:26(fn Bounded < 'a, 'm, 'r, 's, I >::exec_) NOT COVERED
        35: replace `>=` with `>` at 159:24-159:26(fn Bounded < 'a, 'm, 'r, 's, I >::exec_) NOT COVERED
        36: replace `false` with `true` at 173:26-173:31(fn Bounded < 'a, 'm, 'r, 's, I >::backtrack)
        43: replace `true` with `false` at 185:34-185:38(fn Bounded < 'a, 'm, 'r, 's, I >::backtrack) NOT COVERED
        44: replace `<` with `<=` at 189:28-189:29(fn Bounded < 'a, 'm, 'r, 's, I >::backtrack) NOT COVERED
        45: replace `<` with `>=` at 189:28-189:29(fn Bounded < 'a, 'm, 'r, 's, I >::backtrack) NOT COVERED
        46: replace `<` with `>` at 189:28-189:29(fn Bounded < 'a, 'm, 'r, 's, I >::backtrack) NOT COVERED
        47: replace `false` with `true` at 206:23-206:28(fn Bounded < 'a, 'm, 'r, 's, I >::step) NOT COVERED
        48: replace `<` with `<=` at 210:28-210:29(fn Bounded < 'a, 'm, 'r, 's, I >::step)
        49: replace `<` with `>=` at 210:28-210:29(fn Bounded < 'a, 'm, 'r, 's, I >::step)
        50: replace `<` with `>` at 210:28-210:29(fn Bounded < 'a, 'm, 'r, 's, I >::step)
        51: replace `true` with `false` at 211:45-211:49(fn Bounded < 'a, 'm, 'r, 's, I >::step)
        53: remove `self . m . jobs . push (Job :: SaveRestore { slot : inst . slot, old_pos : old_pos, }) ;` at 221:24-224:26(fn Bounded < 'a, 'm, 'r, 's, I >::step)
        54: remove `self . m . jobs . push (Job :: Inst { ip : inst . goto2, at : at }) ;` at 230:20-230:74(fn Bounded < 'a, 'm, 'r, 's, I >::step) NOT COVERED
        55: replace `false` with `true` at 237:31-237:36(fn Bounded < 'a, 'm, 'r, 's, I >::step) NOT COVERED
        57: replace `false` with `true` at 245:31-245:36(fn Bounded < 'a, 'm, 'r, 's, I >::step) NOT COVERED
        58: replace `false` with `true` at 253:31-253:36(fn Bounded < 'a, 'm, 'r, 's, I >::step) NOT COVERED
        59: replace `false` with `true` at 264:27-264:32(fn Bounded < 'a, 'm, 'r, 's, I >::step) NOT COVERED
        60: replace `1` with `2` at 271:41-271:42(fn Bounded < 'a, 'm, 'r, 's, I >::has_visited)
        61: replace `1` with `0` at 271:41-271:42(fn Bounded < 'a, 'm, 'r, 's, I >::has_visited)
        62: replace `+` with `-` at 271:39-271:40(fn Bounded < 'a, 'm, 'r, 's, I >::has_visited)
        64: replace `+` with `-` at 271:44-271:45(fn Bounded < 'a, 'm, 'r, 's, I >::has_visited)
        66: replace `1` with `2` at 273:30-273:31(fn Bounded < 'a, 'm, 'r, 's, I >::has_visited)
        67: replace `1` with `0` at 273:30-273:31(fn Bounded < 'a, 'm, 'r, 's, I >::has_visited)
        68: replace `1` with `2` at 273:52-273:53(fn Bounded < 'a, 'm, 'r, 's, I >::has_visited)
        72: replace `&` with `^` at 273:38-273:39(fn Bounded < 'a, 'm, 'r, 's, I >::has_visited)
        78: replace `true` with `false` at 278:12-278:16(fn Bounded < 'a, 'm, 'r, 's, I >::has_visited) NOT COVERED
        81: replace `>` with `>=` at 284:18-284:19(fn usize_to_u32)
    src/compile.rs
            164/222(73.87%) mutants survived
        82: replace `0` with `1` at 47:23-47:24(fn Compiler::new)
        83: replace `10` with `11` at 48:24-48:26(fn Compiler::new)
        84: replace `10` with `9` at 48:24-48:26(fn Compiler::new)
        85: replace `1` with `2` at 48:30-48:31(fn Compiler::new)
        86: replace `1` with `0` at 48:30-48:31(fn Compiler::new)
        87: replace `20` with `21` at 48:35-48:37(fn Compiler::new)
        88: replace `20` with `19` at 48:35-48:37(fn Compiler::new)
        89: replace `*` with `/` at 48:27-48:28(fn Compiler::new)
        90: replace `1000` with `1001` at 49:43-49:47(fn Compiler::new)
        91: replace `1000` with `999` at 49:43-49:47(fn Compiler::new)
        96: replace `0` with `1` at 127:65-127:66(fn Compiler::compile_one)
        98: remove `self . fill (dotstar_patch . hole, patch . entry) ;` at 137:12-137:54(fn Compiler::compile_one) NOT COVERED
        100: replace `0` with `1` at 143:39-143:40(fn Compiler::compile_one)
        102: replace `0` with `1` at 157:65-157:66(fn Compiler::compile_many) NOT COVERED
        103: replace `0` with `1` at 162:34-162:35(fn Compiler::compile_many) NOT COVERED
        104: remove `self . fill_to_next (dotstar_patch . hole) ;` at 164:8-164:45(fn Compiler::compile_many) NOT COVERED
        105: replace `0` with `1` at 167:31-167:32(fn Compiler::compile_many) NOT COVERED
        106: replace `1` with `2` at 167:48-167:49(fn Compiler::compile_many) NOT COVERED
        107: replace `1` with `0` at 167:48-167:49(fn Compiler::compile_many) NOT COVERED
        108: replace `-` with `+` at 167:46-167:47(fn Compiler::compile_many) NOT COVERED
        109: remove `self . fill_to_next (prev_hole) ;` at 168:12-168:40(fn Compiler::compile_many) NOT COVERED
        110: replace `0` with `1` at 170:55-170:56(fn Compiler::compile_many) NOT COVERED
        111: remove `self . fill_to_next (hole) ;` at 171:12-171:35(fn Compiler::compile_many) NOT COVERED
        112: remove `self . compiled . matches . push (self . insts . len ()) ;` at 172:12-172:56(fn Compiler::compile_many) NOT COVERED
        113: remove `self . push_compiled (Inst :: Match (i)) ;` at 173:12-173:46(fn Compiler::compile_many) NOT COVERED
        114: replace `1` with `2` at 176:30-176:31(fn Compiler::compile_many) NOT COVERED
        115: replace `1` with `0` at 176:30-176:31(fn Compiler::compile_many) NOT COVERED
        116: replace `-` with `+` at 176:28-176:29(fn Compiler::compile_many) NOT COVERED
        117: replace `0` with `1` at 177:51-177:52(fn Compiler::compile_many) NOT COVERED
        118: remove `self . fill (prev_hole, entry) ;` at 178:8-178:35(fn Compiler::compile_many) NOT COVERED
        119: remove `self . fill_to_next (hole) ;` at 179:8-179:31(fn Compiler::compile_many) NOT COVERED
        120: remove `self . compiled . matches . push (self . insts . len ()) ;` at 180:8-180:52(fn Compiler::compile_many) NOT COVERED
        121: remove `self . push_compiled (Inst :: Match (i)) ;` at 181:8-181:42(fn Compiler::compile_many) NOT COVERED
        122: remove `char_ranges . push (hir :: ClassUnicodeRange :: new (s, e)) ;` at 266:24-266:75(fn Compiler::c) NOT COVERED
        123: remove `self . byte_classes . set_range (b'\n', b'\n') ;` at 272:16-272:57(fn Compiler::c) NOT COVERED
        124: remove `self . byte_classes . set_range (b'\n', b'\n') ;` at 276:16-276:57(fn Compiler::c) NOT COVERED
        125: remove `self . byte_classes . set_range (b'\n', b'\n') ;` at 280:16-280:57(fn Compiler::c) NOT COVERED
        126: remove `self . byte_classes . set_range (b'\n', b'\n') ;` at 284:16-284:57(fn Compiler::c) NOT COVERED
        127: remove `!` at 300:19-300:20(fn Compiler::c) NOT COVERED
        128: replace `true` with `false` at 307:58-307:62(fn Compiler::c) NOT COVERED
        129: remove `self . byte_classes . set_word_boundary () ;` at 308:16-308:53(fn Compiler::c) NOT COVERED
        130: remove `!` at 312:19-312:20(fn Compiler::c) NOT COVERED
        131: replace `true` with `false` at 319:58-319:62(fn Compiler::c) NOT COVERED
        132: remove `self . byte_classes . set_word_boundary () ;` at 320:16-320:53(fn Compiler::c) NOT COVERED
        133: remove `self . byte_classes . set_word_boundary () ;` at 324:16-324:53(fn Compiler::c) NOT COVERED
        134: remove `self . byte_classes . set_word_boundary () ;` at 328:16-328:53(fn Compiler::c) NOT COVERED
        135: replace `>=` with `<` at 334:38-334:40(fn Compiler::c) NOT COVERED
        136: replace `>=` with `<=` at 334:38-334:40(fn Compiler::c) NOT COVERED
        137: replace `>=` with `>` at 334:38-334:40(fn Compiler::c) NOT COVERED
        138: remove `self . compiled . captures . push (None) ;` at 335:24-335:57(fn Compiler::c) NOT COVERED
        139: replace `2` with `3` at 337:35-337:36(fn Compiler::c) NOT COVERED
        140: replace `2` with `1` at 337:35-337:36(fn Compiler::c) NOT COVERED
        141: replace `*` with `/` at 337:37-337:38(fn Compiler::c) NOT COVERED
        142: replace `>=` with `<` at 340:38-340:40(fn Compiler::c) NOT COVERED
        143: replace `>=` with `<=` at 340:38-340:40(fn Compiler::c) NOT COVERED
        144: replace `>=` with `>` at 340:38-340:40(fn Compiler::c) NOT COVERED
        145: remove `self . compiled . captures . push (Some (n . clone ())) ;` at 342:24-342:68(fn Compiler::c) NOT COVERED
        146: remove `self . capture_name_idx . insert (n, index as usize) ;` at 343:24-343:71(fn Compiler::c) NOT COVERED
        147: replace `2` with `3` at 345:35-345:36(fn Compiler::c) NOT COVERED
        148: replace `2` with `1` at 345:35-345:36(fn Compiler::c) NOT COVERED
        149: replace `*` with `/` at 345:37-345:38(fn Compiler::c) NOT COVERED
        150: replace `1` with `2` at 361:28-361:29(fn Compiler::c_capture)
        152: replace `>` with `<` at 361:26-361:27(fn Compiler::c_capture)
        155: replace `||` with `&&` at 361:30-361:32(fn Compiler::c_capture)
        161: remove `!` at 378:14-378:15(fn Compiler::c_dotstar) NOT COVERED
        162: replace `false` with `true` at 381:24-381:29(fn Compiler::c_dotstar) NOT COVERED
        163: replace `true` with `false` at 382:39-382:43(fn Compiler::c_dotstar) NOT COVERED
        164: replace `false` with `true` at 387:24-387:29(fn Compiler::c_dotstar) NOT COVERED
        165: replace `false` with `true` at 388:39-388:44(fn Compiler::c_dotstar) NOT COVERED
        166: replace `1` with `2` at 404:42-404:43(fn Compiler::c_class)
        167: replace `1` with `0` at 404:42-404:43(fn Compiler::c_class)
        168: replace `==` with `!=` at 404:39-404:41(fn Compiler::c_class)
        171: replace `==` with `!=` at 404:59-404:61(fn Compiler::c_class)
        172: replace `&&` with `||` at 404:44-404:46(fn Compiler::c_class)
        177: replace `0` with `1` at 423:25-423:26(fn Compiler::c_class_bytes) NOT COVERED
        178: replace `1` with `2` at 423:43-423:44(fn Compiler::c_class_bytes) NOT COVERED
        179: replace `1` with `0` at 423:43-423:44(fn Compiler::c_class_bytes) NOT COVERED
        180: replace `-` with `+` at 423:41-423:42(fn Compiler::c_class_bytes) NOT COVERED
        181: remove `self . fill_to_next (prev_hole) ;` at 424:12-424:40(fn Compiler::c_class_bytes) NOT COVERED
        182: remove `self . byte_classes . set_range (r . start (), r . end ()) ;` at 427:12-427:59(fn Compiler::c_class_bytes) NOT COVERED
        183: remove `holes . push (self . push_hole  (InstHole :: Bytes { start : r . start (), end : r . end (), })) ;` at 428:12-431:15(fn Compiler::c_class_bytes) NOT COVERED
        184: replace `1` with `2` at 435:39-435:40(fn Compiler::c_class_bytes) NOT COVERED
        185: replace `1` with `0` at 435:39-435:40(fn Compiler::c_class_bytes) NOT COVERED
        186: replace `-` with `+` at 435:37-435:38(fn Compiler::c_class_bytes) NOT COVERED
        187: remove `self . byte_classes . set_range (r . start (), r . end ()) ;` at 436:8-436:55(fn Compiler::c_class_bytes) NOT COVERED
        188: remove `holes . push (self . push_hole  (InstHole :: Bytes { start : r . start (), end : r . end () }),) ;` at 437:8-439:9(fn Compiler::c_class_bytes) NOT COVERED
        189: remove `self . fill (prev_hole, next) ;` at 440:8-440:34(fn Compiler::c_class_bytes) NOT COVERED
        191: replace `1` with `0` at 446:57-446:58(fn Compiler::c_empty_look)
        194: replace `0` with `1` at 483:24-483:25(fn Compiler::c_alternate) NOT COVERED
        195: replace `1` with `2` at 483:41-483:42(fn Compiler::c_alternate) NOT COVERED
        196: replace `1` with `0` at 483:41-483:42(fn Compiler::c_alternate) NOT COVERED
        197: replace `-` with `+` at 483:39-483:40(fn Compiler::c_alternate) NOT COVERED
        198: remove `self . fill_to_next (prev_hole) ;` at 484:12-484:40(fn Compiler::c_alternate) NOT COVERED
        199: replace `==` with `!=` at 488:26-488:28(fn Compiler::c_alternate) NOT COVERED
        200: remove `holes . push (hole) ;` at 500:12-500:28(fn Compiler::c_alternate) NOT COVERED
        201: replace `1` with `2` at 504:64-504:65(fn Compiler::c_alternate) NOT COVERED
        202: replace `1` with `0` at 504:64-504:65(fn Compiler::c_alternate) NOT COVERED
        203: replace `-` with `+` at 504:62-504:63(fn Compiler::c_alternate) NOT COVERED
        204: replace `==` with `!=` at 505:22-505:24(fn Compiler::c_alternate) NOT COVERED
        205: remove `holes . push (hole) ;` at 513:8-513:24(fn Compiler::c_alternate) NOT COVERED
        206: remove `self . fill (prev_hole, entry) ;` at 514:8-514:35(fn Compiler::c_alternate) NOT COVERED
        207: remove `self . fill (hole_rep, split_entry) ;` at 555:8-555:40(fn Compiler::c_repeat_zero_or_more) NOT COVERED
        208: remove `self . fill_to_next (hole_rep) ;` at 566:8-566:35(fn Compiler::c_repeat_one_or_more) NOT COVERED
        209: remove `self . fill (patch_concat . hole, patch_rep . entry) ;` at 586:8-586:53(fn Compiler::c_repeat_range_min_or_more) NOT COVERED
        210: replace `==` with `!=` at 600:15-600:17(fn Compiler::c_repeat_range) NOT COVERED
        211: remove `self . fill_to_next (prev_hole) ;` at 625:12-625:40(fn Compiler::c_repeat_range) NOT COVERED
        212: remove `holes . push (self . fill_split (split, Some (entry), None)) ;` at 630:16-630:69(fn Compiler::c_repeat_range) NOT COVERED
        213: remove `holes . push (self . fill_split (split, None, Some (entry))) ;` at 632:16-632:69(fn Compiler::c_repeat_range) NOT COVERED
        214: remove `holes . push (prev_hole) ;` at 635:8-635:29(fn Compiler::c_repeat_range) NOT COVERED
        218: remove `self . insts [pc] . fill_split (goto1, goto2) ;` at 668:20-668:59(fn Compiler::fill_split) NOT COVERED
        219: remove `self . insts [pc] . half_fill_split_goto1 (goto1) ;` at 672:20-672:63(fn Compiler::fill_split) NOT COVERED
        220: remove `self . insts [pc] . half_fill_split_goto2 (goto2) ;` at 676:20-676:63(fn Compiler::fill_split) NOT COVERED
        221: remove `new_holes . push (self . fill_split (hole, goto1, goto2)) ;` at 687:20-687:71(fn Compiler::fill_split) NOT COVERED
        222: replace `1` with `2` at 691:45-691:46(fn Compiler::fill_split) NOT COVERED
        223: replace `1` with `0` at 691:45-691:46(fn Compiler::fill_split) NOT COVERED
        224: replace `==` with `!=` at 691:42-691:44(fn Compiler::fill_split) NOT COVERED
        227: remove `self . insts . push (MaybeInst :: Split) ;` at 712:8-712:41(fn Compiler::push_split_hole) NOT COVERED
        228: replace `*` with `/` at 719:28-719:29(fn Compiler::check_size)
        231: replace `>` with `>=` at 719:48-719:49(fn Compiler::check_size)
        232: remove `self . c . suffix_cache . clear () ;` at 852:8-852:35(fn CompileClass < 'a, 'b >::compile)
        238: replace `&&` with `||` at 863:33-863:35(fn CompileClass < 'a, 'b >::compile)
        240: remove `self . c . fill (last_split, entry) ;` at 866:20-866:50(fn CompileClass < 'a, 'b >::compile)
        241: remove `self . c . fill_to_next (last_split) ;` at 875:20-875:51(fn CompileClass < 'a, 'b >::compile) NOT COVERED
        242: remove `holes . push (hole) ;` at 878:20-878:36(fn CompileClass < 'a, 'b >::compile) NOT COVERED
        243: remove `self . c . byte_classes . set_range (byte_range . start, byte_range . end) ;` at 916:12-916:75(fn CompileClass < 'a, 'b >::c_utf8_seq_)
        245: remove `self . c . push_compiled (Inst :: Bytes  (InstBytes   { goto : from_inst, start : byte_range . start, end : byte_range . end, })) ;` at 923:16-927:19(fn CompileClass < 'a, 'b >::c_utf8_seq_) NOT COVERED
        248: replace `==` with `!=` at 989:25-989:27(fn SuffixCache::get) NOT COVERED
        249: remove `self . dense . push (SuffixCacheEntry { key : key, pc : pc }) ;` at 994:8-994:62(fn SuffixCache::get)
        250: remove `self . dense . clear () ;` at 999:8-999:26(fn SuffixCache::clear)
        251: replace `14695981039346656037` with `14695981039346656038` at 1006:20-1006:40(fn SuffixCache::hash)
        252: replace `14695981039346656037` with `14695981039346656036` at 1006:20-1006:40(fn SuffixCache::hash)
        253: replace `^` with `&` at 1007:15-1007:16(fn SuffixCache::hash)
        254: replace `^` with `|` at 1007:15-1007:16(fn SuffixCache::hash)
        255: replace `^` with `&` at 1008:15-1008:16(fn SuffixCache::hash)
        256: replace `^` with `|` at 1008:15-1008:16(fn SuffixCache::hash)
        257: replace `^` with `&` at 1009:15-1009:16(fn SuffixCache::hash)
        258: replace `^` with `|` at 1009:15-1009:16(fn SuffixCache::hash)
        259: replace `0` with `1` at 1023:19-1023:20(fn ByteClassSet::set_range)
        268: replace `0` with `1` at 1033:26-1033:27(fn ByteClassSet::set_word_boundary) NOT COVERED
        269: replace `255` with `256` at 1035:20-1035:23(fn ByteClassSet::set_word_boundary) NOT COVERED
        270: replace `255` with `254` at 1035:20-1035:23(fn ByteClassSet::set_word_boundary) NOT COVERED
        271: replace `<=` with `<` at 1035:17-1035:19(fn ByteClassSet::set_word_boundary) NOT COVERED
        272: replace `<=` with `>=` at 1035:17-1035:19(fn ByteClassSet::set_word_boundary) NOT COVERED
        273: replace `<=` with `>` at 1035:17-1035:19(fn ByteClassSet::set_word_boundary) NOT COVERED
        274: replace `1` with `2` at 1036:22-1036:23(fn ByteClassSet::set_word_boundary) NOT COVERED
        275: replace `1` with `0` at 1036:22-1036:23(fn ByteClassSet::set_word_boundary) NOT COVERED
        276: replace `+` with `-` at 1036:20-1036:21(fn ByteClassSet::set_word_boundary) NOT COVERED
        277: replace `255` with `256` at 1037:24-1037:27(fn ByteClassSet::set_word_boundary) NOT COVERED
        278: replace `255` with `254` at 1037:24-1037:27(fn ByteClassSet::set_word_boundary) NOT COVERED
        279: replace `<=` with `<` at 1037:21-1037:23(fn ByteClassSet::set_word_boundary) NOT COVERED
        280: replace `<=` with `>=` at 1037:21-1037:23(fn ByteClassSet::set_word_boundary) NOT COVERED
        281: replace `<=` with `>` at 1037:21-1037:23(fn ByteClassSet::set_word_boundary) NOT COVERED
        282: replace `==` with `!=` at 1037:46-1037:48(fn ByteClassSet::set_word_boundary) NOT COVERED
        283: replace `&&` with `||` at 1037:28-1037:30(fn ByteClassSet::set_word_boundary) NOT COVERED
        284: replace `1` with `2` at 1038:22-1038:23(fn ByteClassSet::set_word_boundary) NOT COVERED
        285: replace `1` with `0` at 1038:22-1038:23(fn ByteClassSet::set_word_boundary) NOT COVERED
        286: replace `1` with `2` at 1040:43-1040:44(fn ByteClassSet::set_word_boundary) NOT COVERED
        287: replace `1` with `0` at 1040:43-1040:44(fn ByteClassSet::set_word_boundary) NOT COVERED
        288: replace `-` with `+` at 1040:41-1040:42(fn ByteClassSet::set_word_boundary) NOT COVERED
        289: remove `self . set_range (b1 as u8, (b2 - 1) as u8) ;` at 1040:12-1040:52(fn ByteClassSet::set_word_boundary) NOT COVERED
        291: replace `0` with `1` at 1052:20-1052:21(fn ByteClassSet::byte_classes)
        301: replace `>` with `<` at 1071:18-1071:19(fn u32_to_usize) NOT COVERED
        302: replace `>` with `<=` at 1071:18-1071:19(fn u32_to_usize) NOT COVERED
        303: replace `>` with `>=` at 1071:18-1071:19(fn u32_to_usize) NOT COVERED
    src/dfa.rs
            513/566(90.64%) mutants survived
        304: replace `true` with `false` at 219:32-219:36(fn Result < T >::is_match) NOT COVERED
        305: replace `false` with `true` at 220:49-220:54(fn Result < T >::is_match) NOT COVERED
        314: replace `255` with `254` at 416:50-416:53(fn Cache::new)
        315: replace `1` with `2` at 416:66-416:67(fn Cache::new)
        316: replace `1` with `0` at 416:66-416:67(fn Cache::new)
        317: replace `+` with `-` at 416:64-416:65(fn Cache::new)
        318: replace `1` with `2` at 416:71-416:72(fn Cache::new)
        319: replace `1` with `0` at 416:71-416:72(fn Cache::new)
        320: replace `+` with `-` at 416:69-416:70(fn Cache::new)
        321: replace `0` with `1` at 424:29-424:30(fn Cache::new)
        322: replace `0` with `1` at 425:22-425:23(fn Cache::new)
        323: remove `cache . inner . reset_size () ;` at 431:8-431:32(fn Cache::new)
        324: replace `*` with `/` at 440:45-440:46(fn CacheInner::reset_size)
        325: replace `*` with `/` at 441:32-441:33(fn CacheInner::reset_size)
        326: replace `+` with `-` at 441:12-441:13(fn CacheInner::reset_size)
        327: replace `0` with `1` at 458:19-458:20(fn Fsm < 'a >::forward) NOT COVERED
        328: replace `0` with `1` at 488:19-488:20(fn Fsm < 'a >::reverse) NOT COVERED
        329: replace `0` with `1` at 519:19-519:20(fn Fsm < 'a >::forward_many) NOT COVERED
        330: replace `false` with `true` at 521:30-521:35(fn Fsm < 'a >::forward_many) NOT COVERED
        331: replace `1` with `2` at 536:32-536:33(fn Fsm < 'a >::forward_many) NOT COVERED
        332: replace `1` with `0` at 536:32-536:33(fn Fsm < 'a >::forward_many) NOT COVERED
        333: replace `==` with `!=` at 536:29-536:31(fn Fsm < 'a >::forward_many) NOT COVERED
        334: replace `0` with `1` at 537:24-537:25(fn Fsm < 'a >::forward_many) NOT COVERED
        335: replace `true` with `false` at 537:29-537:33(fn Fsm < 'a >::forward_many) NOT COVERED
        336: replace `true` with `false` at 543:40-543:44(fn Fsm < 'a >::forward_many) NOT COVERED
        337: replace `<` with `<=` at 602:17-602:18(fn Fsm < 'a >::exec_at) NOT COVERED
        338: replace `<` with `>=` at 602:17-602:18(fn Fsm < 'a >::exec_at) NOT COVERED
        339: replace `<` with `>` at 602:17-602:18(fn Fsm < 'a >::exec_at) NOT COVERED
        340: replace `<=` with `<` at 615:26-615:28(fn Fsm < 'a >::exec_at) NOT COVERED
        341: replace `<=` with `>=` at 615:26-615:28(fn Fsm < 'a >::exec_at) NOT COVERED
        342: replace `<=` with `>` at 615:26-615:28(fn Fsm < 'a >::exec_at) NOT COVERED
        343: replace `<` with `<=` at 615:45-615:46(fn Fsm < 'a >::exec_at) NOT COVERED
        344: replace `<` with `>=` at 615:45-615:46(fn Fsm < 'a >::exec_at) NOT COVERED
        345: replace `<` with `>` at 615:45-615:46(fn Fsm < 'a >::exec_at) NOT COVERED
        346: replace `&&` with `||` at 615:39-615:41(fn Fsm < 'a >::exec_at) NOT COVERED
        347: replace `1` with `2` at 618:22-618:23(fn Fsm < 'a >::exec_at) NOT COVERED
        348: replace `1` with `0` at 618:22-618:23(fn Fsm < 'a >::exec_at) NOT COVERED
        349: replace `>` with `<` at 619:27-619:28(fn Fsm < 'a >::exec_at) NOT COVERED
        350: replace `>` with `<=` at 619:27-619:28(fn Fsm < 'a >::exec_at) NOT COVERED
        351: replace `>` with `>=` at 619:27-619:28(fn Fsm < 'a >::exec_at) NOT COVERED
        352: replace `2` with `3` at 619:47-619:48(fn Fsm < 'a >::exec_at) NOT COVERED
        353: replace `2` with `1` at 619:47-619:48(fn Fsm < 'a >::exec_at) NOT COVERED
        354: replace `+` with `-` at 619:45-619:46(fn Fsm < 'a >::exec_at) NOT COVERED
        355: replace `>=` with `<` at 619:49-619:51(fn Fsm < 'a >::exec_at) NOT COVERED
        356: replace `>=` with `<=` at 619:49-619:51(fn Fsm < 'a >::exec_at) NOT COVERED
        357: replace `>=` with `>` at 619:49-619:51(fn Fsm < 'a >::exec_at) NOT COVERED
        358: replace `||` with `&&` at 619:39-619:41(fn Fsm < 'a >::exec_at) NOT COVERED
        359: remove `mem :: swap (& mut prev_si, & mut next_si) ;` at 620:20-620:57(fn Fsm < 'a >::exec_at) NOT COVERED
        360: replace `1` with `2` at 624:22-624:23(fn Fsm < 'a >::exec_at) NOT COVERED
        361: replace `1` with `0` at 624:22-624:23(fn Fsm < 'a >::exec_at) NOT COVERED
        362: replace `>` with `<` at 625:27-625:28(fn Fsm < 'a >::exec_at) NOT COVERED
        363: replace `>` with `<=` at 625:27-625:28(fn Fsm < 'a >::exec_at) NOT COVERED
        364: replace `>` with `>=` at 625:27-625:28(fn Fsm < 'a >::exec_at) NOT COVERED
        365: replace `1` with `2` at 629:22-629:23(fn Fsm < 'a >::exec_at) NOT COVERED
        366: replace `1` with `0` at 629:22-629:23(fn Fsm < 'a >::exec_at) NOT COVERED
        367: replace `>` with `<` at 630:27-630:28(fn Fsm < 'a >::exec_at) NOT COVERED
        368: replace `>` with `<=` at 630:27-630:28(fn Fsm < 'a >::exec_at) NOT COVERED
        369: replace `>` with `>=` at 630:27-630:28(fn Fsm < 'a >::exec_at) NOT COVERED
        370: remove `mem :: swap (& mut prev_si, & mut next_si) ;` at 631:20-631:57(fn Fsm < 'a >::exec_at) NOT COVERED
        371: replace `1` with `2` at 635:22-635:23(fn Fsm < 'a >::exec_at) NOT COVERED
        372: replace `1` with `0` at 635:22-635:23(fn Fsm < 'a >::exec_at) NOT COVERED
        373: replace `&` with `|` at 637:23-637:24(fn Fsm < 'a >::exec_at) NOT COVERED
        374: replace `&` with `^` at 637:23-637:24(fn Fsm < 'a >::exec_at) NOT COVERED
        375: replace `0` with `1` at 637:39-637:40(fn Fsm < 'a >::exec_at) NOT COVERED
        376: replace `>` with `<` at 637:37-637:38(fn Fsm < 'a >::exec_at) NOT COVERED
        377: replace `>` with `<=` at 637:37-637:38(fn Fsm < 'a >::exec_at) NOT COVERED
        378: replace `>` with `>=` at 637:37-637:38(fn Fsm < 'a >::exec_at) NOT COVERED
        379: remove `!` at 642:27-642:28(fn Fsm < 'a >::exec_at) NOT COVERED
        380: replace `1` with `2` at 643:44-643:45(fn Fsm < 'a >::exec_at) NOT COVERED
        381: replace `1` with `0` at 643:44-643:45(fn Fsm < 'a >::exec_at) NOT COVERED
        382: replace `-` with `+` at 643:42-643:43(fn Fsm < 'a >::exec_at) NOT COVERED
        383: replace `1` with `2` at 654:45-654:46(fn Fsm < 'a >::exec_at) NOT COVERED
        384: replace `1` with `0` at 654:45-654:46(fn Fsm < 'a >::exec_at) NOT COVERED
        385: replace `>` with `<` at 654:43-654:44(fn Fsm < 'a >::exec_at) NOT COVERED
        386: replace `>` with `<=` at 654:43-654:44(fn Fsm < 'a >::exec_at) NOT COVERED
        387: replace `>` with `>=` at 654:43-654:44(fn Fsm < 'a >::exec_at) NOT COVERED
        388: remove `!` at 668:33-668:34(fn Fsm < 'a >::exec_at) NOT COVERED
        389: replace `&` with `|` at 668:31-668:32(fn Fsm < 'a >::exec_at) NOT COVERED
        390: replace `&` with `^` at 668:31-668:32(fn Fsm < 'a >::exec_at) NOT COVERED
        391: replace `==` with `!=` at 668:47-668:49(fn Fsm < 'a >::exec_at) NOT COVERED
        392: replace `2` with `3` at 669:28-669:29(fn Fsm < 'a >::exec_at) NOT COVERED
        393: replace `2` with `1` at 669:28-669:29(fn Fsm < 'a >::exec_at) NOT COVERED
        394: replace `+` with `-` at 669:26-669:27(fn Fsm < 'a >::exec_at) NOT COVERED
        395: replace `<` with `<=` at 669:30-669:31(fn Fsm < 'a >::exec_at) NOT COVERED
        396: replace `<` with `>=` at 669:30-669:31(fn Fsm < 'a >::exec_at) NOT COVERED
        397: replace `<` with `>` at 669:30-669:31(fn Fsm < 'a >::exec_at) NOT COVERED
        398: replace `&&` with `||` at 669:20-669:22(fn Fsm < 'a >::exec_at) NOT COVERED
        399: replace `1` with `2` at 675:26-675:27(fn Fsm < 'a >::exec_at) NOT COVERED
        400: replace `1` with `0` at 675:26-675:27(fn Fsm < 'a >::exec_at) NOT COVERED
        401: replace `>` with `<` at 677:22-677:23(fn Fsm < 'a >::exec_at) NOT COVERED
        402: replace `>` with `<=` at 677:22-677:23(fn Fsm < 'a >::exec_at) NOT COVERED
        403: replace `>` with `>=` at 677:22-677:23(fn Fsm < 'a >::exec_at) NOT COVERED
        404: replace `2` with `3` at 678:48-678:49(fn Fsm < 'a >::exec_at) NOT COVERED
        405: replace `2` with `1` at 678:48-678:49(fn Fsm < 'a >::exec_at) NOT COVERED
        406: replace `-` with `+` at 678:46-678:47(fn Fsm < 'a >::exec_at) NOT COVERED
        407: replace `&` with `|` at 680:30-680:31(fn Fsm < 'a >::exec_at) NOT COVERED
        408: replace `&` with `^` at 680:30-680:31(fn Fsm < 'a >::exec_at) NOT COVERED
        409: replace `0` with `1` at 680:46-680:47(fn Fsm < 'a >::exec_at) NOT COVERED
        410: replace `>` with `<` at 680:44-680:45(fn Fsm < 'a >::exec_at) NOT COVERED
        411: replace `>` with `<=` at 680:44-680:45(fn Fsm < 'a >::exec_at) NOT COVERED
        412: replace `>` with `>=` at 680:44-680:45(fn Fsm < 'a >::exec_at) NOT COVERED
        413: remove `!` at 686:27-686:28(fn Fsm < 'a >::exec_at) NOT COVERED
        414: replace `>=` with `<` at 692:30-692:32(fn Fsm < 'a >::exec_at) NOT COVERED
        415: replace `>=` with `<=` at 692:30-692:32(fn Fsm < 'a >::exec_at) NOT COVERED
        416: replace `>=` with `>` at 692:30-692:32(fn Fsm < 'a >::exec_at) NOT COVERED
        417: replace `==` with `!=` at 693:27-693:29(fn Fsm < 'a >::exec_at) NOT COVERED
        418: replace `1` with `2` at 700:48-700:49(fn Fsm < 'a >::exec_at) NOT COVERED
        419: replace `1` with `0` at 700:48-700:49(fn Fsm < 'a >::exec_at) NOT COVERED
        420: replace `-` with `+` at 700:46-700:47(fn Fsm < 'a >::exec_at) NOT COVERED
        421: replace `&` with `|` at 714:27-714:28(fn Fsm < 'a >::exec_at) NOT COVERED
        422: replace `&` with `^` at 714:27-714:28(fn Fsm < 'a >::exec_at) NOT COVERED
        423: replace `0` with `1` at 714:43-714:44(fn Fsm < 'a >::exec_at) NOT COVERED
        424: replace `>` with `<` at 714:41-714:42(fn Fsm < 'a >::exec_at) NOT COVERED
        425: replace `>` with `<=` at 714:41-714:42(fn Fsm < 'a >::exec_at) NOT COVERED
        426: replace `>` with `>=` at 714:41-714:42(fn Fsm < 'a >::exec_at) NOT COVERED
        427: remove `!` at 715:31-715:32(fn Fsm < 'a >::exec_at) NOT COVERED
        428: replace `1` with `2` at 716:48-716:49(fn Fsm < 'a >::exec_at) NOT COVERED
        429: replace `1` with `0` at 716:48-716:49(fn Fsm < 'a >::exec_at) NOT COVERED
        430: replace `-` with `+` at 716:46-716:47(fn Fsm < 'a >::exec_at) NOT COVERED
        431: remove `!` at 735:29-735:30(fn Fsm < 'a >::exec_at) NOT COVERED
        432: replace `&` with `|` at 735:27-735:28(fn Fsm < 'a >::exec_at) NOT COVERED
        433: replace `&` with `^` at 735:27-735:28(fn Fsm < 'a >::exec_at) NOT COVERED
        434: replace `&` with `|` at 738:19-738:20(fn Fsm < 'a >::exec_at) NOT COVERED
        435: replace `&` with `^` at 738:19-738:20(fn Fsm < 'a >::exec_at) NOT COVERED
        436: replace `0` with `1` at 738:35-738:36(fn Fsm < 'a >::exec_at) NOT COVERED
        437: replace `>` with `<` at 738:33-738:34(fn Fsm < 'a >::exec_at) NOT COVERED
        438: replace `>` with `<=` at 738:33-738:34(fn Fsm < 'a >::exec_at) NOT COVERED
        439: replace `>` with `>=` at 738:33-738:34(fn Fsm < 'a >::exec_at) NOT COVERED
        440: remove `!` at 739:23-739:24(fn Fsm < 'a >::exec_at) NOT COVERED
        441: replace `0` with `1` at 764:19-764:20(fn Fsm < 'a >::exec_at_reverse) NOT COVERED
        442: replace `>` with `<` at 764:17-764:18(fn Fsm < 'a >::exec_at_reverse) NOT COVERED
        443: replace `>` with `<=` at 764:17-764:18(fn Fsm < 'a >::exec_at_reverse) NOT COVERED
        444: replace `>` with `>=` at 764:17-764:18(fn Fsm < 'a >::exec_at_reverse) NOT COVERED
        445: replace `<=` with `<` at 765:26-765:28(fn Fsm < 'a >::exec_at_reverse) NOT COVERED
        446: replace `<=` with `>=` at 765:26-765:28(fn Fsm < 'a >::exec_at_reverse) NOT COVERED
        447: replace `<=` with `>` at 765:26-765:28(fn Fsm < 'a >::exec_at_reverse) NOT COVERED
        448: replace `0` with `1` at 765:47-765:48(fn Fsm < 'a >::exec_at_reverse) NOT COVERED
        449: replace `>` with `<` at 765:45-765:46(fn Fsm < 'a >::exec_at_reverse) NOT COVERED
        450: replace `>` with `<=` at 765:45-765:46(fn Fsm < 'a >::exec_at_reverse) NOT COVERED
        451: replace `>` with `>=` at 765:45-765:46(fn Fsm < 'a >::exec_at_reverse) NOT COVERED
        452: replace `&&` with `||` at 765:39-765:41(fn Fsm < 'a >::exec_at_reverse) NOT COVERED
        453: replace `1` with `2` at 767:22-767:23(fn Fsm < 'a >::exec_at_reverse) NOT COVERED
        454: replace `1` with `0` at 767:22-767:23(fn Fsm < 'a >::exec_at_reverse) NOT COVERED
        455: replace `>` with `<` at 769:27-769:28(fn Fsm < 'a >::exec_at_reverse) NOT COVERED
        456: replace `>` with `<=` at 769:27-769:28(fn Fsm < 'a >::exec_at_reverse) NOT COVERED
        457: replace `>` with `>=` at 769:27-769:28(fn Fsm < 'a >::exec_at_reverse) NOT COVERED
        458: replace `4` with `5` at 769:48-769:49(fn Fsm < 'a >::exec_at_reverse) NOT COVERED
        459: replace `4` with `3` at 769:48-769:49(fn Fsm < 'a >::exec_at_reverse) NOT COVERED
        460: replace `<=` with `<` at 769:45-769:47(fn Fsm < 'a >::exec_at_reverse) NOT COVERED
        461: replace `<=` with `>=` at 769:45-769:47(fn Fsm < 'a >::exec_at_reverse) NOT COVERED
        462: replace `<=` with `>` at 769:45-769:47(fn Fsm < 'a >::exec_at_reverse) NOT COVERED
        463: replace `||` with `&&` at 769:39-769:41(fn Fsm < 'a >::exec_at_reverse) NOT COVERED
        464: remove `mem :: swap (& mut prev_si, & mut next_si) ;` at 770:20-770:57(fn Fsm < 'a >::exec_at_reverse) NOT COVERED
        465: replace `1` with `2` at 773:22-773:23(fn Fsm < 'a >::exec_at_reverse) NOT COVERED
        466: replace `1` with `0` at 773:22-773:23(fn Fsm < 'a >::exec_at_reverse) NOT COVERED
        467: replace `>` with `<` at 775:27-775:28(fn Fsm < 'a >::exec_at_reverse) NOT COVERED
        468: replace `>` with `<=` at 775:27-775:28(fn Fsm < 'a >::exec_at_reverse) NOT COVERED
        469: replace `>` with `>=` at 775:27-775:28(fn Fsm < 'a >::exec_at_reverse) NOT COVERED
        470: replace `1` with `2` at 778:22-778:23(fn Fsm < 'a >::exec_at_reverse) NOT COVERED
        471: replace `1` with `0` at 778:22-778:23(fn Fsm < 'a >::exec_at_reverse) NOT COVERED
        472: replace `>` with `<` at 780:27-780:28(fn Fsm < 'a >::exec_at_reverse) NOT COVERED
        473: replace `>` with `<=` at 780:27-780:28(fn Fsm < 'a >::exec_at_reverse) NOT COVERED
        474: replace `>` with `>=` at 780:27-780:28(fn Fsm < 'a >::exec_at_reverse) NOT COVERED
        475: remove `mem :: swap (& mut prev_si, & mut next_si) ;` at 781:20-781:57(fn Fsm < 'a >::exec_at_reverse) NOT COVERED
        476: replace `1` with `2` at 784:22-784:23(fn Fsm < 'a >::exec_at_reverse) NOT COVERED
        477: replace `1` with `0` at 784:22-784:23(fn Fsm < 'a >::exec_at_reverse) NOT COVERED
        478: replace `&` with `|` at 787:23-787:24(fn Fsm < 'a >::exec_at_reverse) NOT COVERED
        479: replace `&` with `^` at 787:23-787:24(fn Fsm < 'a >::exec_at_reverse) NOT COVERED
        480: replace `0` with `1` at 787:39-787:40(fn Fsm < 'a >::exec_at_reverse) NOT COVERED
        481: replace `>` with `<` at 787:37-787:38(fn Fsm < 'a >::exec_at_reverse) NOT COVERED
        482: replace `>` with `<=` at 787:37-787:38(fn Fsm < 'a >::exec_at_reverse) NOT COVERED
        483: replace `>` with `>=` at 787:37-787:38(fn Fsm < 'a >::exec_at_reverse) NOT COVERED
        484: remove `!` at 788:27-788:28(fn Fsm < 'a >::exec_at_reverse) NOT COVERED
        485: replace `1` with `2` at 789:44-789:45(fn Fsm < 'a >::exec_at_reverse) NOT COVERED
        486: replace `1` with `0` at 789:44-789:45(fn Fsm < 'a >::exec_at_reverse) NOT COVERED
        487: replace `+` with `-` at 789:42-789:43(fn Fsm < 'a >::exec_at_reverse) NOT COVERED
        488: remove `!` at 796:33-796:34(fn Fsm < 'a >::exec_at_reverse) NOT COVERED
        489: replace `&` with `|` at 796:31-796:32(fn Fsm < 'a >::exec_at_reverse) NOT COVERED
        490: replace `&` with `^` at 796:31-796:32(fn Fsm < 'a >::exec_at_reverse) NOT COVERED
        491: replace `==` with `!=` at 796:47-796:49(fn Fsm < 'a >::exec_at_reverse) NOT COVERED
        492: replace `2` with `3` at 796:67-796:68(fn Fsm < 'a >::exec_at_reverse) NOT COVERED
        493: replace `2` with `1` at 796:67-796:68(fn Fsm < 'a >::exec_at_reverse) NOT COVERED
        494: replace `>=` with `<` at 796:64-796:66(fn Fsm < 'a >::exec_at_reverse) NOT COVERED
        495: replace `>=` with `<=` at 796:64-796:66(fn Fsm < 'a >::exec_at_reverse) NOT COVERED
        496: replace `>=` with `>` at 796:64-796:66(fn Fsm < 'a >::exec_at_reverse) NOT COVERED
        497: replace `&&` with `||` at 796:58-796:60(fn Fsm < 'a >::exec_at_reverse) NOT COVERED
        498: replace `1` with `2` at 798:26-798:27(fn Fsm < 'a >::exec_at_reverse) NOT COVERED
        499: replace `1` with `0` at 798:26-798:27(fn Fsm < 'a >::exec_at_reverse) NOT COVERED
        500: replace `<` with `<=` at 803:22-803:23(fn Fsm < 'a >::exec_at_reverse) NOT COVERED
        501: replace `<` with `>=` at 803:22-803:23(fn Fsm < 'a >::exec_at_reverse) NOT COVERED
        502: replace `<` with `>` at 803:22-803:23(fn Fsm < 'a >::exec_at_reverse) NOT COVERED
        503: replace `2` with `3` at 804:48-804:49(fn Fsm < 'a >::exec_at_reverse) NOT COVERED
        504: replace `2` with `1` at 804:48-804:49(fn Fsm < 'a >::exec_at_reverse) NOT COVERED
        505: replace `+` with `-` at 804:46-804:47(fn Fsm < 'a >::exec_at_reverse) NOT COVERED
        506: replace `>=` with `<` at 806:30-806:32(fn Fsm < 'a >::exec_at_reverse) NOT COVERED
        507: replace `>=` with `<=` at 806:30-806:32(fn Fsm < 'a >::exec_at_reverse) NOT COVERED
        508: replace `>=` with `>` at 806:30-806:32(fn Fsm < 'a >::exec_at_reverse) NOT COVERED
        509: replace `==` with `!=` at 807:27-807:29(fn Fsm < 'a >::exec_at_reverse) NOT COVERED
        510: replace `&` with `|` at 819:27-819:28(fn Fsm < 'a >::exec_at_reverse) NOT COVERED
        511: replace `&` with `^` at 819:27-819:28(fn Fsm < 'a >::exec_at_reverse) NOT COVERED
        512: replace `0` with `1` at 819:43-819:44(fn Fsm < 'a >::exec_at_reverse) NOT COVERED
        513: replace `>` with `<` at 819:41-819:42(fn Fsm < 'a >::exec_at_reverse) NOT COVERED
        514: replace `>` with `<=` at 819:41-819:42(fn Fsm < 'a >::exec_at_reverse) NOT COVERED
        515: replace `>` with `>=` at 819:41-819:42(fn Fsm < 'a >::exec_at_reverse) NOT COVERED
        516: remove `!` at 820:31-820:32(fn Fsm < 'a >::exec_at_reverse) NOT COVERED
        517: replace `1` with `2` at 821:48-821:49(fn Fsm < 'a >::exec_at_reverse) NOT COVERED
        518: replace `1` with `0` at 821:48-821:49(fn Fsm < 'a >::exec_at_reverse) NOT COVERED
        519: replace `+` with `-` at 821:46-821:47(fn Fsm < 'a >::exec_at_reverse) NOT COVERED
        520: replace `0` with `1` at 836:60-836:61(fn Fsm < 'a >::exec_at_reverse) NOT COVERED
        521: replace `&` with `|` at 840:19-840:20(fn Fsm < 'a >::exec_at_reverse) NOT COVERED
        522: replace `&` with `^` at 840:19-840:20(fn Fsm < 'a >::exec_at_reverse) NOT COVERED
        523: replace `0` with `1` at 840:35-840:36(fn Fsm < 'a >::exec_at_reverse) NOT COVERED
        524: replace `>` with `<` at 840:33-840:34(fn Fsm < 'a >::exec_at_reverse) NOT COVERED
        525: replace `>` with `<=` at 840:33-840:34(fn Fsm < 'a >::exec_at_reverse) NOT COVERED
        526: replace `>` with `>=` at 840:33-840:34(fn Fsm < 'a >::exec_at_reverse) NOT COVERED
        527: remove `!` at 841:23-841:24(fn Fsm < 'a >::exec_at_reverse) NOT COVERED
        528: replace `0` with `1` at 843:35-843:36(fn Fsm < 'a >::exec_at_reverse) NOT COVERED
        529: remove `qcur . clear () ;` at 900:8-900:20(fn Fsm < 'a >::exec_byte) NOT COVERED
        530: remove `qcur . insert (ip) ;` at 902:12-902:27(fn Fsm < 'a >::exec_byte) NOT COVERED
        531: replace `true` with `false` at 920:28-920:32(fn Fsm < 'a >::exec_byte) NOT COVERED
        532: replace `true` with `false` at 921:33-921:37(fn Fsm < 'a >::exec_byte) NOT COVERED
        533: replace `false` with `true` at 922:41-922:46(fn Fsm < 'a >::exec_byte) NOT COVERED
        534: replace `==` with `!=` at 922:54-922:56(fn Fsm < 'a >::exec_byte) NOT COVERED
        535: replace `true` with `false` at 923:33-923:37(fn Fsm < 'a >::exec_byte) NOT COVERED
        536: replace `==` with `!=` at 925:28-925:30(fn Fsm < 'a >::exec_byte) NOT COVERED
        537: replace `true` with `false` at 926:42-926:46(fn Fsm < 'a >::exec_byte) NOT COVERED
        538: replace `true` with `false` at 928:38-928:42(fn Fsm < 'a >::exec_byte) NOT COVERED
        539: remove `qnext . clear () ;` at 932:12-932:25(fn Fsm < 'a >::exec_byte) NOT COVERED
        540: remove `self . follow_epsilons (usize_to_u32 (ip), qnext, flags) ;` at 934:16-934:68(fn Fsm < 'a >::exec_byte) NOT COVERED
        541: remove `mem :: swap (qcur, qnext) ;` at 936:12-936:34(fn Fsm < 'a >::exec_byte) NOT COVERED
        542: replace `false` with `true` at 951:52-951:57(fn Fsm < 'a >::exec_byte) NOT COVERED
        543: replace `==` with `!=` at 951:65-951:67(fn Fsm < 'a >::exec_byte) NOT COVERED
        544: remove `state_flags . set_word () ;` at 953:12-953:34(fn Fsm < 'a >::exec_byte) NOT COVERED
        545: remove `qnext . clear () ;` at 957:8-957:21(fn Fsm < 'a >::exec_byte) NOT COVERED
        546: remove `state_flags . set_match () ;` at 965:20-965:43(fn Fsm < 'a >::exec_byte) NOT COVERED
        547: remove `!` at 966:23-966:24(fn Fsm < 'a >::exec_byte) NOT COVERED
        548: replace `1` with `2` at 968:56-968:57(fn Fsm < 'a >::exec_byte) NOT COVERED
        549: replace `1` with `0` at 968:56-968:57(fn Fsm < 'a >::exec_byte) NOT COVERED
        550: replace `>` with `<` at 968:54-968:55(fn Fsm < 'a >::exec_byte) NOT COVERED
        551: replace `>` with `<=` at 968:54-968:55(fn Fsm < 'a >::exec_byte) NOT COVERED
        552: replace `>` with `>=` at 968:54-968:55(fn Fsm < 'a >::exec_byte) NOT COVERED
        553: remove `!` at 969:27-969:28(fn Fsm < 'a >::exec_byte) NOT COVERED
        554: replace `&&` with `||` at 969:24-969:26(fn Fsm < 'a >::exec_byte) NOT COVERED
        555: remove `qnext . insert (ip) ;` at 973:24-973:40(fn Fsm < 'a >::exec_byte) NOT COVERED
        556: replace `false` with `true` at 977:42-977:47(fn Fsm < 'a >::exec_byte) NOT COVERED
        557: remove `self . follow_epsilons (inst . goto as InstPtr, qnext, empty_flags,) ;` at 978:24-982:25(fn Fsm < 'a >::exec_byte) NOT COVERED
        558: replace `1` with `2` at 988:63-988:64(fn Fsm < 'a >::exec_byte) NOT COVERED
        559: replace `1` with `0` at 988:63-988:64(fn Fsm < 'a >::exec_byte) NOT COVERED
        560: replace `>` with `<` at 988:61-988:62(fn Fsm < 'a >::exec_byte) NOT COVERED
        561: replace `>` with `<=` at 988:61-988:62(fn Fsm < 'a >::exec_byte) NOT COVERED
        562: replace `>` with `>=` at 988:61-988:62(fn Fsm < 'a >::exec_byte) NOT COVERED
        563: replace `&&` with `||` at 988:34-988:36(fn Fsm < 'a >::exec_byte) NOT COVERED
        564: remove `mem :: swap (qcur, qnext) ;` at 993:12-993:34(fn Fsm < 'a >::exec_byte) NOT COVERED
        565: replace `false` with `true` at 995:12-995:17(fn Fsm < 'a >::exec_byte) NOT COVERED
        566: replace `true` with `false` at 997:12-997:16(fn Fsm < 'a >::exec_byte) NOT COVERED
        567: remove `!` at 1012:25-1012:26(fn Fsm < 'a >::exec_byte) NOT COVERED
        568: replace `&` with `|` at 1012:23-1012:24(fn Fsm < 'a >::exec_byte) NOT COVERED
        569: replace `&` with `^` at 1012:23-1012:24(fn Fsm < 'a >::exec_byte) NOT COVERED
        570: replace `==` with `!=` at 1012:39-1012:41(fn Fsm < 'a >::exec_byte) NOT COVERED
        571: replace `<=` with `<` at 1018:16-1018:18(fn Fsm < 'a >::exec_byte) NOT COVERED
        572: replace `<=` with `>=` at 1018:16-1018:18(fn Fsm < 'a >::exec_byte) NOT COVERED
        573: replace `<=` with `>` at 1018:16-1018:18(fn Fsm < 'a >::exec_byte) NOT COVERED
        574: replace `&&` with `||` at 1018:29-1018:31(fn Fsm < 'a >::exec_byte) NOT COVERED
        575: remove `self . cache . trans . set_next (si, cls, next) ;` at 1025:12-1025:52(fn Fsm < 'a >::exec_byte) NOT COVERED
        576: remove `self . cache . stack . push (ip) ;` at 1064:8-1064:33(fn Fsm < 'a >::follow_epsilons) NOT COVERED
        577: remove `q . insert (ip as usize) ;` at 1073:16-1073:37(fn Fsm < 'a >::follow_epsilons) NOT COVERED
        578: remove `self . cache . stack . push (inst . goto2 as InstPtr) ;` at 1120:24-1120:68(fn Fsm < 'a >::follow_epsilons) NOT COVERED
        579: replace `>` with `<` at 1168:35-1168:36(fn Fsm < 'a >::cached_state) NOT COVERED
        580: replace `>` with `<=` at 1168:35-1168:36(fn Fsm < 'a >::cached_state) NOT COVERED
        581: replace `>` with `>=` at 1168:35-1168:36(fn Fsm < 'a >::cached_state) NOT COVERED
        582: remove `!` at 1169:15-1169:16(fn Fsm < 'a >::cached_state) NOT COVERED
        583: replace `&&` with `||` at 1169:12-1169:14(fn Fsm < 'a >::cached_state) NOT COVERED
        584: remove `insts . clear () ;` at 1206:8-1206:21(fn Fsm < 'a >::cached_state_key) NOT COVERED
        585: replace `0` with `1` at 1208:19-1208:20(fn Fsm < 'a >::cached_state_key) NOT COVERED
        586: remove `insts . push (0) ;` at 1208:8-1208:21(fn Fsm < 'a >::cached_state_key) NOT COVERED
        587: replace `0` with `1` at 1210:23-1210:24(fn Fsm < 'a >::cached_state_key) NOT COVERED
        588: remove `state_flags . set_empty () ;` at 1218:20-1218:43(fn Fsm < 'a >::cached_state_key) NOT COVERED
        589: remove `push_inst_ptr (& mut insts, & mut prev, ip) ;` at 1222:20-1222:60(fn Fsm < 'a >::cached_state_key) NOT COVERED
        590: remove `!` at 1223:23-1223:24(fn Fsm < 'a >::cached_state_key) NOT COVERED
        591: replace `1` with `2` at 1233:42-1233:43(fn Fsm < 'a >::cached_state_key) NOT COVERED
        592: replace `1` with `0` at 1233:42-1233:43(fn Fsm < 'a >::cached_state_key) NOT COVERED
        593: replace `==` with `!=` at 1233:39-1233:41(fn Fsm < 'a >::cached_state_key) NOT COVERED
        594: remove `!` at 1233:47-1233:48(fn Fsm < 'a >::cached_state_key) NOT COVERED
        595: replace `&&` with `||` at 1233:44-1233:46(fn Fsm < 'a >::cached_state_key) NOT COVERED
        596: replace `0` with `1` at 1237:18-1237:19(fn Fsm < 'a >::cached_state_key) NOT COVERED
        597: replace `true` with `false` at 1258:19-1258:23(fn Fsm < 'a >::clear_cache_and_save) NOT COVERED
        598: remove `!` at 1264:19-1264:20(fn Fsm < 'a >::clear_cache_and_save) NOT COVERED
        599: replace `false` with `true` at 1265:27-1265:32(fn Fsm < 'a >::clear_cache_and_save) NOT COVERED
        600: replace `true` with `false` at 1271:16-1271:20(fn Fsm < 'a >::clear_cache_and_save) NOT COVERED
        601: replace `3` with `4` at 1287:37-1287:38(fn Fsm < 'a >::clear_cache) NOT COVERED
        602: replace `3` with `2` at 1287:37-1287:38(fn Fsm < 'a >::clear_cache) NOT COVERED
        603: replace `>=` with `<` at 1287:34-1287:36(fn Fsm < 'a >::clear_cache) NOT COVERED
        604: replace `>=` with `<=` at 1287:34-1287:36(fn Fsm < 'a >::clear_cache) NOT COVERED
        605: replace `>=` with `>` at 1287:34-1287:36(fn Fsm < 'a >::clear_cache) NOT COVERED
        606: replace `>=` with `<` at 1288:23-1288:25(fn Fsm < 'a >::clear_cache) NOT COVERED
        607: replace `>=` with `<=` at 1288:23-1288:25(fn Fsm < 'a >::clear_cache) NOT COVERED
        608: replace `>=` with `>` at 1288:23-1288:25(fn Fsm < 'a >::clear_cache) NOT COVERED
        609: replace `&&` with `||` at 1288:12-1288:14(fn Fsm < 'a >::clear_cache) NOT COVERED
        610: replace `-` with `+` at 1289:24-1289:25(fn Fsm < 'a >::clear_cache) NOT COVERED
        611: replace `10` with `11` at 1289:52-1289:54(fn Fsm < 'a >::clear_cache) NOT COVERED
        612: replace `10` with `9` at 1289:52-1289:54(fn Fsm < 'a >::clear_cache) NOT COVERED
        613: replace `*` with `/` at 1289:55-1289:56(fn Fsm < 'a >::clear_cache) NOT COVERED
        614: replace `<=` with `<` at 1289:49-1289:51(fn Fsm < 'a >::clear_cache) NOT COVERED
        615: replace `<=` with `>=` at 1289:49-1289:51(fn Fsm < 'a >::clear_cache) NOT COVERED
        616: replace `<=` with `>` at 1289:49-1289:51(fn Fsm < 'a >::clear_cache) NOT COVERED
        617: replace `&&` with `||` at 1289:12-1289:14(fn Fsm < 'a >::clear_cache) NOT COVERED
        618: replace `false` with `true` at 1291:19-1291:24(fn Fsm < 'a >::clear_cache) NOT COVERED
        619: replace `1` with `2` at 1295:34-1295:35(fn Fsm < 'a >::clear_cache) NOT COVERED
        620: replace `1` with `0` at 1295:34-1295:35(fn Fsm < 'a >::clear_cache) NOT COVERED
        621: remove `!` at 1298:44-1298:45(fn Fsm < 'a >::clear_cache) NOT COVERED
        622: replace `&` with `|` at 1298:42-1298:43(fn Fsm < 'a >::clear_cache) NOT COVERED
        623: replace `&` with `^` at 1298:42-1298:43(fn Fsm < 'a >::clear_cache) NOT COVERED
        624: replace `<=` with `<` at 1299:47-1299:49(fn Fsm < 'a >::clear_cache) NOT COVERED
        625: replace `<=` with `>=` at 1299:47-1299:49(fn Fsm < 'a >::clear_cache) NOT COVERED
        626: replace `<=` with `>` at 1299:47-1299:49(fn Fsm < 'a >::clear_cache) NOT COVERED
        627: remove `self . cache . reset_size () ;` at 1304:8-1304:31(fn Fsm < 'a >::clear_cache) NOT COVERED
        628: remove `self . cache . trans . clear () ;` at 1305:8-1305:32(fn Fsm < 'a >::clear_cache) NOT COVERED
        629: remove `self . cache . compiled . clear () ;` at 1306:8-1306:35(fn Fsm < 'a >::clear_cache) NOT COVERED
        630: replace `true` with `false` at 1317:8-1317:12(fn Fsm < 'a >::clear_cache) NOT COVERED
        631: replace `==` with `!=` at 1350:14-1350:16(fn Fsm < 'a >::next_state) NOT COVERED
        632: replace `0` with `1` at 1380:43-1380:44(fn Fsm < 'a >::start_state) NOT COVERED
        633: replace `1` with `2` at 1381:46-1381:47(fn Fsm < 'a >::start_state) NOT COVERED
        634: replace `1` with `0` at 1381:46-1381:47(fn Fsm < 'a >::start_state) NOT COVERED
        635: replace `|` with `&` at 1381:16-1381:17(fn Fsm < 'a >::start_state) NOT COVERED
        636: replace `|` with `^` at 1381:16-1381:17(fn Fsm < 'a >::start_state) NOT COVERED
        637: replace `2` with `3` at 1382:53-1382:54(fn Fsm < 'a >::start_state) NOT COVERED
        638: replace `2` with `1` at 1382:53-1382:54(fn Fsm < 'a >::start_state) NOT COVERED
        639: replace `|` with `&` at 1382:16-1382:17(fn Fsm < 'a >::start_state) NOT COVERED
        640: replace `|` with `^` at 1382:16-1382:17(fn Fsm < 'a >::start_state) NOT COVERED
        641: replace `3` with `4` at 1383:51-1383:52(fn Fsm < 'a >::start_state) NOT COVERED
        642: replace `3` with `2` at 1383:51-1383:52(fn Fsm < 'a >::start_state) NOT COVERED
        643: replace `|` with `&` at 1383:16-1383:17(fn Fsm < 'a >::start_state) NOT COVERED
        644: replace `|` with `^` at 1383:16-1383:17(fn Fsm < 'a >::start_state) NOT COVERED
        645: replace `4` with `5` at 1384:56-1384:57(fn Fsm < 'a >::start_state) NOT COVERED
        646: replace `4` with `3` at 1384:56-1384:57(fn Fsm < 'a >::start_state) NOT COVERED
        647: replace `|` with `&` at 1384:16-1384:17(fn Fsm < 'a >::start_state) NOT COVERED
        648: replace `|` with `^` at 1384:16-1384:17(fn Fsm < 'a >::start_state) NOT COVERED
        649: replace `5` with `6` at 1385:60-1385:61(fn Fsm < 'a >::start_state) NOT COVERED
        650: replace `5` with `4` at 1385:60-1385:61(fn Fsm < 'a >::start_state) NOT COVERED
        651: replace `|` with `&` at 1385:16-1385:17(fn Fsm < 'a >::start_state) NOT COVERED
        652: replace `|` with `^` at 1385:16-1385:17(fn Fsm < 'a >::start_state) NOT COVERED
        653: replace `6` with `7` at 1386:52-1386:53(fn Fsm < 'a >::start_state) NOT COVERED
        654: replace `6` with `5` at 1386:52-1386:53(fn Fsm < 'a >::start_state) NOT COVERED
        655: replace `|` with `&` at 1386:16-1386:17(fn Fsm < 'a >::start_state) NOT COVERED
        656: replace `|` with `^` at 1386:16-1386:17(fn Fsm < 'a >::start_state) NOT COVERED
        657: remove `q . clear () ;` at 1393:8-1393:17(fn Fsm < 'a >::start_state) NOT COVERED
        658: remove `self . follow_epsilons (start, q, empty_flags) ;` at 1395:8-1395:51(fn Fsm < 'a >::start_state) NOT COVERED
        659: replace `0` with `1` at 1415:34-1415:35(fn Fsm < 'a >::start_flags) NOT COVERED
        660: replace `==` with `!=` at 1415:31-1415:33(fn Fsm < 'a >::start_flags) NOT COVERED
        661: replace `0` with `1` at 1417:39-1417:40(fn Fsm < 'a >::start_flags) NOT COVERED
        662: replace `==` with `!=` at 1417:36-1417:38(fn Fsm < 'a >::start_flags) NOT COVERED
        663: replace `1` with `2` at 1417:54-1417:55(fn Fsm < 'a >::start_flags) NOT COVERED
        664: replace `1` with `0` at 1417:54-1417:55(fn Fsm < 'a >::start_flags) NOT COVERED
        665: replace `-` with `+` at 1417:52-1417:53(fn Fsm < 'a >::start_flags) NOT COVERED
        666: replace `==` with `!=` at 1417:57-1417:59(fn Fsm < 'a >::start_flags) NOT COVERED
        667: replace `||` with `&&` at 1417:41-1417:43(fn Fsm < 'a >::start_flags) NOT COVERED
        668: replace `0` with `1` at 1420:32-1420:33(fn Fsm < 'a >::start_flags) NOT COVERED
        669: replace `>` with `<` at 1420:30-1420:31(fn Fsm < 'a >::start_flags) NOT COVERED
        670: replace `>` with `<=` at 1420:30-1420:31(fn Fsm < 'a >::start_flags) NOT COVERED
        671: replace `>` with `>=` at 1420:30-1420:31(fn Fsm < 'a >::start_flags) NOT COVERED
        672: replace `1` with `2` at 1420:58-1420:59(fn Fsm < 'a >::start_flags) NOT COVERED
        673: replace `1` with `0` at 1420:58-1420:59(fn Fsm < 'a >::start_flags) NOT COVERED
        674: replace `-` with `+` at 1420:56-1420:57(fn Fsm < 'a >::start_flags) NOT COVERED
        675: replace `&&` with `||` at 1420:34-1420:36(fn Fsm < 'a >::start_flags) NOT COVERED
        676: replace `<` with `<=` at 1421:25-1421:26(fn Fsm < 'a >::start_flags) NOT COVERED
        677: replace `<` with `>=` at 1421:25-1421:26(fn Fsm < 'a >::start_flags) NOT COVERED
        678: replace `<` with `>` at 1421:25-1421:26(fn Fsm < 'a >::start_flags) NOT COVERED
        679: replace `&&` with `||` at 1421:38-1421:40(fn Fsm < 'a >::start_flags) NOT COVERED
        680: remove `state_flags . set_word () ;` at 1423:12-1423:34(fn Fsm < 'a >::start_flags) NOT COVERED
        681: replace `==` with `!=` at 1425:19-1425:21(fn Fsm < 'a >::start_flags) NOT COVERED
        682: replace `true` with `false` at 1426:44-1426:48(fn Fsm < 'a >::start_flags) NOT COVERED
        683: replace `true` with `false` at 1428:40-1428:44(fn Fsm < 'a >::start_flags) NOT COVERED
        684: replace `==` with `!=` at 1444:31-1444:33(fn Fsm < 'a >::start_flags_reverse) NOT COVERED
        685: replace `==` with `!=` at 1446:36-1446:38(fn Fsm < 'a >::start_flags_reverse) NOT COVERED
        686: replace `==` with `!=` at 1446:62-1446:64(fn Fsm < 'a >::start_flags_reverse) NOT COVERED
        687: replace `||` with `&&` at 1446:50-1446:52(fn Fsm < 'a >::start_flags_reverse) NOT COVERED
        688: replace `<` with `<=` at 1450:15-1450:16(fn Fsm < 'a >::start_flags_reverse) NOT COVERED
        689: replace `<` with `>=` at 1450:15-1450:16(fn Fsm < 'a >::start_flags_reverse) NOT COVERED
        690: replace `<` with `>` at 1450:15-1450:16(fn Fsm < 'a >::start_flags_reverse) NOT COVERED
        691: replace `&&` with `||` at 1450:28-1450:30(fn Fsm < 'a >::start_flags_reverse) NOT COVERED
        692: replace `0` with `1` at 1451:27-1451:28(fn Fsm < 'a >::start_flags_reverse) NOT COVERED
        693: replace `>` with `<` at 1451:25-1451:26(fn Fsm < 'a >::start_flags_reverse) NOT COVERED
        694: replace `>` with `<=` at 1451:25-1451:26(fn Fsm < 'a >::start_flags_reverse) NOT COVERED
        695: replace `>` with `>=` at 1451:25-1451:26(fn Fsm < 'a >::start_flags_reverse) NOT COVERED
        696: replace `1` with `2` at 1451:53-1451:54(fn Fsm < 'a >::start_flags_reverse) NOT COVERED
        697: replace `1` with `0` at 1451:53-1451:54(fn Fsm < 'a >::start_flags_reverse) NOT COVERED
        698: replace `-` with `+` at 1451:51-1451:52(fn Fsm < 'a >::start_flags_reverse) NOT COVERED
        699: replace `&&` with `||` at 1451:29-1451:31(fn Fsm < 'a >::start_flags_reverse) NOT COVERED
        700: remove `state_flags . set_word () ;` at 1453:12-1453:34(fn Fsm < 'a >::start_flags_reverse) NOT COVERED
        701: replace `==` with `!=` at 1455:19-1455:21(fn Fsm < 'a >::start_flags_reverse) NOT COVERED
        702: replace `true` with `false` at 1456:44-1456:48(fn Fsm < 'a >::start_flags_reverse) NOT COVERED
        703: replace `true` with `false` at 1458:40-1458:44(fn Fsm < 'a >::start_flags_reverse) NOT COVERED
        704: replace `128` with `129` at 1489:21-1489:24(fn Fsm < 'a >::add_state) NOT COVERED
        705: replace `128` with `127` at 1489:21-1489:24(fn Fsm < 'a >::add_state) NOT COVERED
        706: replace `256` with `257` at 1489:26-1489:29(fn Fsm < 'a >::add_state) NOT COVERED
        707: replace `256` with `255` at 1489:26-1489:29(fn Fsm < 'a >::add_state) NOT COVERED
        708: remove `self . cache . trans . set_next (si, cls, STATE_QUIT) ;` at 1491:16-1491:62(fn Fsm < 'a >::add_state) NOT COVERED
        709: replace `+` with `-` at 1497:12-1497:13(fn Fsm < 'a >::add_state) NOT COVERED
        710: replace `2` with `3` at 1498:15-1498:16(fn Fsm < 'a >::add_state) NOT COVERED
        711: replace `2` with `1` at 1498:15-1498:16(fn Fsm < 'a >::add_state) NOT COVERED
        712: replace `*` with `/` at 1498:17-1498:18(fn Fsm < 'a >::add_state) NOT COVERED
        713: replace `+` with `-` at 1498:12-1498:13(fn Fsm < 'a >::add_state) NOT COVERED
        714: replace `+` with `-` at 1499:12-1499:13(fn Fsm < 'a >::add_state) NOT COVERED
        715: remove `self . cache . compiled . insert (state, si) ;` at 1500:8-1500:45(fn Fsm < 'a >::add_state) NOT COVERED
        716: replace `+` with `-` at 1515:61-1515:62(fn Fsm < 'a >::prefix_at) NOT COVERED
        717: replace `255` with `256` at 1524:32-1524:35(fn Fsm < 'a >::num_byte_classes) NOT COVERED
        718: replace `255` with `254` at 1524:32-1524:35(fn Fsm < 'a >::num_byte_classes) NOT COVERED
        719: replace `1` with `2` at 1524:48-1524:49(fn Fsm < 'a >::num_byte_classes) NOT COVERED
        720: replace `1` with `0` at 1524:48-1524:49(fn Fsm < 'a >::num_byte_classes) NOT COVERED
        721: replace `+` with `-` at 1524:46-1524:47(fn Fsm < 'a >::num_byte_classes) NOT COVERED
        722: replace `1` with `2` at 1524:53-1524:54(fn Fsm < 'a >::num_byte_classes) NOT COVERED
        723: replace `1` with `0` at 1524:53-1524:54(fn Fsm < 'a >::num_byte_classes) NOT COVERED
        724: replace `+` with `-` at 1524:51-1524:52(fn Fsm < 'a >::num_byte_classes) NOT COVERED
        725: replace `1` with `2` at 1532:46-1532:47(fn Fsm < 'a >::byte_class) NOT COVERED
        726: replace `1` with `0` at 1532:46-1532:47(fn Fsm < 'a >::byte_class) NOT COVERED
        727: replace `-` with `+` at 1532:44-1532:45(fn Fsm < 'a >::byte_class) NOT COVERED
        728: replace `1` with `2` at 1552:58-1552:59(fn Fsm < 'a >::continue_past_first_match) NOT COVERED
        729: replace `1` with `0` at 1552:58-1552:59(fn Fsm < 'a >::continue_past_first_match) NOT COVERED
        730: replace `>` with `<` at 1552:56-1552:57(fn Fsm < 'a >::continue_past_first_match) NOT COVERED
        731: replace `>` with `<=` at 1552:56-1552:57(fn Fsm < 'a >::continue_past_first_match) NOT COVERED
        732: replace `>` with `>=` at 1552:56-1552:57(fn Fsm < 'a >::continue_past_first_match) NOT COVERED
        733: replace `||` with `&&` at 1552:29-1552:31(fn Fsm < 'a >::continue_past_first_match) NOT COVERED
        734: remove `!` at 1557:8-1557:9(fn Fsm < 'a >::has_prefix) NOT COVERED
        735: remove `!` at 1558:15-1558:16(fn Fsm < 'a >::has_prefix) NOT COVERED
        736: replace `&&` with `||` at 1558:12-1558:14(fn Fsm < 'a >::has_prefix) NOT COVERED
        737: remove `!` at 1559:15-1559:16(fn Fsm < 'a >::has_prefix) NOT COVERED
        738: replace `&&` with `||` at 1559:12-1559:14(fn Fsm < 'a >::has_prefix) NOT COVERED
        739: replace `|` with `&` at 1569:15-1569:16(fn Fsm < 'a >::start_ptr) NOT COVERED
        740: replace `|` with `^` at 1569:15-1569:16(fn Fsm < 'a >::start_ptr) NOT COVERED
        741: replace `+` with `-` at 1581:24-1581:25(fn Fsm < 'a >::approximate_size) NOT COVERED
        742: replace `/` with `*` at 1631:36-1631:37(fn StateMap::get_state) NOT COVERED
        743: remove `self . map . insert (state . clone (), si) ;` at 1635:8-1635:42(fn StateMap::insert) NOT COVERED
        744: remove `self . states . push (state) ;` at 1636:8-1636:31(fn StateMap::insert) NOT COVERED
        745: remove `self . map . clear () ;` at 1640:8-1640:24(fn StateMap::clear) NOT COVERED
        746: remove `self . states . clear () ;` at 1641:8-1641:27(fn StateMap::clear) NOT COVERED
        747: replace `/` with `*` at 1656:25-1656:26(fn Transitions::num_states) NOT COVERED
        748: replace `>` with `<` at 1664:14-1664:15(fn Transitions::add) NOT COVERED
        749: replace `>` with `<=` at 1664:14-1664:15(fn Transitions::add) NOT COVERED
        750: replace `>` with `>=` at 1664:14-1664:15(fn Transitions::add) NOT COVERED
        751: remove `self . table . extend (repeat (STATE_UNKNOWN) . take (self . num_byte_classes)) ;` at 1667:8-1667:76(fn Transitions::add) NOT COVERED
        752: remove `self . table . clear () ;` at 1673:8-1673:26(fn Transitions::clear) NOT COVERED
        753: replace `+` with `-` at 1678:31-1678:32(fn Transitions::set_next) NOT COVERED
        754: replace `+` with `-` at 1683:31-1683:32(fn Transitions::next) NOT COVERED
        755: replace `*` with `/` at 1688:30-1688:31(fn Transitions::state_heap_size) NOT COVERED
        756: replace `1` with `2` at 1701:17-1701:28(fn StateFlags::is_match) NOT COVERED
        757: replace `1` with `0` at 1701:17-1701:28(fn StateFlags::is_match) NOT COVERED
        758: replace `&` with `|` at 1701:15-1701:16(fn StateFlags::is_match) NOT COVERED
        759: replace `&` with `^` at 1701:15-1701:16(fn StateFlags::is_match) NOT COVERED
        760: replace `0` with `1` at 1701:31-1701:32(fn StateFlags::is_match) NOT COVERED
        761: replace `>` with `<` at 1701:29-1701:30(fn StateFlags::is_match) NOT COVERED
        762: replace `>` with `<=` at 1701:29-1701:30(fn StateFlags::is_match) NOT COVERED
        763: replace `>` with `>=` at 1701:29-1701:30(fn StateFlags::is_match) NOT COVERED
        764: replace `1` with `2` at 1705:18-1705:29(fn StateFlags::set_match) NOT COVERED
        765: replace `1` with `0` at 1705:18-1705:29(fn StateFlags::set_match) NOT COVERED
        766: replace `2` with `3` at 1709:17-1709:29(fn StateFlags::is_word) NOT COVERED
        767: replace `2` with `1` at 1709:17-1709:29(fn StateFlags::is_word) NOT COVERED
        768: replace `&` with `|` at 1709:15-1709:16(fn StateFlags::is_word) NOT COVERED
        769: replace `&` with `^` at 1709:15-1709:16(fn StateFlags::is_word) NOT COVERED
        770: replace `0` with `1` at 1709:32-1709:33(fn StateFlags::is_word) NOT COVERED
        771: replace `>` with `<` at 1709:30-1709:31(fn StateFlags::is_word) NOT COVERED
        772: replace `>` with `<=` at 1709:30-1709:31(fn StateFlags::is_word) NOT COVERED
        773: replace `>` with `>=` at 1709:30-1709:31(fn StateFlags::is_word) NOT COVERED
        774: replace `2` with `3` at 1713:18-1713:30(fn StateFlags::set_word) NOT COVERED
        775: replace `2` with `1` at 1713:18-1713:30(fn StateFlags::set_word) NOT COVERED
        776: replace `4` with `5` at 1717:17-1717:29(fn StateFlags::has_empty) NOT COVERED
        777: replace `4` with `3` at 1717:17-1717:29(fn StateFlags::has_empty) NOT COVERED
        778: replace `&` with `|` at 1717:15-1717:16(fn StateFlags::has_empty) NOT COVERED
        779: replace `&` with `^` at 1717:15-1717:16(fn StateFlags::has_empty) NOT COVERED
        780: replace `0` with `1` at 1717:32-1717:33(fn StateFlags::has_empty) NOT COVERED
        781: replace `>` with `<` at 1717:30-1717:31(fn StateFlags::has_empty) NOT COVERED
        782: replace `>` with `<=` at 1717:30-1717:31(fn StateFlags::has_empty) NOT COVERED
        783: replace `>` with `>=` at 1717:30-1717:31(fn StateFlags::has_empty) NOT COVERED
        784: replace `4` with `5` at 1721:18-1721:30(fn StateFlags::set_empty) NOT COVERED
        785: replace `4` with `3` at 1721:18-1721:30(fn StateFlags::set_empty) NOT COVERED
        786: replace `256` with `257` at 1730:13-1730:16(fn Byte::eof) NOT COVERED
        787: replace `256` with `255` at 1730:13-1730:16(fn Byte::eof) NOT COVERED
        788: replace `256` with `257` at 1733:18-1733:21(fn Byte::is_eof) NOT COVERED
        789: replace `256` with `255` at 1733:18-1733:21(fn Byte::is_eof) NOT COVERED
        790: replace `==` with `!=` at 1733:15-1733:17(fn Byte::is_eof) NOT COVERED
        791: replace `false` with `true` at 1738:27-1738:32(fn Byte::is_ascii_word) NOT COVERED
        792: replace `true` with `false` at 1742:62-1742:66(fn Byte::is_ascii_word) NOT COVERED
        793: replace `false` with `true` at 1743:17-1743:22(fn Byte::is_ascii_word) NOT COVERED
        794: replace `0` with `1` at 1769:18-1769:19(fn Transitions::fmt) NOT COVERED
        795: replace `*` with `/` at 1770:23-1770:24(fn Transitions::fmt) NOT COVERED
        796: replace `+` with `-` at 1771:22-1771:23(fn Transitions::fmt) NOT COVERED
        797: remove `fmtd . entry (& si . to_string (), & TransitionsRow (& self . table [s .. e])) ;` at 1772:12-1772:75(fn Transitions::fmt) NOT COVERED
        798: remove `fmtd . entry (& vb (b as usize), & "DEAD") ;` at 1787:20-1787:56(fn TransitionsRow < 'a >::fmt) NOT COVERED
        799: remove `fmtd . entry (& vb (b as usize), & si . to_string ()) ;` at 1790:20-1790:64(fn TransitionsRow < 'a >::fmt) NOT COVERED
        800: replace `>` with `<` at 1812:9-1812:10(fn vb) NOT COVERED
        801: replace `>` with `<=` at 1812:9-1812:10(fn vb) NOT COVERED
        802: replace `>` with `>=` at 1812:9-1812:10(fn vb) NOT COVERED
        803: replace `>` with `<` at 1821:18-1821:19(fn usize_to_u32) NOT COVERED
        804: replace `>` with `<=` at 1821:18-1821:19(fn usize_to_u32) NOT COVERED
        805: replace `>` with `>=` at 1821:18-1821:19(fn usize_to_u32) NOT COVERED
        806: replace `==` with `!=` at 1830:10-1830:12(fn show_state_ptr) NOT COVERED
        807: replace `==` with `!=` at 1833:10-1833:12(fn show_state_ptr) NOT COVERED
        808: replace `==` with `!=` at 1836:10-1836:12(fn show_state_ptr) NOT COVERED
        809: replace `&` with `|` at 1839:10-1839:11(fn show_state_ptr) NOT COVERED
        810: replace `&` with `^` at 1839:10-1839:11(fn show_state_ptr) NOT COVERED
        811: replace `0` with `1` at 1839:26-1839:27(fn show_state_ptr) NOT COVERED
        812: replace `>` with `<` at 1839:24-1839:25(fn show_state_ptr) NOT COVERED
        813: replace `>` with `<=` at 1839:24-1839:25(fn show_state_ptr) NOT COVERED
        814: replace `>` with `>=` at 1839:24-1839:25(fn show_state_ptr) NOT COVERED
        815: replace `&` with `|` at 1842:10-1842:11(fn show_state_ptr) NOT COVERED
        816: replace `&` with `^` at 1842:10-1842:11(fn show_state_ptr) NOT COVERED
        817: replace `0` with `1` at 1842:26-1842:27(fn show_state_ptr) NOT COVERED
        818: replace `>` with `<` at 1842:24-1842:25(fn show_state_ptr) NOT COVERED
        819: replace `>` with `<=` at 1842:24-1842:25(fn show_state_ptr) NOT COVERED
        820: replace `>` with `>=` at 1842:24-1842:25(fn show_state_ptr) NOT COVERED
        838: replace `128` with `127` at 1869:15-1869:26(fn write_varu32)
        858: replace `|` with `^` at 1882:22-1882:23(fn read_varu32)
        868: replace `0` with `1` at 1887:5-1887:6(fn read_varu32) NOT COVERED
        869: replace `0` with `1` at 1887:8-1887:9(fn read_varu32) NOT COVERED
    src/error.rs
            all 2 mutants survived
        870: replace `79` with `80` at 53:50-53:52(fn Error::fmt) NOT COVERED
        871: replace `79` with `78` at 53:50-53:52(fn Error::fmt) NOT COVERED
    src/exec.rs
            145/155(93.55%) mutants survived
        877: replace `>` with `<` at 116:17-116:34(fn ExecBuilder::parse)
        878: replace `>` with `<=` at 116:17-116:34(fn ExecBuilder::parse)
        879: replace `>` with `>=` at 116:17-116:34(fn ExecBuilder::parse)
        880: remove `!` at 116:17-116:34(fn ExecBuilder::parse)
        881: remove `!` at 116:17-116:34(fn ExecBuilder::parse)
        882: replace `||` with `&&` at 116:17-116:34(fn ExecBuilder::parse)
        883: remove `!` at 116:17-116:34(fn ExecBuilder::parse)
        884: replace `&&` with `||` at 116:17-116:34(fn ExecBuilder::parse)
        885: replace `&&` with `||` at 116:17-116:34(fn ExecBuilder::parse)
        886: remove `!` at 116:17-116:34(fn ExecBuilder::parse)
        887: remove `!` at 116:17-116:34(fn ExecBuilder::parse)
        888: replace `&&` with `||` at 116:17-116:34(fn ExecBuilder::parse)
        889: replace `&&` with `||` at 116:17-116:34(fn ExecBuilder::parse)
        890: remove `!` at 116:17-116:34(fn ExecBuilder::parse)
        892: replace `||` with `&&` at 116:17-116:34(fn ExecBuilder::build)
        898: replace `!=` with `==` at 116:17-116:34(fn ExecBuilder::build_aho_corasick)
        902: replace `<=` with `<` at 116:17-116:34(fn ExecBuilder::build_aho_corasick) NOT COVERED
        903: replace `<=` with `>=` at 116:17-116:34(fn ExecBuilder::build_aho_corasick) NOT COVERED
        904: replace `<=` with `>` at 116:17-116:34(fn ExecBuilder::build_aho_corasick) NOT COVERED
        906: replace `2` with `3` at 416:37-416:38(fn ExecNoSync < 'c >::slots_len) NOT COVERED
        907: replace `2` with `1` at 416:37-416:38(fn ExecNoSync < 'c >::slots_len) NOT COVERED
        908: replace `*` with `/` at 416:35-416:36(fn ExecNoSync < 'c >::slots_len) NOT COVERED
        909: replace `1` with `2` at 420:12-420:13(fn ExecNoSync < 'c >::next_after_empty) NOT COVERED
        910: replace `1` with `0` at 420:12-420:13(fn ExecNoSync < 'c >::next_after_empty) NOT COVERED
        911: replace `+` with `-` at 420:10-420:11(fn ExecNoSync < 'c >::next_after_empty) NOT COVERED
        912: remove `!` at 427:11-427:12(fn ExecNoSync < 'c >::shortest_match_at) NOT COVERED
        913: replace `true` with `false` at 448:20-448:24(fn ExecNoSync < 'c >::shortest_match_at) NOT COVERED
        914: remove `!` at 476:11-476:12(fn ExecNoSync < 'c >::is_match_at) NOT COVERED
        915: replace `false` with `true` at 477:19-477:24(fn ExecNoSync < 'c >::is_match_at) NOT COVERED
        916: replace `true` with `false` at 490:45-490:49(fn ExecNoSync < 'c >::is_match_at) NOT COVERED
        917: replace `false` with `true` at 491:47-491:52(fn ExecNoSync < 'c >::is_match_at) NOT COVERED
        918: replace `true` with `false` at 500:20-500:24(fn ExecNoSync < 'c >::is_match_at) NOT COVERED
        919: replace `true` with `false` at 504:45-504:49(fn ExecNoSync < 'c >::is_match_at) NOT COVERED
        920: replace `false` with `true` at 505:47-505:52(fn ExecNoSync < 'c >::is_match_at) NOT COVERED
        921: replace `true` with `false` at 512:45-512:49(fn ExecNoSync < 'c >::is_match_at) NOT COVERED
        922: replace `false` with `true` at 513:47-513:52(fn ExecNoSync < 'c >::is_match_at) NOT COVERED
        923: replace `false` with `true` at 518:34-518:39(fn ExecNoSync < 'c >::is_match_at) NOT COVERED
        924: remove `!` at 526:11-526:12(fn ExecNoSync < 'c >::find_at)
        925: replace `0` with `1` at 593:26-593:27(fn ExecNoSync < 'c >::captures_read_at) NOT COVERED
        926: replace `1` with `2` at 594:26-594:27(fn ExecNoSync < 'c >::captures_read_at) NOT COVERED
        927: replace `1` with `0` at 594:26-594:27(fn ExecNoSync < 'c >::captures_read_at) NOT COVERED
        928: remove `!` at 600:11-600:12(fn ExecNoSync < 'c >::captures_read_at) NOT COVERED
        929: replace `+` with `-` at 690:62-690:63(fn ExecNoSync < 'c >::find_literals) NOT COVERED
        930: replace `+` with `-` at 690:73-690:74(fn ExecNoSync < 'c >::find_literals) NOT COVERED
        936: replace `+` with `-` at 698:45-698:46(fn ExecNoSync < 'c >::find_literals)
        938: replace `+` with `-` at 706:41-706:42(fn ExecNoSync < 'c >::find_literals) NOT COVERED
        939: replace `+` with `-` at 706:52-706:53(fn ExecNoSync < 'c >::find_literals) NOT COVERED
        940: replace `+` with `-` at 714:32-714:33(fn ExecNoSync < 'c >::find_literals) NOT COVERED
        941: replace `+` with `-` at 714:51-714:52(fn ExecNoSync < 'c >::find_literals) NOT COVERED
        942: replace `false` with `true` at 733:12-733:17(fn ExecNoSync < 'c >::find_dfa_forward) NOT COVERED
        943: replace `==` with `!=` at 739:32-739:34(fn ExecNoSync < 'c >::find_dfa_forward) NOT COVERED
        944: replace `false` with `true` at 746:12-746:17(fn ExecNoSync < 'c >::find_dfa_forward) NOT COVERED
        945: replace `-` with `+` at 748:16-748:17(fn ExecNoSync < 'c >::find_dfa_forward) NOT COVERED
        946: replace `+` with `-` at 750:37-750:38(fn ExecNoSync < 'c >::find_dfa_forward) NOT COVERED
        947: replace `false` with `true` at 773:12-773:17(fn ExecNoSync < 'c >::find_dfa_anchored_reverse) NOT COVERED
        948: replace `-` with `+` at 775:23-775:24(fn ExecNoSync < 'c >::find_dfa_anchored_reverse) NOT COVERED
        949: replace `+` with `-` at 777:37-777:38(fn ExecNoSync < 'c >::find_dfa_anchored_reverse) NOT COVERED
        950: replace `true` with `false` at 787:60-787:64(fn ExecNoSync < 'c >::shortest_dfa) NOT COVERED
        951: replace `<=` with `<` at 832:18-832:20(fn ExecNoSync < 'c >::exec_dfa_reverse_suffix) NOT COVERED
        952: replace `<=` with `>=` at 832:18-832:20(fn ExecNoSync < 'c >::exec_dfa_reverse_suffix) NOT COVERED
        953: replace `<=` with `>` at 832:18-832:20(fn ExecNoSync < 'c >::exec_dfa_reverse_suffix) NOT COVERED
        954: replace `+` with `-` at 837:31-837:32(fn ExecNoSync < 'c >::exec_dfa_reverse_suffix) NOT COVERED
        955: replace `false` with `true` at 841:16-841:21(fn ExecNoSync < 'c >::exec_dfa_reverse_suffix) NOT COVERED
        956: replace `-` with `+` at 843:20-843:21(fn ExecNoSync < 'c >::exec_dfa_reverse_suffix) NOT COVERED
        957: replace `+` with `-` at 846:53-846:54(fn ExecNoSync < 'c >::exec_dfa_reverse_suffix) NOT COVERED
        958: replace `1` with `2` at 849:36-849:37(fn ExecNoSync < 'c >::exec_dfa_reverse_suffix) NOT COVERED
        959: replace `1` with `0` at 849:36-849:37(fn ExecNoSync < 'c >::exec_dfa_reverse_suffix) NOT COVERED
        960: replace `false` with `true` at 887:12-887:17(fn ExecNoSync < 'c >::find_dfa_reverse_suffix) NOT COVERED
        961: replace `false` with `true` at 916:18-916:23(fn ExecNoSync < 'c >::match_nfa_type) NOT COVERED
        962: replace `true` with `false` at 918:12-918:16(fn ExecNoSync < 'c >::match_nfa_type) NOT COVERED
        963: replace `false` with `true` at 919:12-919:17(fn ExecNoSync < 'c >::match_nfa_type) NOT COVERED
        964: replace `false` with `true` at 942:18-942:23(fn ExecNoSync < 'c >::shortest_nfa_type) NOT COVERED
        965: replace `true` with `false` at 944:12-944:16(fn ExecNoSync < 'c >::shortest_nfa_type) NOT COVERED
        966: replace `true` with `false` at 945:12-945:16(fn ExecNoSync < 'c >::shortest_nfa_type) NOT COVERED
        967: replace `1` with `2` at 950:18-950:19(fn ExecNoSync < 'c >::shortest_nfa_type) NOT COVERED
        968: replace `1` with `0` at 950:18-950:19(fn ExecNoSync < 'c >::shortest_nfa_type) NOT COVERED
        969: replace `false` with `true` at 966:18-966:23(fn ExecNoSync < 'c >::find_nfa)
        970: replace `false` with `true` at 968:12-968:17(fn ExecNoSync < 'c >::find_nfa)
        971: replace `false` with `true` at 969:12-969:17(fn ExecNoSync < 'c >::find_nfa)
        975: replace `false` with `true` at 1013:18-1013:23(fn ExecNoSync < 'c >::captures_nfa_type) NOT COVERED
        976: replace `false` with `true` at 1015:12-1015:17(fn ExecNoSync < 'c >::captures_nfa_type) NOT COVERED
        977: replace `false` with `true` at 1016:12-1016:17(fn ExecNoSync < 'c >::captures_nfa_type) NOT COVERED
        978: replace `0` with `1` at 1021:25-1021:26(fn ExecNoSync < 'c >::captures_nfa_type) NOT COVERED
        979: replace `1` with `2` at 1021:35-1021:36(fn ExecNoSync < 'c >::captures_nfa_type) NOT COVERED
        980: replace `1` with `0` at 1021:35-1021:36(fn ExecNoSync < 'c >::captures_nfa_type) NOT COVERED
        981: replace `==` with `!=` at 1052:43-1052:45(fn ExecNoSync < 'c >::exec_nfa)
        982: replace `||` with `&&` at 1052:37-1052:39(fn ExecNoSync < 'c >::exec_nfa)
        983: remove `!` at 1147:11-1147:12(fn ExecNoSync < 'c >::many_matches_at) NOT COVERED
        984: replace `false` with `true` at 1148:19-1148:24(fn ExecNoSync < 'c >::many_matches_at) NOT COVERED
        985: replace `0` with `1` at 1154:24-1154:25(fn ExecNoSync < 'c >::many_matches_at) NOT COVERED
        986: replace `0` with `1` at 1155:24-1155:25(fn ExecNoSync < 'c >::many_matches_at) NOT COVERED
        987: replace `true` with `false` at 1166:45-1166:49(fn ExecNoSync < 'c >::many_matches_at) NOT COVERED
        988: replace `false` with `true` at 1167:47-1167:52(fn ExecNoSync < 'c >::many_matches_at) NOT COVERED
        989: replace `false` with `true` at 1172:24-1172:29(fn ExecNoSync < 'c >::many_matches_at) NOT COVERED
        990: replace `false` with `true` at 1173:24-1173:29(fn ExecNoSync < 'c >::many_matches_at) NOT COVERED
        991: replace `true` with `false` at 1189:45-1189:49(fn ExecNoSync < 'c >::many_matches_at) NOT COVERED
        992: replace `false` with `true` at 1190:47-1190:52(fn ExecNoSync < 'c >::many_matches_at) NOT COVERED
        993: replace `false` with `true` at 1195:24-1195:29(fn ExecNoSync < 'c >::many_matches_at) NOT COVERED
        994: replace `false` with `true` at 1196:24-1196:29(fn ExecNoSync < 'c >::many_matches_at) NOT COVERED
        995: replace `false` with `true` at 1207:16-1207:21(fn ExecNoSync < 'c >::many_matches_at) NOT COVERED
        996: replace `false` with `true` at 1208:16-1208:21(fn ExecNoSync < 'c >::many_matches_at) NOT COVERED
        997: replace `false` with `true` at 1213:23-1213:28(fn ExecNoSync < 'c >::many_matches_at) NOT COVERED
        998: replace `true` with `false` at 1221:12-1221:16(fn ExecNoSync < 'c >::imp) NOT COVERED
        999: replace `1` with `2` at 1227:29-1227:30(fn ExecNoSync < 'c >::imp)
        1000: replace `1` with `0` at 1227:29-1227:30(fn ExecNoSync < 'c >::imp)
        1001: replace `20` with `21` at 1227:34-1227:36(fn ExecNoSync < 'c >::imp)
        1002: replace `20` with `19` at 1227:34-1227:36(fn ExecNoSync < 'c >::imp)
        1003: replace `>` with `<` at 1227:26-1227:27(fn ExecNoSync < 'c >::imp)
        1004: replace `>` with `<=` at 1227:26-1227:27(fn ExecNoSync < 'c >::imp)
        1005: replace `>` with `>=` at 1227:26-1227:27(fn ExecNoSync < 'c >::imp)
        1006: replace `&&` with `||` at 1227:38-1227:40(fn ExecNoSync < 'c >::imp)
        1007: replace `1` with `2` at 1229:32-1229:33(fn ExecNoSync < 'c >::imp) NOT COVERED
        1008: replace `1` with `0` at 1229:32-1229:33(fn ExecNoSync < 'c >::imp) NOT COVERED
        1009: replace `>=` with `<` at 1229:29-1229:31(fn ExecNoSync < 'c >::imp) NOT COVERED
        1010: replace `>=` with `<=` at 1229:29-1229:31(fn ExecNoSync < 'c >::imp) NOT COVERED
        1011: replace `>=` with `>` at 1229:29-1229:31(fn ExecNoSync < 'c >::imp) NOT COVERED
        1012: remove `!` at 1229:37-1229:38(fn ExecNoSync < 'c >::imp) NOT COVERED
        1013: replace `&&` with `||` at 1229:34-1229:36(fn ExecNoSync < 'c >::imp) NOT COVERED
        1014: replace `false` with `true` at 1230:27-1230:32(fn ExecNoSync < 'c >::imp) NOT COVERED
        1015: replace `true` with `false` at 1233:12-1233:16(fn ExecNoSync < 'c >::imp)
        1016: replace `1` with `2` at 1353:31-1353:32(fn ExecReadOnly::imp)
        1017: replace `1` with `0` at 1353:31-1353:32(fn ExecReadOnly::imp)
        1018: replace `!=` with `==` at 1353:28-1353:30(fn ExecReadOnly::imp)
        1019: remove `!` at 1393:15-1393:16(fn ExecReadOnly::imp) NOT COVERED
        1020: replace `2` with `3` at 1397:31-1397:32(fn ExecReadOnly::imp) NOT COVERED
        1021: replace `2` with `1` at 1397:31-1397:32(fn ExecReadOnly::imp) NOT COVERED
        1022: replace `>=` with `<` at 1397:28-1397:30(fn ExecReadOnly::imp) NOT COVERED
        1023: replace `>=` with `<=` at 1397:28-1397:30(fn ExecReadOnly::imp) NOT COVERED
        1024: replace `>=` with `>` at 1397:28-1397:30(fn ExecReadOnly::imp) NOT COVERED
        1025: remove `!` at 1402:15-1402:16(fn ExecReadOnly::imp) NOT COVERED
        1026: replace `&&` with `||` at 1402:41-1402:43(fn ExecReadOnly::imp) NOT COVERED
        1027: replace `false` with `true` at 1437:19-1437:24(fn ExecReadOnly::should_suffix_scan) NOT COVERED
        1028: replace `3` with `4` at 1440:19-1440:20(fn ExecReadOnly::should_suffix_scan) NOT COVERED
        1029: replace `3` with `2` at 1440:19-1440:20(fn ExecReadOnly::should_suffix_scan) NOT COVERED
        1030: replace `>=` with `<` at 1440:16-1440:18(fn ExecReadOnly::should_suffix_scan) NOT COVERED
        1031: replace `>=` with `<=` at 1440:16-1440:18(fn ExecReadOnly::should_suffix_scan) NOT COVERED
        1032: replace `>=` with `>` at 1440:16-1440:18(fn ExecReadOnly::should_suffix_scan) NOT COVERED
        1033: replace `>` with `<` at 1440:32-1440:33(fn ExecReadOnly::should_suffix_scan) NOT COVERED
        1034: replace `>` with `<=` at 1440:32-1440:33(fn ExecReadOnly::should_suffix_scan) NOT COVERED
        1035: replace `>` with `>=` at 1440:32-1440:33(fn ExecReadOnly::should_suffix_scan) NOT COVERED
        1036: replace `&&` with `||` at 1440:21-1440:23(fn ExecReadOnly::should_suffix_scan) NOT COVERED
        1037: remove `!` at 1539:7-1539:8(fn alternation_literals)
        1038: remove `dst . extend_from_slice (c . encode_utf8 (& mut buf) . as_bytes ()) ;` at 1550:12-1550:69(fn alternation_literals) NOT COVERED
        1039: remove `dst . push (b) ;` at 1553:12-1553:23(fn alternation_literals) NOT COVERED
        1040: remove `lits . push (lit) ;` at 1572:8-1572:22(fn alternation_literals) NOT COVERED
    src/expand.rs
            all 27 mutants killed
    src/input.rs
            55/68(80.88%) mutants survived
        1070: replace `&&` with `||` at 30:25-30:27(fn InputAt::is_end) NOT COVERED
        1071: replace `0` with `1` at 54:20-54:21(fn InputAt::is_empty) NOT COVERED
        1072: replace `==` with `!=` at 54:17-54:19(fn InputAt::is_empty) NOT COVERED
        1076: replace `>=` with `>` at 161:13-161:15(fn CharInput < 't >::at)
        1077: replace `0` with `1` at 162:72-162:73(fn CharInput < 't >::at) NOT COVERED
        1078: replace `0` with `1` at 182:28-182:29(fn CharInput < 't >::is_empty_match) NOT COVERED
        1079: replace `==` with `!=` at 182:25-182:27(fn CharInput < 't >::is_empty_match) NOT COVERED
        1080: replace `==` with `!=` at 182:35-182:37(fn CharInput < 't >::is_empty_match) NOT COVERED
        1081: replace `||` with `&&` at 182:30-182:32(fn CharInput < 't >::is_empty_match) NOT COVERED
        1082: replace `==` with `!=` at 186:25-186:27(fn CharInput < 't >::is_empty_match) NOT COVERED
        1083: replace `==` with `!=` at 186:44-186:46(fn CharInput < 't >::is_empty_match) NOT COVERED
        1084: replace `||` with `&&` at 186:39-186:41(fn CharInput < 't >::is_empty_match) NOT COVERED
        1087: replace `==` with `!=` at 189:32-189:34(fn CharInput < 't >::is_empty_match) NOT COVERED
        1088: replace `!=` with `==` at 192:34-192:36(fn CharInput < 't >::is_empty_match) NOT COVERED
        1089: replace `==` with `!=` at 196:34-196:36(fn CharInput < 't >::is_empty_match) NOT COVERED
        1090: replace `!=` with `==` at 200:34-200:36(fn CharInput < 't >::is_empty_match) NOT COVERED
        1091: replace `==` with `!=` at 204:34-204:36(fn CharInput < 't >::is_empty_match) NOT COVERED
        1092: replace `+` with `-` at 214:71-214:72(fn CharInput < 't >::prefix_at) NOT COVERED
        1095: replace `>=` with `>` at 250:13-250:15(fn ByteInput < 't >::at)
        1096: replace `0` with `1` at 251:72-251:73(fn ByteInput < 't >::at) NOT COVERED
        1097: replace `1` with `2` at 257:21-257:22(fn ByteInput < 't >::at)
        1099: replace `0` with `1` at 275:28-275:29(fn ByteInput < 't >::is_empty_match) NOT COVERED
        1100: replace `==` with `!=` at 275:25-275:27(fn ByteInput < 't >::is_empty_match) NOT COVERED
        1101: replace `==` with `!=` at 275:35-275:37(fn ByteInput < 't >::is_empty_match) NOT COVERED
        1102: replace `||` with `&&` at 275:30-275:32(fn ByteInput < 't >::is_empty_match) NOT COVERED
        1103: replace `==` with `!=` at 279:25-279:27(fn ByteInput < 't >::is_empty_match) NOT COVERED
        1104: replace `==` with `!=` at 279:44-279:46(fn ByteInput < 't >::is_empty_match) NOT COVERED
        1105: replace `||` with `&&` at 279:39-279:41(fn ByteInput < 't >::is_empty_match) NOT COVERED
        1108: replace `==` with `!=` at 282:32-282:34(fn ByteInput < 't >::is_empty_match) NOT COVERED
        1109: replace `!=` with `==` at 285:34-285:36(fn ByteInput < 't >::is_empty_match) NOT COVERED
        1110: replace `==` with `!=` at 289:34-289:36(fn ByteInput < 't >::is_empty_match) NOT COVERED
        1111: remove `!` at 296:39-296:40(fn ByteInput < 't >::is_empty_match) NOT COVERED
        1112: replace `&&` with `||` at 296:36-296:38(fn ByteInput < 't >::is_empty_match) NOT COVERED
        1113: replace `false` with `true` at 297:31-297:36(fn ByteInput < 't >::is_empty_match) NOT COVERED
        1114: remove `!` at 299:39-299:40(fn ByteInput < 't >::is_empty_match) NOT COVERED
        1115: replace `&&` with `||` at 299:36-299:38(fn ByteInput < 't >::is_empty_match) NOT COVERED
        1116: replace `false` with `true` at 300:31-300:36(fn ByteInput < 't >::is_empty_match) NOT COVERED
        1117: replace `!=` with `==` at 303:34-303:36(fn ByteInput < 't >::is_empty_match) NOT COVERED
        1118: remove `!` at 310:39-310:40(fn ByteInput < 't >::is_empty_match) NOT COVERED
        1119: replace `&&` with `||` at 310:36-310:38(fn ByteInput < 't >::is_empty_match) NOT COVERED
        1120: replace `false` with `true` at 311:31-311:36(fn ByteInput < 't >::is_empty_match) NOT COVERED
        1121: remove `!` at 313:39-313:40(fn ByteInput < 't >::is_empty_match) NOT COVERED
        1122: replace `&&` with `||` at 313:36-313:38(fn ByteInput < 't >::is_empty_match) NOT COVERED
        1123: replace `false` with `true` at 314:31-314:36(fn ByteInput < 't >::is_empty_match) NOT COVERED
        1124: replace `==` with `!=` at 317:34-317:36(fn ByteInput < 't >::is_empty_match) NOT COVERED
        1125: replace `+` with `-` at 327:71-327:72(fn ByteInput < 't >::prefix_at) NOT COVERED
        1126: replace `==` with `!=` at 363:15-363:17(fn Char::is_none) NOT COVERED
        1127: replace `1` with `2` at 371:38-371:39(fn Char::len_utf8)
        1128: replace `1` with `0` at 371:38-371:39(fn Char::len_utf8)
        1129: replace `false` with `true` at 382:38-382:43(fn Char::is_word_char) NOT COVERED
        1130: replace `<=` with `<` at 390:25-390:27(fn Char::is_word_byte) NOT COVERED
        1131: replace `<=` with `>=` at 390:25-390:27(fn Char::is_word_byte) NOT COVERED
        1132: replace `<=` with `>` at 390:25-390:27(fn Char::is_word_byte) NOT COVERED
        1133: replace `false` with `true` at 391:30-391:35(fn Char::is_word_byte) NOT COVERED
        1134: replace `==` with `!=` at 411:15-411:17(fn Char::eq) NOT COVERED
    src/lib.rs
            17/18(94.44%) mutants survived
        872: replace `false` with `true` at 1:0-1:0(fn ExecBuilder::new_options)
        873: replace `true` with `false` at 1:0-1:0(fn ExecBuilder::new_options)
        874: replace `false` with `true` at 1:0-1:0(fn ExecBuilder::parse)
        875: replace `1` with `2` at 1:0-1:0(fn ExecBuilder::parse)
        876: replace `1` with `0` at 1:0-1:0(fn ExecBuilder::parse)
        893: replace `true` with `false` at 1:0-1:0(fn ExecBuilder::build)
        894: replace `true` with `false` at 1:0-1:0(fn ExecBuilder::build)
        895: replace `true` with `false` at 1:0-1:0(fn ExecBuilder::build)
        896: replace `1` with `2` at 1:0-1:0(fn ExecBuilder::build_aho_corasick)
        897: replace `1` with `0` at 1:0-1:0(fn ExecBuilder::build_aho_corasick)
        900: replace `32` with `33` at 1:0-1:0(fn ExecBuilder::build_aho_corasick) NOT COVERED
        901: replace `32` with `31` at 1:0-1:0(fn ExecBuilder::build_aho_corasick) NOT COVERED
        905: replace `true` with `false` at 1:0-1:0(fn ExecBuilder::build_aho_corasick) NOT COVERED
        1617: replace `0` with `1` at 1:0-1:0(fn RegexSet::is_match) NOT COVERED
        1618: replace `0` with `1` at 1:0-1:0(fn RegexSet::matches) NOT COVERED
        1619: replace `0` with `1` at 1:0-1:0(fn RegexSet::is_match) NOT COVERED
        1620: replace `0` with `1` at 1:0-1:0(fn RegexSet::matches) NOT COVERED
    src/literal/imp.rs
            176/270(65.19%) mutants survived
        1136: remove `!` at 79:25-79:26(fn LiteralSearcher::complete)
        1137: replace `&&` with `||` at 79:22-79:24(fn LiteralSearcher::complete)
        1138: replace `0` with `1` at 87:27-87:28(fn LiteralSearcher::find) NOT COVERED
        1139: replace `0` with `1` at 87:30-87:31(fn LiteralSearcher::find) NOT COVERED
        1140: replace `1` with `2` at 88:67-88:68(fn LiteralSearcher::find) NOT COVERED
        1141: replace `1` with `0` at 88:67-88:68(fn LiteralSearcher::find) NOT COVERED
        1142: replace `+` with `-` at 88:65-88:66(fn LiteralSearcher::find) NOT COVERED
        1143: replace `+` with `-` at 89:65-89:66(fn LiteralSearcher::find) NOT COVERED
        1144: replace `+` with `-` at 90:64-90:65(fn LiteralSearcher::find) NOT COVERED
        1147: replace `>` with `>=` at 103:25-103:26(fn LiteralSearcher::find_start)
        1151: replace `>` with `<` at 116:25-116:26(fn LiteralSearcher::find_end) NOT COVERED
        1152: replace `>` with `<=` at 116:25-116:26(fn LiteralSearcher::find_end) NOT COVERED
        1153: replace `>` with `>=` at 116:25-116:26(fn LiteralSearcher::find_end) NOT COVERED
        1154: replace `-` with `+` at 119:47-119:48(fn LiteralSearcher::find_end) NOT COVERED
        1155: replace `==` with `!=` at 119:19-119:21(fn LiteralSearcher::find_end) NOT COVERED
        1156: replace `-` with `+` at 120:44-120:45(fn LiteralSearcher::find_end) NOT COVERED
        1157: replace `0` with `1` at 150:22-150:23(fn LiteralSearcher::is_empty)
        1158: replace `==` with `!=` at 150:19-150:21(fn LiteralSearcher::is_empty)
        1159: replace `0` with `1` at 157:21-157:22(fn LiteralSearcher::len) NOT COVERED
        1160: replace `1` with `2` at 159:30-159:31(fn LiteralSearcher::len) NOT COVERED
        1161: replace `1` with `0` at 159:30-159:31(fn LiteralSearcher::len) NOT COVERED
        1162: replace `1` with `2` at 160:29-160:30(fn LiteralSearcher::len) NOT COVERED
        1163: replace `1` with `0` at 160:29-160:30(fn LiteralSearcher::len) NOT COVERED
        1164: replace `0` with `1` at 170:21-170:22(fn LiteralSearcher::approximate_size) NOT COVERED
        1165: replace `26` with `27` at 195:31-195:33(fn Matcher::new)
        1166: replace `26` with `25` at 195:31-195:33(fn Matcher::new)
        1167: replace `>=` with `<` at 195:28-195:30(fn Matcher::new)
        1168: replace `>=` with `<=` at 195:28-195:30(fn Matcher::new)
        1169: replace `>=` with `>` at 195:28-195:30(fn Matcher::new)
        1170: replace `1` with `2` at 207:36-207:37(fn Matcher::new) NOT COVERED
        1171: replace `1` with `0` at 207:36-207:37(fn Matcher::new) NOT COVERED
        1172: replace `==` with `!=` at 207:33-207:35(fn Matcher::new) NOT COVERED
        1173: replace `0` with `1` at 208:38-208:39(fn Matcher::new) NOT COVERED
        1174: replace `1` with `2` at 217:55-217:56(fn Matcher::new) NOT COVERED
        1175: replace `1` with `0` at 217:55-217:56(fn Matcher::new) NOT COVERED
        1176: replace `<=` with `<` at 217:52-217:54(fn Matcher::new) NOT COVERED
        1177: replace `<=` with `>=` at 217:52-217:54(fn Matcher::new) NOT COVERED
        1178: replace `<=` with `>` at 217:52-217:54(fn Matcher::new) NOT COVERED
        1179: replace `&&` with `||` at 217:57-217:59(fn Matcher::new) NOT COVERED
        1180: replace `100` with `101` at 218:36-218:39(fn Matcher::new) NOT COVERED
        1181: replace `100` with `99` at 218:36-218:39(fn Matcher::new) NOT COVERED
        1182: replace `<=` with `<` at 218:33-218:35(fn Matcher::new) NOT COVERED
        1183: replace `<=` with `>=` at 218:33-218:35(fn Matcher::new) NOT COVERED
        1184: replace `<=` with `>` at 218:33-218:35(fn Matcher::new) NOT COVERED
        1185: remove `!` at 218:43-218:44(fn Matcher::new) NOT COVERED
        1186: replace `&&` with `||` at 218:40-218:42(fn Matcher::new) NOT COVERED
        1187: replace `true` with `false` at 228:17-228:21(fn Matcher::new) NOT COVERED
        1192: replace `1` with `0` at 254:34-254:35(fn LiteralIter < 'a >::next)
        1193: replace `0` with `1` at 271:37-271:38(fn LiteralIter < 'a >::next) NOT COVERED
        1194: replace `1` with `2` at 272:34-272:35(fn LiteralIter < 'a >::next) NOT COVERED
        1195: replace `1` with `0` at 272:34-272:35(fn LiteralIter < 'a >::next) NOT COVERED
        1196: replace `0` with `1` at 280:37-280:38(fn LiteralIter < 'a >::next) NOT COVERED
        1197: replace `1` with `2` at 281:34-281:35(fn LiteralIter < 'a >::next) NOT COVERED
        1198: replace `1` with `0` at 281:34-281:35(fn LiteralIter < 'a >::next) NOT COVERED
        1199: replace `true` with `false` at 302:22-302:26(fn SingleByteSet::new)
        1200: replace `true` with `false` at 303:23-303:27(fn SingleByteSet::new)
        1201: replace `1` with `2` at 310:58-310:59(fn SingleByteSet::prefixes)
        1202: replace `1` with `0` at 310:58-310:59(fn SingleByteSet::prefixes)
        1203: replace `==` with `!=` at 310:55-310:57(fn SingleByteSet::prefixes)
        1204: replace `&&` with `||` at 310:42-310:44(fn SingleByteSet::prefixes)
        1205: replace `0` with `1` at 311:38-311:39(fn SingleByteSet::prefixes)
        1206: remove `!` at 312:19-312:20(fn SingleByteSet::prefixes)
        1207: replace `127` with `128` at 313:27-313:31(fn SingleByteSet::prefixes)
        1208: replace `127` with `126` at 313:27-313:31(fn SingleByteSet::prefixes)
        1209: replace `>` with `<` at 313:25-313:26(fn SingleByteSet::prefixes)
        1210: replace `>` with `<=` at 313:25-313:26(fn SingleByteSet::prefixes)
        1211: replace `>` with `>=` at 313:25-313:26(fn SingleByteSet::prefixes)
        1212: replace `false` with `true` at 314:41-314:46(fn SingleByteSet::prefixes) NOT COVERED
        1213: remove `sset . dense . push (b) ;` at 316:20-316:38(fn SingleByteSet::prefixes)
        1214: replace `true` with `false` at 317:46-317:50(fn SingleByteSet::prefixes)
        1215: replace `1` with `2` at 327:58-327:59(fn SingleByteSet::suffixes)
        1216: replace `1` with `0` at 327:58-327:59(fn SingleByteSet::suffixes)
        1217: replace `==` with `!=` at 327:55-327:57(fn SingleByteSet::suffixes)
        1218: replace `&&` with `||` at 327:42-327:44(fn SingleByteSet::suffixes)
        1220: replace `1` with `0` at 328:60-328:61(fn SingleByteSet::suffixes)
        1221: remove `!` at 329:19-329:20(fn SingleByteSet::suffixes)
        1222: replace `127` with `128` at 330:27-330:31(fn SingleByteSet::suffixes)
        1223: replace `127` with `126` at 330:27-330:31(fn SingleByteSet::suffixes)
        1224: replace `>` with `<` at 330:25-330:26(fn SingleByteSet::suffixes)
        1225: replace `>` with `<=` at 330:25-330:26(fn SingleByteSet::suffixes)
        1226: replace `>` with `>=` at 330:25-330:26(fn SingleByteSet::suffixes)
        1227: replace `false` with `true` at 331:41-331:46(fn SingleByteSet::suffixes) NOT COVERED
        1228: remove `sset . dense . push (b) ;` at 333:20-333:38(fn SingleByteSet::suffixes)
        1229: replace `true` with `false` at 334:46-334:50(fn SingleByteSet::suffixes)
        1230: replace `0` with `1` at 346:35-346:36(fn SingleByteSet::find) NOT COVERED
        1231: replace `0` with `1` at 347:36-347:37(fn SingleByteSet::find) NOT COVERED
        1232: replace `1` with `2` at 347:51-347:52(fn SingleByteSet::find) NOT COVERED
        1233: replace `1` with `0` at 347:51-347:52(fn SingleByteSet::find) NOT COVERED
        1234: replace `0` with `1` at 348:36-348:37(fn SingleByteSet::find) NOT COVERED
        1235: replace `1` with `2` at 348:51-348:52(fn SingleByteSet::find) NOT COVERED
        1236: replace `1` with `0` at 348:51-348:52(fn SingleByteSet::find) NOT COVERED
        1237: replace `2` with `3` at 348:66-348:67(fn SingleByteSet::find) NOT COVERED
        1238: replace `2` with `1` at 348:66-348:67(fn SingleByteSet::find) NOT COVERED
        1239: replace `*` with `/` at 364:26-364:27(fn SingleByteSet::approximate_size) NOT COVERED
        1240: replace `*` with `/` at 365:33-365:34(fn SingleByteSet::approximate_size) NOT COVERED
        1241: replace `+` with `-` at 365:12-365:13(fn SingleByteSet::approximate_size) NOT COVERED
        1245: replace `1` with `0` at 416:21-416:22(fn FreqyPacked::new)
        1246: replace `<` with `<=` at 417:28-417:29(fn FreqyPacked::new)
        1247: replace `<` with `>=` at 417:28-417:29(fn FreqyPacked::new)
        1248: replace `<` with `>` at 417:28-417:29(fn FreqyPacked::new)
        1249: replace `==` with `!=` at 422:21-422:23(fn FreqyPacked::new)
        1250: replace `!=` with `==` at 424:24-424:26(fn FreqyPacked::new)
        1251: replace `<` with `<=` at 424:49-424:50(fn FreqyPacked::new)
        1252: replace `<` with `>=` at 424:49-424:50(fn FreqyPacked::new)
        1253: replace `<` with `>` at 424:49-424:50(fn FreqyPacked::new)
        1254: replace `&&` with `||` at 424:33-424:35(fn FreqyPacked::new)
        1257: replace `0` with `1` at 447:22-447:23(fn FreqyPacked::empty)
        1258: replace `0` with `1` at 448:19-448:20(fn FreqyPacked::empty)
        1259: replace `0` with `1` at 449:20-449:21(fn FreqyPacked::empty)
        1260: replace `0` with `1` at 450:19-450:20(fn FreqyPacked::empty)
        1261: replace `0` with `1` at 451:20-451:21(fn FreqyPacked::empty)
        1262: replace `<` with `<=` at 458:26-458:27(fn FreqyPacked::find)
        1264: replace `<` with `>` at 458:26-458:27(fn FreqyPacked::find)
        1265: replace `||` with `&&` at 458:38-458:40(fn FreqyPacked::find)
        1266: replace `<` with `<=` at 462:16-462:17(fn FreqyPacked::find)
        1267: replace `<` with `>=` at 462:16-462:17(fn FreqyPacked::find)
        1269: replace `-` with `+` at 467:26-467:27(fn FreqyPacked::find)
        1273: replace `>` with `>=` at 469:19-469:20(fn FreqyPacked::find)
        1274: replace `==` with `!=` at 473:36-473:38(fn FreqyPacked::find)
        1276: replace `&&` with `||` at 473:50-473:52(fn FreqyPacked::find)
        1277: replace `1` with `2` at 476:17-476:18(fn FreqyPacked::find)
        1279: replace `<` with `<=` at 483:22-483:23(fn FreqyPacked::is_suffix) NOT COVERED
        1280: replace `<` with `>=` at 483:22-483:23(fn FreqyPacked::is_suffix) NOT COVERED
        1281: replace `<` with `>` at 483:22-483:23(fn FreqyPacked::is_suffix) NOT COVERED
        1282: replace `false` with `true` at 484:19-484:24(fn FreqyPacked::is_suffix) NOT COVERED
        1283: replace `-` with `+` at 486:24-486:25(fn FreqyPacked::is_suffix) NOT COVERED
        1284: replace `==` with `!=` at 486:40-486:42(fn FreqyPacked::is_suffix) NOT COVERED
        1285: replace `*` with `/` at 498:23-498:24(fn FreqyPacked::approximate_size) NOT COVERED
        1292: replace `2` with `3` at 604:41-604:42(fn BoyerMooreSearch::find)
        1293: replace `2` with `1` at 604:41-604:42(fn BoyerMooreSearch::find)
        1298: replace `>` with `>=` at 606:26-606:27(fn BoyerMooreSearch::find)
        1299: replace `1` with `2` at 609:48-609:49(fn BoyerMooreSearch::find)
        1306: replace `>=` with `>` at 616:30-616:32(fn BoyerMooreSearch::find)
        1322: replace `-` with `+` at 697:23-697:24(fn BoyerMooreSearch::should_use) NOT COVERED
        1323: replace `>` with `<` at 701:22-701:23(fn BoyerMooreSearch::should_use) NOT COVERED
        1324: replace `>` with `<=` at 701:22-701:23(fn BoyerMooreSearch::should_use) NOT COVERED
        1325: replace `>` with `>=` at 701:22-701:23(fn BoyerMooreSearch::should_use) NOT COVERED
        1326: replace `>=` with `<` at 703:52-703:54(fn BoyerMooreSearch::should_use) NOT COVERED
        1327: replace `>=` with `<=` at 703:52-703:54(fn BoyerMooreSearch::should_use) NOT COVERED
        1328: replace `>=` with `>` at 703:52-703:54(fn BoyerMooreSearch::should_use) NOT COVERED
        1329: replace `&&` with `||` at 703:12-703:14(fn BoyerMooreSearch::should_use) NOT COVERED
        1342: replace `0` with `1` at 750:23-750:24(fn BoyerMooreSearch::skip_loop)
        1343: replace `!=` with `==` at 750:20-750:22(fn BoyerMooreSearch::skip_loop)
        1344: replace `0` with `1` at 757:27-757:28(fn BoyerMooreSearch::skip_loop)
        1345: replace `!=` with `==` at 757:24-757:26(fn BoyerMooreSearch::skip_loop)
        1346: replace `0` with `1` at 764:31-764:32(fn BoyerMooreSearch::skip_loop)
        1347: replace `!=` with `==` at 764:28-764:30(fn BoyerMooreSearch::skip_loop)
        1348: replace `-` with `+` at 772:38-772:39(fn BoyerMooreSearch::skip_loop)
        1349: replace `16` with `17` at 773:30-773:32(fn BoyerMooreSearch::skip_loop)
        1350: replace `16` with `15` at 773:30-773:32(fn BoyerMooreSearch::skip_loop)
        1351: replace `*` with `/` at 773:33-773:34(fn BoyerMooreSearch::skip_loop)
        1352: replace `>` with `<` at 773:28-773:29(fn BoyerMooreSearch::skip_loop)
        1353: replace `>` with `<=` at 773:28-773:29(fn BoyerMooreSearch::skip_loop)
        1354: replace `>` with `>=` at 773:28-773:29(fn BoyerMooreSearch::skip_loop)
        1355: replace `>=` with `<` at 778:42-778:44(fn BoyerMooreSearch::skip_loop) NOT COVERED
        1356: replace `>=` with `<=` at 778:42-778:44(fn BoyerMooreSearch::skip_loop) NOT COVERED
        1357: replace `>=` with `>` at 778:42-778:44(fn BoyerMooreSearch::skip_loop) NOT COVERED
        1358: replace `1` with `2` at 787:45-787:46(fn BoyerMooreSearch::skip_loop)
        1359: replace `1` with `0` at 787:45-787:46(fn BoyerMooreSearch::skip_loop)
        1361: replace `0` with `1` at 788:43-788:44(fn BoyerMooreSearch::skip_loop)
        1363: replace `+` with `-` at 796:44-796:45(fn BoyerMooreSearch::skip_loop)
        1372: replace `<` with `<=` at 831:29-831:30(fn BoyerMooreSearch::select_guard)
        1373: replace `<` with `>=` at 831:29-831:30(fn BoyerMooreSearch::select_guard)
        1374: replace `<` with `>` at 831:29-831:30(fn BoyerMooreSearch::select_guard)
        1382: replace `3735928495` with `3735928496` at 850:19-850:29(fn BoyerMooreSearch::compile_md2_shift)
        1383: replace `3735928495` with `3735928494` at 850:19-850:29(fn BoyerMooreSearch::compile_md2_shift)
        1387: replace `0` with `1` at 854:18-854:19(fn BoyerMooreSearch::compile_md2_shift)
        1388: replace `>` with `<` at 854:16-854:17(fn BoyerMooreSearch::compile_md2_shift)
        1391: replace `==` with `!=` at 855:26-855:28(fn BoyerMooreSearch::compile_md2_shift)
        1394: replace `-` with `+` at 856:38-856:39(fn BoyerMooreSearch::compile_md2_shift)
        1399: replace `1` with `0` at 863:24-863:25(fn BoyerMooreSearch::compile_md2_shift)
        1401: replace `*` with `/` at 867:28-867:29(fn BoyerMooreSearch::approximate_size) NOT COVERED
        1402: replace `256` with `257` at 868:15-868:18(fn BoyerMooreSearch::approximate_size) NOT COVERED
        1403: replace `256` with `255` at 868:15-868:18(fn BoyerMooreSearch::approximate_size) NOT COVERED
        1404: replace `*` with `/` at 868:19-868:20(fn BoyerMooreSearch::approximate_size) NOT COVERED
        1405: replace `+` with `-` at 868:12-868:13(fn BoyerMooreSearch::approximate_size) NOT COVERED
    src/pikevm.rs
            all 63 mutants survived
        1406: remove `cache . clist . resize (prog . len (), prog . captures . len ()) ;` at 100:8-100:59(fn Fsm < 'r, I >::exec) NOT COVERED
        1407: remove `cache . nlist . resize (prog . len (), prog . captures . len ()) ;` at 101:8-101:59(fn Fsm < 'r, I >::exec) NOT COVERED
        1408: replace `false` with `true` at 124:26-124:31(fn Fsm < 'r, I >::exec_) NOT COVERED
        1409: replace `false` with `true` at 125:30-125:35(fn Fsm < 'r, I >::exec_) NOT COVERED
        1410: remove `clist . set . clear () ;` at 126:8-126:25(fn Fsm < 'r, I >::exec_) NOT COVERED
        1411: remove `nlist . set . clear () ;` at 127:8-127:25(fn Fsm < 'r, I >::exec_) NOT COVERED
        1412: replace `1` with `2` at 140:48-140:49(fn Fsm < 'r, I >::exec_) NOT COVERED
        1413: replace `1` with `0` at 140:48-140:49(fn Fsm < 'r, I >::exec_) NOT COVERED
        1414: replace `<=` with `<` at 140:45-140:47(fn Fsm < 'r, I >::exec_) NOT COVERED
        1415: replace `<=` with `>=` at 140:45-140:47(fn Fsm < 'r, I >::exec_) NOT COVERED
        1416: replace `<=` with `>` at 140:45-140:47(fn Fsm < 'r, I >::exec_) NOT COVERED
        1417: replace `&&` with `||` at 140:28-140:30(fn Fsm < 'r, I >::exec_) NOT COVERED
        1418: replace `||` with `&&` at 141:20-141:22(fn Fsm < 'r, I >::exec_) NOT COVERED
        1419: remove `!` at 142:24-142:25(fn Fsm < 'r, I >::exec_) NOT COVERED
        1420: replace `&&` with `||` at 142:39-142:41(fn Fsm < 'r, I >::exec_) NOT COVERED
        1421: replace `||` with `&&` at 142:20-142:22(fn Fsm < 'r, I >::exec_) NOT COVERED
        1422: remove `!` at 150:19-150:20(fn Fsm < 'r, I >::exec_) NOT COVERED
        1423: remove `!` at 162:20-162:21(fn Fsm < 'r, I >::exec_) NOT COVERED
        1424: remove `!` at 162:52-162:53(fn Fsm < 'r, I >::exec_) NOT COVERED
        1425: replace `&&` with `||` at 162:49-162:51(fn Fsm < 'r, I >::exec_) NOT COVERED
        1426: replace `||` with `&&` at 162:16-162:18(fn Fsm < 'r, I >::exec_) NOT COVERED
        1427: replace `0` with `1` at 164:44-164:45(fn Fsm < 'r, I >::exec_) NOT COVERED
        1428: remove `self . add (& mut clist, slots, 0, at) ;` at 164:16-164:50(fn Fsm < 'r, I >::exec_) NOT COVERED
        1429: replace `0` with `1` at 171:21-171:22(fn Fsm < 'r, I >::exec_) NOT COVERED
        1430: replace `true` with `false` at 182:30-182:34(fn Fsm < 'r, I >::exec_) NOT COVERED
        1431: replace `||` with `&&` at 183:46-183:48(fn Fsm < 'r, I >::exec_) NOT COVERED
        1432: replace `1` with `2` at 189:50-189:51(fn Fsm < 'r, I >::exec_) NOT COVERED
        1433: replace `1` with `0` at 189:50-189:51(fn Fsm < 'r, I >::exec_) NOT COVERED
        1434: replace `==` with `!=` at 189:47-189:49(fn Fsm < 'r, I >::exec_) NOT COVERED
        1435: replace `>=` with `<` at 202:24-202:26(fn Fsm < 'r, I >::exec_) NOT COVERED
        1436: replace `>=` with `<=` at 202:24-202:26(fn Fsm < 'r, I >::exec_) NOT COVERED
        1437: replace `>=` with `>` at 202:24-202:26(fn Fsm < 'r, I >::exec_) NOT COVERED
        1438: remove `mem :: swap (clist, nlist) ;` at 206:12-206:35(fn Fsm < 'r, I >::exec_) NOT COVERED
        1439: remove `nlist . set . clear () ;` at 207:12-207:29(fn Fsm < 'r, I >::exec_) NOT COVERED
        1440: replace `<` with `<=` at 237:30-237:31(fn Fsm < 'r, I >::step) NOT COVERED
        1441: replace `<` with `>=` at 237:30-237:31(fn Fsm < 'r, I >::step) NOT COVERED
        1442: replace `<` with `>` at 237:30-237:31(fn Fsm < 'r, I >::step) NOT COVERED
        1443: replace `true` with `false` at 238:42-238:46(fn Fsm < 'r, I >::step) NOT COVERED
        1444: replace `true` with `false` at 243:16-243:20(fn Fsm < 'r, I >::step) NOT COVERED
        1445: replace `==` with `!=` at 246:26-246:28(fn Fsm < 'r, I >::step) NOT COVERED
        1446: remove `self . add (nlist, thread_caps, inst . goto, at_next) ;` at 247:20-247:68(fn Fsm < 'r, I >::step) NOT COVERED
        1447: replace `false` with `true` at 249:16-249:21(fn Fsm < 'r, I >::step) NOT COVERED
        1448: remove `self . add (nlist, thread_caps, inst . goto, at_next) ;` at 253:20-253:68(fn Fsm < 'r, I >::step) NOT COVERED
        1449: replace `false` with `true` at 255:16-255:21(fn Fsm < 'r, I >::step) NOT COVERED
        1450: remove `self . add (nlist, thread_caps, inst . goto, at_next) ;` at 260:24-260:72(fn Fsm < 'r, I >::step) NOT COVERED
        1451: replace `false` with `true` at 263:16-263:21(fn Fsm < 'r, I >::step) NOT COVERED
        1452: replace `false` with `true` at 265:49-265:54(fn Fsm < 'r, I >::step) NOT COVERED
        1453: remove `self . stack . push (FollowEpsilon :: IP (ip)) ;` at 278:8-278:46(fn Fsm < 'r, I >::add) NOT COVERED
        1454: remove `self . add_step (nlist, thread_caps, ip, at) ;` at 282:20-282:61(fn Fsm < 'r, I >::add) NOT COVERED
        1455: remove `nlist . set . insert (ip) ;` at 309:12-309:32(fn Fsm < 'r, I >::add_step) NOT COVERED
        1456: replace `<` with `<=` at 317:33-317:34(fn Fsm < 'r, I >::add_step) NOT COVERED
        1457: replace `<` with `>=` at 317:33-317:34(fn Fsm < 'r, I >::add_step) NOT COVERED
        1458: replace `<` with `>` at 317:33-317:34(fn Fsm < 'r, I >::add_step) NOT COVERED
        1459: remove `self . stack . push (FollowEpsilon :: Capture  { slot : inst . slot, pos : thread_caps [inst . slot], }) ;` at 318:24-321:26(fn Fsm < 'r, I >::add_step) NOT COVERED
        1460: remove `self . stack . push (FollowEpsilon :: IP (inst . goto2)) ;` at 327:20-327:66(fn Fsm < 'r, I >::add_step) NOT COVERED
        1461: replace `0` with `1` at 344:38-344:39(fn Threads::new)
        1462: replace `0` with `1` at 344:74-344:75(fn Threads::new)
        1463: replace `==` with `!=` at 348:21-348:23(fn Threads::resize) NOT COVERED
        1464: replace `2` with `3` at 351:40-351:41(fn Threads::resize) NOT COVERED
        1465: replace `2` with `1` at 351:40-351:41(fn Threads::resize) NOT COVERED
        1466: replace `*` with `/` at 351:38-351:39(fn Threads::resize) NOT COVERED
        1467: replace `*` with `/` at 357:19-357:20(fn Threads::caps) NOT COVERED
        1468: replace `+` with `-` at 358:28-358:29(fn Threads::caps) NOT COVERED
    src/prog.rs
            69/75(92.00%) mutants survived
        1469: replace `0` with `1` at 86:19-86:20(fn Program::new)
        1470: replace `true` with `false` at 88:23-88:27(fn Program::new)
        1471: replace `false` with `true` at 89:22-89:27(fn Program::new)
        1474: replace `false` with `true` at 92:31-92:36(fn Program::new)
        1475: replace `false` with `true` at 93:29-93:34(fn Program::new)
        1476: replace `false` with `true` at 94:39-94:44(fn Program::new)
        1477: replace `2` with `3` at 96:28-96:29(fn Program::new)
        1478: replace `2` with `1` at 96:28-96:29(fn Program::new)
        1479: replace `1` with `2` at 96:33-96:34(fn Program::new)
        1480: replace `1` with `0` at 96:33-96:34(fn Program::new)
        1481: replace `20` with `21` at 96:38-96:40(fn Program::new)
        1482: replace `20` with `19` at 96:38-96:40(fn Program::new)
        1483: replace `*` with `/` at 96:30-96:31(fn Program::new)
        1484: replace `1` with `2` at 114:32-114:33(fn Program::leads_to_match) NOT COVERED
        1485: replace `1` with `0` at 114:32-114:33(fn Program::leads_to_match) NOT COVERED
        1486: replace `>` with `<` at 114:30-114:31(fn Program::leads_to_match) NOT COVERED
        1487: replace `>` with `<=` at 114:30-114:31(fn Program::leads_to_match) NOT COVERED
        1488: replace `>` with `>=` at 114:30-114:31(fn Program::leads_to_match) NOT COVERED
        1489: replace `false` with `true` at 118:19-118:24(fn Program::leads_to_match) NOT COVERED
        1490: replace `true` with `false` at 121:30-121:34(fn Program::leads_to_match) NOT COVERED
        1491: replace `false` with `true` at 122:17-122:22(fn Program::leads_to_match) NOT COVERED
        1492: remove `!` at 129:23-129:24(fn Program::needs_dotstar)
        1493: replace `&&` with `||` at 129:20-129:22(fn Program::needs_dotstar)
        1494: remove `!` at 129:43-129:44(fn Program::needs_dotstar)
        1495: replace `&&` with `||` at 129:40-129:42(fn Program::needs_dotstar)
        1496: replace `||` with `&&` at 135:22-135:24(fn Program::uses_bytes)
        1497: replace `*` with `/` at 151:20-151:21(fn Program::approximate_size) NOT COVERED
        1498: replace `*` with `/` at 152:34-152:35(fn Program::approximate_size) NOT COVERED
        1499: replace `+` with `-` at 152:12-152:13(fn Program::approximate_size) NOT COVERED
        1500: replace `*` with `/` at 153:35-153:36(fn Program::approximate_size) NOT COVERED
        1501: replace `+` with `-` at 153:12-153:13(fn Program::approximate_size) NOT COVERED
        1502: replace `+` with `-` at 155:44-155:45(fn Program::approximate_size) NOT COVERED
        1503: replace `*` with `/` at 155:16-155:17(fn Program::approximate_size) NOT COVERED
        1504: replace `+` with `-` at 154:12-154:13(fn Program::approximate_size) NOT COVERED
        1505: replace `*` with `/` at 156:39-156:40(fn Program::approximate_size) NOT COVERED
        1506: replace `+` with `-` at 156:12-156:13(fn Program::approximate_size) NOT COVERED
        1507: replace `+` with `-` at 157:12-157:13(fn Program::approximate_size) NOT COVERED
        1508: replace `1` with `2` at 175:29-175:30(fn Program::with_goto) NOT COVERED
        1509: replace `1` with `0` at 175:29-175:30(fn Program::with_goto) NOT COVERED
        1510: replace `+` with `-` at 175:27-175:28(fn Program::with_goto) NOT COVERED
        1511: replace `==` with `!=` at 175:20-175:22(fn Program::with_goto) NOT COVERED
        1512: replace `==` with `!=` at 233:18-233:20(fn Program::fmt) NOT COVERED
        1513: replace `true` with `false` at 302:30-302:34(fn Inst::is_match) NOT COVERED
        1514: replace `false` with `true` at 303:17-303:22(fn Inst::is_match) NOT COVERED
        1515: replace `4` with `5` at 386:41-386:42(fn InstRanges::matches) NOT COVERED
        1516: replace `4` with `3` at 386:41-386:42(fn InstRanges::matches) NOT COVERED
        1517: replace `<` with `<=` at 387:17-387:18(fn InstRanges::matches) NOT COVERED
        1518: replace `<` with `>=` at 387:17-387:18(fn InstRanges::matches) NOT COVERED
        1519: replace `<` with `>` at 387:17-387:18(fn InstRanges::matches) NOT COVERED
        1520: replace `false` with `true` at 388:23-388:28(fn InstRanges::matches) NOT COVERED
        1521: replace `<=` with `<` at 390:17-390:19(fn InstRanges::matches) NOT COVERED
        1522: replace `<=` with `>=` at 390:17-390:19(fn InstRanges::matches) NOT COVERED
        1523: replace `<=` with `>` at 390:17-390:19(fn InstRanges::matches) NOT COVERED
        1524: replace `true` with `false` at 391:23-391:27(fn InstRanges::matches) NOT COVERED
        1525: replace `<` with `<=` at 396:23-396:24(fn InstRanges::matches) NOT COVERED
        1526: replace `<` with `>=` at 396:23-396:24(fn InstRanges::matches) NOT COVERED
        1527: replace `<` with `>` at 396:23-396:24(fn InstRanges::matches) NOT COVERED
        1528: replace `>` with `<` at 398:30-398:31(fn InstRanges::matches) NOT COVERED
        1529: replace `>` with `<=` at 398:30-398:31(fn InstRanges::matches) NOT COVERED
        1530: replace `>` with `>=` at 398:30-398:31(fn InstRanges::matches) NOT COVERED
        1531: replace `1` with `2` at 412:27-412:28(fn InstRanges::num_chars) NOT COVERED
        1532: replace `1` with `0` at 412:27-412:28(fn InstRanges::num_chars) NOT COVERED
        1533: replace `+` with `-` at 412:29-412:30(fn InstRanges::num_chars) NOT COVERED
        1534: replace `-` with `+` at 412:42-412:43(fn InstRanges::num_chars) NOT COVERED
        1535: replace `0` with `1` at 413:18-413:19(fn InstRanges::num_chars) NOT COVERED
        1536: replace `+` with `-` at 413:36-413:37(fn InstRanges::num_chars) NOT COVERED
        1538: replace `<=` with `>=` at 432:19-432:21(fn InstBytes::matches)
        1541: replace `<=` with `>=` at 432:35-432:37(fn InstBytes::matches)
        1543: replace `&&` with `||` at 432:27-432:29(fn InstBytes::matches)
    src/re_builder.rs
            21/23(91.30%) mutants survived
        1544: replace `10` with `11` at 22:24-22:26(fn RegexOptions::default)
        1545: replace `10` with `9` at 22:24-22:26(fn RegexOptions::default)
        1546: replace `1` with `2` at 22:30-22:31(fn RegexOptions::default)
        1548: replace `20` with `21` at 22:35-22:37(fn RegexOptions::default)
        1549: replace `20` with `19` at 22:35-22:37(fn RegexOptions::default)
        1551: replace `2` with `3` at 23:28-23:29(fn RegexOptions::default)
        1552: replace `2` with `1` at 23:28-23:29(fn RegexOptions::default)
        1553: replace `1` with `2` at 23:33-23:34(fn RegexOptions::default)
        1554: replace `1` with `0` at 23:33-23:34(fn RegexOptions::default)
        1555: replace `20` with `21` at 23:38-23:40(fn RegexOptions::default)
        1556: replace `20` with `19` at 23:38-23:40(fn RegexOptions::default)
        1557: replace `*` with `/` at 23:30-23:31(fn RegexOptions::default)
        1558: replace `250` with `251` at 24:24-24:27(fn RegexOptions::default)
        1559: replace `250` with `249` at 24:24-24:27(fn RegexOptions::default)
        1560: replace `false` with `true` at 25:30-25:35(fn RegexOptions::default)
        1561: replace `false` with `true` at 26:24-26:29(fn RegexOptions::default)
        1562: replace `false` with `true` at 27:34-27:39(fn RegexOptions::default)
        1563: replace `false` with `true` at 28:24-28:29(fn RegexOptions::default)
        1564: replace `false` with `true` at 29:31-29:36(fn RegexOptions::default)
        1565: replace `true` with `false` at 30:21-30:25(fn RegexOptions::default)
        1566: replace `false` with `true` at 31:19-31:24(fn RegexOptions::default)
    src/re_bytes.rs
            48/50(96.00%) mutants survived
        1567: replace `0` with `1` at 128:31-128:32(fn Regex::is_match) NOT COVERED
        1568: replace `0` with `1` at 152:27-152:28(fn Regex::find) NOT COVERED
        1569: replace `0` with `1` at 242:47-242:48(fn Regex::captures) NOT COVERED
        1571: replace `1` with `2` at 447:28-447:29(fn Regex::replace) NOT COVERED
        1572: replace `1` with `0` at 447:28-447:29(fn Regex::replace) NOT COVERED
        1573: replace `0` with `1` at 461:28-461:29(fn Regex::replace_all) NOT COVERED
        1574: replace `0` with `1` at 482:33-482:34(fn Regex::replacen) NOT COVERED
        1575: replace `0` with `1` at 484:27-484:28(fn Regex::replacen) NOT COVERED
        1576: replace `>` with `<` at 484:25-484:26(fn Regex::replacen) NOT COVERED
        1577: replace `>` with `<=` at 484:25-484:26(fn Regex::replacen) NOT COVERED
        1578: replace `>` with `>=` at 484:25-484:26(fn Regex::replacen) NOT COVERED
        1579: replace `>=` with `<` at 484:34-484:36(fn Regex::replacen) NOT COVERED
        1580: replace `>=` with `<=` at 484:34-484:36(fn Regex::replacen) NOT COVERED
        1581: replace `>=` with `>` at 484:34-484:36(fn Regex::replacen) NOT COVERED
        1582: replace `&&` with `||` at 484:29-484:31(fn Regex::replacen) NOT COVERED
        1583: remove `new . extend_from_slice (& text [last_match .. m . start ()]) ;` at 487:16-487:67(fn Regex::replacen) NOT COVERED
        1584: remove `new . extend_from_slice (& rep) ;` at 488:16-488:43(fn Regex::replacen) NOT COVERED
        1585: remove `new . extend_from_slice (& text [last_match ..]) ;` at 491:12-491:54(fn Regex::replacen) NOT COVERED
        1586: replace `0` with `1` at 502:29-502:30(fn Regex::replacen) NOT COVERED
        1587: replace `0` with `1` at 504:23-504:24(fn Regex::replacen) NOT COVERED
        1588: replace `>` with `<` at 504:21-504:22(fn Regex::replacen) NOT COVERED
        1589: replace `>` with `<=` at 504:21-504:22(fn Regex::replacen) NOT COVERED
        1590: replace `>` with `>=` at 504:21-504:22(fn Regex::replacen) NOT COVERED
        1591: replace `>=` with `<` at 504:30-504:32(fn Regex::replacen) NOT COVERED
        1592: replace `>=` with `<=` at 504:30-504:32(fn Regex::replacen) NOT COVERED
        1593: replace `>=` with `>` at 504:30-504:32(fn Regex::replacen) NOT COVERED
        1594: replace `&&` with `||` at 504:25-504:27(fn Regex::replacen) NOT COVERED
        1595: replace `0` with `1` at 508:28-508:29(fn Regex::replacen) NOT COVERED
        1596: remove `new . extend_from_slice (& text [last_match .. m . start ()]) ;` at 509:12-509:63(fn Regex::replacen) NOT COVERED
        1597: remove `rep . replace_append (& cap, & mut new) ;` at 510:12-510:46(fn Regex::replacen) NOT COVERED
        1598: remove `new . extend_from_slice (& text [last_match ..]) ;` at 513:8-513:50(fn Regex::replacen) NOT COVERED
        1599: replace `0` with `1` at 542:37-542:38(fn Regex::shortest_match) NOT COVERED
        1600: replace `0` with `1` at 601:42-601:43(fn Regex::captures_read) NOT COVERED
        1601: replace `0` with `1` at 642:32-642:33(fn Regex::as_str) NOT COVERED
        1602: replace `>=` with `<` at 729:29-729:31(fn Split < 'r, 't >::next)
        1603: replace `>=` with `<=` at 729:29-729:31(fn Split < 'r, 't >::next)
        1605: replace `0` with `1` at 761:21-761:22(fn SplitN < 'r, 't >::next) NOT COVERED
        1606: replace `==` with `!=` at 761:18-761:20(fn SplitN < 'r, 't >::next) NOT COVERED
        1607: replace `1` with `2` at 764:18-764:19(fn SplitN < 'r, 't >::next) NOT COVERED
        1608: replace `1` with `0` at 764:18-764:19(fn SplitN < 'r, 't >::next) NOT COVERED
        1609: replace `0` with `1` at 765:21-765:22(fn SplitN < 'r, 't >::next) NOT COVERED
        1610: replace `==` with `!=` at 765:18-765:20(fn SplitN < 'r, 't >::next) NOT COVERED
        1611: remove `s . push_str (& escape_byte (b)) ;` at 953:16-953:43(fn CapturesDebug < 'c, 't >::escape_bytes) NOT COVERED
        1612: remove `map . entry (& name, & m) ;` at 973:16-973:36(fn CapturesDebug < 'c, 't >::fmt) NOT COVERED
        1613: remove `map . entry (& slot, & m) ;` at 975:16-975:36(fn CapturesDebug < 'c, 't >::fmt) NOT COVERED
        1614: remove `caps . expand (* self, dst) ;` at 1120:8-1120:31(fn & 'a [u8]::replace_append) NOT COVERED
        1615: remove `dst . extend_from_slice ((* self) (caps) . as_ref ()) ;` at 1137:8-1137:53(fn F::replace_append) NOT COVERED
        1616: remove `dst . extend_from_slice (self . 0) ;` at 1153:8-1153:37(fn NoExpand < 't >::replace_append) NOT COVERED
    src/re_trait.rs
            all 28 mutants survived
        1621: replace `2` with `3` at 20:26-20:27(fn Locations::pos) NOT COVERED
        1622: replace `2` with `1` at 20:26-20:27(fn Locations::pos) NOT COVERED
        1623: replace `*` with `/` at 20:24-20:25(fn Locations::pos) NOT COVERED
        1624: replace `2` with `3` at 20:33-20:34(fn Locations::pos) NOT COVERED
        1625: replace `2` with `1` at 20:33-20:34(fn Locations::pos) NOT COVERED
        1626: replace `*` with `/` at 20:31-20:32(fn Locations::pos) NOT COVERED
        1627: replace `1` with `2` at 20:37-20:38(fn Locations::pos) NOT COVERED
        1628: replace `1` with `0` at 20:37-20:38(fn Locations::pos) NOT COVERED
        1629: replace `+` with `-` at 20:35-20:36(fn Locations::pos) NOT COVERED
        1630: replace `0` with `1` at 31:34-31:35(fn Locations::iter) NOT COVERED
        1631: replace `2` with `3` at 39:23-39:24(fn Locations::len) NOT COVERED
        1632: replace `2` with `1` at 39:23-39:24(fn Locations::len) NOT COVERED
        1633: replace `/` with `*` at 39:21-39:22(fn Locations::len) NOT COVERED
        1634: replace `>=` with `<` at 63:20-63:22(fn SubCapturesPosIter < 'c >::next) NOT COVERED
        1635: replace `>=` with `<=` at 63:20-63:22(fn SubCapturesPosIter < 'c >::next) NOT COVERED
        1636: replace `>=` with `>` at 63:20-63:22(fn SubCapturesPosIter < 'c >::next) NOT COVERED
        1637: replace `1` with `2` at 70:20-70:21(fn SubCapturesPosIter < 'c >::next) NOT COVERED
        1638: replace `1` with `0` at 70:20-70:21(fn SubCapturesPosIter < 'c >::next) NOT COVERED
        1639: replace `>` with `<` at 182:25-182:26(fn Matches < 't, R >::next)
        1640: replace `>` with `<=` at 182:25-182:26(fn Matches < 't, R >::next)
        1641: replace `>` with `>=` at 182:25-182:26(fn Matches < 't, R >::next)
        1642: replace `==` with `!=` at 189:13-189:15(fn Matches < 't, R >::next)
        1643: replace `==` with `!=` at 196:23-196:25(fn Matches < 't, R >::next) NOT COVERED
        1644: replace `>` with `<` at 238:27-238:28(fn CaptureMatches < 't, R >::next) NOT COVERED
        1645: replace `>` with `<=` at 238:27-238:28(fn CaptureMatches < 't, R >::next) NOT COVERED
        1646: replace `>` with `>=` at 238:27-238:28(fn CaptureMatches < 't, R >::next) NOT COVERED
        1647: replace `==` with `!=` at 250:13-250:15(fn CaptureMatches < 't, R >::next) NOT COVERED
        1648: replace `==` with `!=` at 252:23-252:25(fn CaptureMatches < 't, R >::next) NOT COVERED
    src/re_unicode.rs
            47/49(95.92%) mutants survived
        1649: replace `0` with `1` at 184:31-184:32(fn Regex::is_match) NOT COVERED
        1650: replace `0` with `1` at 209:27-209:28(fn Regex::find) NOT COVERED
        1651: replace `0` with `1` at 299:47-299:48(fn Regex::captures) NOT COVERED
        1653: replace `1` with `2` at 497:28-497:29(fn Regex::replace) NOT COVERED
        1654: replace `1` with `0` at 497:28-497:29(fn Regex::replace) NOT COVERED
        1655: replace `0` with `1` at 511:28-511:29(fn Regex::replace_all) NOT COVERED
        1656: replace `0` with `1` at 541:33-541:34(fn Regex::replacen) NOT COVERED
        1657: replace `0` with `1` at 543:27-543:28(fn Regex::replacen) NOT COVERED
        1658: replace `>` with `<` at 543:25-543:26(fn Regex::replacen) NOT COVERED
        1659: replace `>` with `<=` at 543:25-543:26(fn Regex::replacen) NOT COVERED
        1660: replace `>` with `>=` at 543:25-543:26(fn Regex::replacen) NOT COVERED
        1661: replace `>=` with `<` at 543:34-543:36(fn Regex::replacen) NOT COVERED
        1662: replace `>=` with `<=` at 543:34-543:36(fn Regex::replacen) NOT COVERED
        1663: replace `>=` with `>` at 543:34-543:36(fn Regex::replacen) NOT COVERED
        1664: replace `&&` with `||` at 543:29-543:31(fn Regex::replacen) NOT COVERED
        1665: remove `new . push_str (& text [last_match .. m . start ()]) ;` at 546:16-546:58(fn Regex::replacen) NOT COVERED
        1666: remove `new . push_str (& rep) ;` at 547:16-547:34(fn Regex::replacen) NOT COVERED
        1667: remove `new . push_str (& text [last_match ..]) ;` at 550:12-550:45(fn Regex::replacen) NOT COVERED
        1668: replace `0` with `1` at 561:29-561:30(fn Regex::replacen) NOT COVERED
        1669: replace `0` with `1` at 563:23-563:24(fn Regex::replacen) NOT COVERED
        1670: replace `>` with `<` at 563:21-563:22(fn Regex::replacen) NOT COVERED
        1671: replace `>` with `<=` at 563:21-563:22(fn Regex::replacen) NOT COVERED
        1672: replace `>` with `>=` at 563:21-563:22(fn Regex::replacen) NOT COVERED
        1673: replace `>=` with `<` at 563:30-563:32(fn Regex::replacen) NOT COVERED
        1674: replace `>=` with `<=` at 563:30-563:32(fn Regex::replacen) NOT COVERED
        1675: replace `>=` with `>` at 563:30-563:32(fn Regex::replacen) NOT COVERED
        1676: replace `&&` with `||` at 563:25-563:27(fn Regex::replacen) NOT COVERED
        1677: replace `0` with `1` at 567:28-567:29(fn Regex::replacen) NOT COVERED
        1678: remove `new . push_str (& text [last_match .. m . start ()]) ;` at 568:12-568:54(fn Regex::replacen) NOT COVERED
        1679: remove `rep . replace_append (& cap, & mut new) ;` at 569:12-569:46(fn Regex::replacen) NOT COVERED
        1680: remove `new . push_str (& text [last_match ..]) ;` at 572:8-572:41(fn Regex::replacen) NOT COVERED
        1681: replace `0` with `1` at 601:37-601:38(fn Regex::shortest_match) NOT COVERED
        1682: replace `0` with `1` at 660:42-660:43(fn Regex::captures_read) NOT COVERED
        1683: replace `0` with `1` at 701:32-701:33(fn Regex::as_str) NOT COVERED
        1684: replace `>=` with `<` at 769:29-769:31(fn Split < 'r, 't >::next)
        1685: replace `>=` with `<=` at 769:29-769:31(fn Split < 'r, 't >::next)
        1687: replace `0` with `1` at 801:21-801:22(fn SplitN < 'r, 't >::next) NOT COVERED
        1688: replace `==` with `!=` at 801:18-801:20(fn SplitN < 'r, 't >::next) NOT COVERED
        1689: replace `1` with `2` at 804:18-804:19(fn SplitN < 'r, 't >::next) NOT COVERED
        1690: replace `1` with `0` at 804:18-804:19(fn SplitN < 'r, 't >::next) NOT COVERED
        1691: replace `0` with `1` at 805:21-805:22(fn SplitN < 'r, 't >::next) NOT COVERED
        1692: replace `==` with `!=` at 805:18-805:20(fn SplitN < 'r, 't >::next) NOT COVERED
        1693: remove `map . entry (& name, & m) ;` at 975:16-975:36(fn CapturesDebug < 'c, 't >::fmt) NOT COVERED
        1694: remove `map . entry (& slot, & m) ;` at 977:16-977:36(fn CapturesDebug < 'c, 't >::fmt) NOT COVERED
        1695: remove `caps . expand (* self, dst) ;` at 1162:8-1162:31(fn & 'a str::replace_append) NOT COVERED
        1696: remove `dst . push_str ((* self) (caps) . as_ref ()) ;` at 1179:8-1179:44(fn F::replace_append) NOT COVERED
        1697: remove `dst . push_str (self . 0) ;` at 1195:8-1195:28(fn NoExpand < 't >::replace_append) NOT COVERED
    src/sparse.rs
            all 3 mutants survived
        1698: remove `self . dense . push (value) ;` at 49:8-49:30(fn SparseSet::insert) NOT COVERED
        1699: replace `==` with `!=` at 55:26-55:28(fn SparseSet::contains) NOT COVERED
        1700: remove `self . dense . clear () ;` at 59:8-59:26(fn SparseSet::clear) NOT COVERED
    src/utf8.rs
            all 7 mutants killed

1707 generated mutations
303(17.75%) mutants killed, 16(0.94%) by timeout
1404(82.25%) mutants SURVIVED, 1120(65.61%) NOT COVERED
